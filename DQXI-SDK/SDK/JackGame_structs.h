#pragma once

// Name: DQXIS, Version: 1.0.0

#ifdef _MSC_VER
	#pragma pack(push, 0x8)
#endif

namespace SDK
{
//---------------------------------------------------------------------------
// Enums
//---------------------------------------------------------------------------

// Enum JackGame.EJackActionEffectCategory
enum class EJackActionEffectCategory : uint8_t
{
	EJackActionEffectCategory__Muzzle = 0,
	EJackActionEffectCategory__Default = 1,
	EJackActionEffectCategory__Hit = 2,
	EJackActionEffectCategory__Damage = 3,
	EJackActionEffectCategory__MAX = 4
};


// Enum JackGame.EJackActionEffectSpawnTargetType
enum class EJackActionEffectSpawnTargetType : uint8_t
{
	EJackActionEffectSpawnTargetType__None = 0,
	EJackActionEffectSpawnTargetType__World = 1,
	EJackActionEffectSpawnTargetType__Movement = 2,
	EJackActionEffectSpawnTargetType__CasterActor = 3,
	EJackActionEffectSpawnTargetType__TargetActor = 4,
	EJackActionEffectSpawnTargetType__HitActor = 5,
	EJackActionEffectSpawnTargetType__Camera = 6,
	EJackActionEffectSpawnTargetType__MAX = 7
};


// Enum JackGame.EJackActionEffectAxis
enum class EJackActionEffectAxis : uint8_t
{
	EJackActionEffectAxis__X       = 0,
	EJackActionEffectAxis__Y       = 1,
	EJackActionEffectAxis__Z       = 2,
	EJackActionEffectAxis__X_Neg   = 3,
	EJackActionEffectAxis__Y_Neg   = 4,
	EJackActionEffectAxis__Z_Neg   = 5,
	EJackActionEffectAxis__EJackActionEffectAxis_MAX = 6
};


// Enum JackGame.EJackActionEffectEvent
enum class EJackActionEffectEvent : uint8_t
{
	EJackActionEffectEvent__None   = 0,
	EJackActionEffectEvent__SpawnHitEffects = 1,
	EJackActionEffectEvent__NotifyActionHit = 2,
	EJackActionEffectEvent__DeactivateDefaultEffects = 3,
	EJackActionEffectEvent__CallBlueprintEvent = 4,
	EJackActionEffectEvent__Destroy = 5,
	EJackActionEffectEvent__MAX    = 6
};


// Enum JackGame.EJackActionEffectDeactivateDefaultEffectTiming
enum class EJackActionEffectDeactivateDefaultEffectTiming : uint8_t
{
	EJackActionEffectDeactivateDefaultEffectTiming__None = 0,
	EJackActionEffectDeactivateDefaultEffectTiming__MovementAttachProgressComplete = 1,
	EJackActionEffectDeactivateDefaultEffectTiming__MovementComplete = 2,
	EJackActionEffectDeactivateDefaultEffectTiming__SpawnHitEffect = 3,
	EJackActionEffectDeactivateDefaultEffectTiming__Event = 4,
	EJackActionEffectDeactivateDefaultEffectTiming__MAX = 5
};


// Enum JackGame.EJackActionEffectNotifyActionHitTiming
enum class EJackActionEffectNotifyActionHitTiming : uint8_t
{
	EJackActionEffectNotifyActionHitTiming__None = 0,
	EJackActionEffectNotifyActionHitTiming__MovementAttachProgressComplete = 1,
	EJackActionEffectNotifyActionHitTiming__MovementComplete = 2,
	EJackActionEffectNotifyActionHitTiming__SpawnHitEffect = 3,
	EJackActionEffectNotifyActionHitTiming__Event = 4,
	EJackActionEffectNotifyActionHitTiming__MAX = 5
};


// Enum JackGame.EJackActionEffectSpawnHitEffectTiming
enum class EJackActionEffectSpawnHitEffectTiming : uint8_t
{
	EJackActionEffectSpawnHitEffectTiming__None = 0,
	EJackActionEffectSpawnHitEffectTiming__MovementAttachProgressComplete = 1,
	EJackActionEffectSpawnHitEffectTiming__MovementComplete = 2,
	EJackActionEffectSpawnHitEffectTiming__PhysicsCollisionHit = 3,
	EJackActionEffectSpawnHitEffectTiming__Event = 4,
	EJackActionEffectSpawnHitEffectTiming__MAX = 5
};


// Enum JackGame.EJackEquippedWeaponStyle
enum class EJackEquippedWeaponStyle : uint8_t
{
	EJackEquippedWeaponStyle__NOT  = 0,
	EJackEquippedWeaponStyle__SWD  = 1,
	EJackEquippedWeaponStyle__DGR  = 2,
	EJackEquippedWeaponStyle__AXE  = 3,
	EJackEquippedWeaponStyle__STK  = 4,
	EJackEquippedWeaponStyle__BOO  = 5,
	EJackEquippedWeaponStyle__TSW  = 6,
	EJackEquippedWeaponStyle__SPR  = 7,
	EJackEquippedWeaponStyle__ROD  = 8,
	EJackEquippedWeaponStyle__CLW  = 9,
	EJackEquippedWeaponStyle__WHP  = 10,
	EJackEquippedWeaponStyle__DSW  = 11,
	EJackEquippedWeaponStyle__DDG  = 12,
	EJackEquippedWeaponStyle__DAX  = 13,
	EJackEquippedWeaponStyle__DST  = 14,
	EJackEquippedWeaponStyle__DBO  = 15,
	EJackEquippedWeaponStyle__MAX  = 16
};


// Enum JackGame.EJackCharacterCoordinateParts
enum class EJackCharacterCoordinateParts : uint8_t
{
	EJackCharacterCoordinateParts__UpperBody = 0,
	EJackCharacterCoordinateParts__LowerBody = 1,
	EJackCharacterCoordinateParts__Face = 2,
	EJackCharacterCoordinateParts__Hair = 3,
	EJackCharacterCoordinateParts__Beard = 4,
	EJackCharacterCoordinateParts__Accessory = 5,
	EJackCharacterCoordinateParts__Cloth1 = 6,
	EJackCharacterCoordinateParts__Cloth2 = 7,
	EJackCharacterCoordinateParts__Cloth3 = 8,
	EJackCharacterCoordinateParts__MAX = 9
};


// Enum JackGame.EJackCharacterHiddenPurpose
enum class EJackCharacterHiddenPurpose : uint8_t
{
	LVD = 0,
	CutScene = 1,
	Battle = 2,
	AnimNotify = 3,
	DestructibleActor = 4,
	BPRenkei = 5,
	Engine = 6,
	NPCSystem = 7,
	CharacterStatus = 8,
	ActionSystem = 9,
	BattleSystem = 10,
	BattleMonsterAppearance = 11,
	BattleRenkei = 12,
	BattleCamera = 13,
	BattleActionCamera = 14,
	BattlePause = 15,
	BattleAISM = 16,
	OutBattleField = 17,
	MonsterGenerator = 18,
	AnimSM = 19,
	Camera = 20,
	FPSCamera = 21,
	VehicleRide = 22,
	GuestNpc = 23,
	SnowMan = 24,
	DeactivateWeaponEffects = 25,
	CategoryHidden = 26,
	LoadReduction = 27,
	PhotoMode = 28,
	Rura = 29,
	MAX = 30
};


// Enum JackGame.EJackCharacterIgnoreCollisionPurpose
enum class EJackCharacterIgnoreCollisionPurpose : uint8_t
{
	EJackCharacterIgnoreCollisionPurpose__LVD = 0,
	EJackCharacterIgnoreCollisionPurpose__CutScene = 1,
	EJackCharacterIgnoreCollisionPurpose__Battle = 2,
	EJackCharacterIgnoreCollisionPurpose__Gimmick = 3,
	EJackCharacterIgnoreCollisionPurpose__AnimNotify = 4,
	EJackCharacterIgnoreCollisionPurpose__BattleActionAttach = 5,
	EJackCharacterIgnoreCollisionPurpose__Engine = 6,
	EJackCharacterIgnoreCollisionPurpose__AnimSM = 7,
	EJackCharacterIgnoreCollisionPurpose__HiddenControl = 8,
	EJackCharacterIgnoreCollisionPurpose__PlayerPenetration = 9,
	EJackCharacterIgnoreCollisionPurpose__MAX = 10
};


// Enum JackGame.EJackCharacterControlChannel
enum class EJackCharacterControlChannel : uint8_t
{
	EJackCharacterControlChannel__Global = 0,
	EJackCharacterControlChannel__Blueprint = 1,
	EJackCharacterControlChannel__Character = 2,
	EJackCharacterControlChannel__Controller = 3,
	EJackCharacterControlChannel__AnimNotify = 4,
	EJackCharacterControlChannel__Renkei = 5,
	EJackCharacterControlChannel__Action = 6,
	EJackCharacterControlChannel__BattleManager = 7,
	EJackCharacterControlChannel__BattleComponent = 8,
	EJackCharacterControlChannel__BattleAI = 9,
	EJackCharacterControlChannel__BattleResult = 10,
	EJackCharacterControlChannel__CutScene = 11,
	EJackCharacterControlChannel__AnimSM = 12,
	EJackCharacterControlChannel__AnimBP = 13,
	EJackCharacterControlChannel__PartyTalk = 14,
	EJackCharacterControlChannel__Triple = 15,
	EJackCharacterControlChannel__Debug = 16,
	EJackCharacterControlChannel__MAX = 17
};


// Enum JackGame.EJackCharacterCoordinateLoader
enum class EJackCharacterCoordinateLoader : uint8_t
{
	EJackCharacterCoordinateLoader__SyncLoadAndFixup = 0,
	EJackCharacterCoordinateLoader__AsyncLoadAndFixup = 1,
	EJackCharacterCoordinateLoader__AsyncLoadOnly = 2,
	EJackCharacterCoordinateLoader__NoControl = 3,
	EJackCharacterCoordinateLoader__MAX = 4
};


// Enum JackGame.EJackCharacterCoordinateLayer
enum class EJackCharacterCoordinateLayer : uint8_t
{
	EJackCharacterCoordinateLayer__Base = 0,
	EJackCharacterCoordinateLayer__Equipments = 1,
	EJackCharacterCoordinateLayer__Dressup = 2,
	EJackCharacterCoordinateLayer__ExtraEquipments = 3,
	EJackCharacterCoordinateLayer__CutScene = 4,
	EJackCharacterCoordinateLayer__MAX = 5
};


// Enum JackGame.EJackCharacterLookAtPurpose
enum class EJackCharacterLookAtPurpose : uint8_t
{
	EJackCharacterLookAtPurpose__Gimmick = 0,
	EJackCharacterLookAtPurpose__AnimationState = 1,
	EJackCharacterLookAtPurpose__Renkei = 2,
	EJackCharacterLookAtPurpose__MAX = 3
};


// Enum JackGame.EJackCharacterCoordinateLODInfo
enum class EJackCharacterCoordinateLODInfo : uint8_t
{
	EJackCharacterCoordinateLODInfo__Default = 0,
	EJackCharacterCoordinateLODInfo__CutScene = 1,
	EJackCharacterCoordinateLODInfo__MAX = 2
};


// Enum JackGame.EJackCharacterPausePurpose
enum class EJackCharacterPausePurpose : uint8_t
{
	EJackCharacterPausePurpose__LVD = 0,
	EJackCharacterPausePurpose__Battle = 1,
	EJackCharacterPausePurpose__CutScene = 2,
	EJackCharacterPausePurpose__Engine = 3,
	EJackCharacterPausePurpose__CategoryHidden = 4,
	EJackCharacterPausePurpose__LoadReduction = 5,
	EJackCharacterPausePurpose__LoadReductionHidden = 6,
	EJackCharacterPausePurpose__MonsterReduction = 7,
	EJackCharacterPausePurpose__TickInterval = 8,
	EJackCharacterPausePurpose__BattleInitialize = 9,
	EJackCharacterPausePurpose__BattleCharacterManager = 10,
	EJackCharacterPausePurpose__BattleActionCamera = 11,
	EJackCharacterPausePurpose__BattleRenkei = 12,
	EJackCharacterPausePurpose__BattleNigeru = 13,
	EJackCharacterPausePurpose__MAX = 14
};


// Enum JackGame.EJackCharacterCollisionResponse
enum class EJackCharacterCollisionResponse : uint8_t
{
	EJackCharacterCollisionResponse__Instance = 0,
	EJackCharacterCollisionResponse__DefaultObject = 1,
	EJackCharacterCollisionResponse__MAX = 2
};


// Enum JackGame.EJackActionExecStateType
enum class EJackActionExecStateType : uint8_t
{
	EJackActionExecStateType__None = 0,
	EJackActionExecStateType__ActionStart = 1,
	EJackActionExecStateType__ActionAssistMove = 2,
	EJackActionExecStateType__ActionAssistJump = 3,
	EJackActionExecStateType__ActionCast = 4,
	EJackActionExecStateType__ActionShot = 5,
	EJackActionExecStateType__ActionBackJump = 6,
	EJackActionExecStateType__ActionBackMove = 7,
	EJackActionExecStateType__ActionWait = 8,
	EJackActionExecStateType__ActionBP = 9,
	EJackActionExecStateType__ActionEnd = 10,
	EJackActionExecStateType__ActionSpecial = 11,
	EJackActionExecStateType__ActionSpecial2 = 12,
	EJackActionExecStateType__ActionSpecial3 = 13,
	EJackActionExecStateType__ActionBP2 = 14,
	EJackActionExecStateType__ActionBP3 = 15,
	EJackActionExecStateType__MAX  = 16
};


// Enum JackGame.EJackItem_Bag
enum class EJackItem_Bag : uint8_t
{
	EJackItem_Bag__Bag_P001        = 0,
	EJackItem_Bag__Bag_P002        = 1,
	EJackItem_Bag__Bag_P003        = 2,
	EJackItem_Bag__Bag_P004        = 3,
	EJackItem_Bag__Bag_P005        = 4,
	EJackItem_Bag__Bag_P006        = 5,
	EJackItem_Bag__Bag_P007        = 6,
	EJackItem_Bag__Bag_P008        = 7,
	EJackItem_Bag__Bag_Common      = 8,
	EJackItem_Bag__Bag_Equipment   = 9,
	EJackItem_Bag__Bag_Daizinamono = 10,
	EJackItem_Bag__Bag_RecipeBook  = 11,
	EJackItem_Bag__Bag_Exchange    = 12,
	EJackItem_Bag__MAX             = 13
};


// Enum JackGame.EJackActionRequestType
enum class EJackActionRequestType : uint8_t
{
	EJackActionRequestType__None   = 0,
	EJackActionRequestType__Turn   = 1,
	EJackActionRequestType__Other  = 2,
	EJackActionRequestType__MAX    = 3
};


// Enum JackGame.EJackActionPlayType
enum class EJackActionPlayType : uint8_t
{
	EJackActionPlayType__Default   = 0,
	EJackActionPlayType__FieldMode = 1,
	EJackActionPlayType__PreviewMode = 2,
	EJackActionPlayType__MAX       = 3
};


// Enum JackGame.EJackActionConsumeResultType
enum class EJackActionConsumeResultType : uint8_t
{
	EJackActionConsumeResultType__None = 0,
	EJackActionConsumeResultType__Consume = 1,
	EJackActionConsumeResultType__NotConsume = 2,
	EJackActionConsumeResultType__MAX = 3
};


// Enum JackGame.EJackActionResultType
enum class EJackActionResultType : uint8_t
{
	EJackActionResultType__None    = 0,
	EJackActionResultType__Success = 1,
	EJackActionResultType__NotMP   = 2,
	EJackActionResultType__Fuuin   = 3,
	EJackActionResultType__NotConsume = 4,
	EJackActionResultType__Fail    = 5,
	EJackActionResultType__MAX     = 6
};


// Enum JackGame.EJackDataTableReferType
enum class EJackDataTableReferType : uint8_t
{
	EJackDataTableReferType__DTR_None = 0,
	EJackDataTableReferType__DTR_Action = 1,
	EJackDataTableReferType__DTR_Item = 2,
	EJackDataTableReferType__DTR_MeosiSlotItem = 3,
	EJackDataTableReferType__DTR_MeosiSlotMonster = 4,
	EJackDataTableReferType__DTR_Monster = 5,
	EJackDataTableReferType__DTR_NPC = 6,
	EJackDataTableReferType__DTR_OddEffect = 7,
	EJackDataTableReferType__DTR_Renkei = 8,
	EJackDataTableReferType__MAX   = 9
};


// Enum JackGame.EJackActionTextType
enum class EJackActionTextType : uint8_t
{
	EJackActionTextType__None      = 0,
	EJackActionTextType__ActionName = 1,
	EJackActionTextType__Description1 = 2,
	EJackActionTextType__Description3 = 3,
	EJackActionTextType__Description4 = 4,
	EJackActionTextType__Description5 = 5,
	EJackActionTextType__PreKoudou1 = 6,
	EJackActionTextType__PreKoudou2 = 7,
	EJackActionTextType__PreKoudou3 = 8,
	EJackActionTextType__Koudou    = 9,
	EJackActionTextType__ActionYuukou = 10,
	EJackActionTextType__ActionYuukouSosei = 11,
	EJackActionTextType__ActionOddEffectSet = 12,
	EJackActionTextType__ActionOddEffectClear = 13,
	EJackActionTextType__ActionMukou = 14,
	EJackActionTextType__ActionMukouMahotora = 15,
	EJackActionTextType__ActionMukouHP = 16,
	EJackActionTextType__ActionMukouLife = 17,
	EJackActionTextType__ActionOddClearMukou = 18,
	EJackActionTextType__ActionConsumeMukou = 19,
	EJackActionTextType__ActionSibou = 20,
	EJackActionTextType__ActionCritical = 21,
	EJackActionTextType__ActionShotCritical = 22,
	EJackActionTextType__TurnStart = 23,
	EJackActionTextType__OddEffectYuukou = 24,
	EJackActionTextType__SindoNemuri = 25,
	EJackActionTextType__SindoKonran = 26,
	EJackActionTextType__OddEffectYuukouOverlap = 27,
	EJackActionTextType__OddEffectMukou = 28,
	EJackActionTextType__OddEffectMukouMAX = 29,
	EJackActionTextType__OddEffectMukouSindo = 30,
	EJackActionTextType__OddEffectMukouSindoKeep = 31,
	EJackActionTextType__OddEffectMukouOverlap = 32,
	EJackActionTextType__OddEffectMukouStatus = 33,
	EJackActionTextType__OddEffectSlideLimit = 34,
	EJackActionTextType__OddEffectClear = 35,
	EJackActionTextType__OddEffectClearMukou = 36,
	EJackActionTextType__OddEffectInvoke1 = 37,
	EJackActionTextType__OddEffectInvoke1Mukou = 38,
	EJackActionTextType__OddEffectInvoke2 = 39,
	EJackActionTextType__OddEffectInvoke2Mukou = 40,
	EJackActionTextType__OddEffectSibou = 41,
	EJackActionTextType__OddEffectYuukouReverse = 42,
	EJackActionTextType__BattleStart = 43,
	EJackActionTextType__RoundStart = 44,
	EJackActionTextType__Koudou2   = 45,
	EJackActionTextType__Description2 = 46,
	EJackActionTextType__MAX       = 47
};


// Enum JackGame.EJackMessageScriptEventType
enum class EJackMessageScriptEventType : uint8_t
{
	EJackMessageScriptEventType__Motion = 0,
	EJackMessageScriptEventType__FacialUpper = 1,
	EJackMessageScriptEventType__FacialLower = 2,
	EJackMessageScriptEventType__Voice = 3,
	EJackMessageScriptEventType__NoLipSync = 4,
	EJackMessageScriptEventType__ExclamationIcon = 5,
	EJackMessageScriptEventType__QuestionIcon = 6,
	EJackMessageScriptEventType__TurnPc = 7,
	EJackMessageScriptEventType__TurnCamera = 8,
	EJackMessageScriptEventType__RestoreTurn = 9,
	EJackMessageScriptEventType__MAX = 10
};


// Enum JackGame.EJackTextDelegateType
enum class EJackTextDelegateType : uint8_t
{
	EJackTextDelegateType__PrintLineDidEnd = 0,
	EJackTextDelegateType__PrintPageDidEnd = 1,
	EJackTextDelegateType__PrintLastPageDidEnd = 2,
	EJackTextDelegateType__PrintTextDidEnd = 3,
	EJackTextDelegateType__StartPage = 4,
	EJackTextDelegateType__StartSerifuPage = 5,
	EJackTextDelegateType__StartSerifuPageEventFinish = 6,
	EJackTextDelegateType__EnterPage = 7,
	EJackTextDelegateType__ItemSelectionDidChange = 8,
	EJackTextDelegateType__ItemSelectionDidDecide = 9,
	EJackTextDelegateType__WindowClosed = 10,
	EJackTextDelegateType__EJackTextDelegateType_MAX = 11
};


// Enum JackGame.EJackBattleFukidasiTalkConditionType
enum class EJackBattleFukidasiTalkConditionType : uint8_t
{
	EJackBattleFukidasiTalkConditionType__None = 0,
	EJackBattleFukidasiTalkConditionType__SakusenGangan = 1,
	EJackBattleFukidasiTalkConditionType__SakusenBattiri = 2,
	EJackBattleFukidasiTalkConditionType__SakusenIroiro = 3,
	EJackBattleFukidasiTalkConditionType__SakusenMP = 4,
	EJackBattleFukidasiTalkConditionType__SakusenInoti = 5,
	EJackBattleFukidasiTalkConditionType__SakusenMeirei = 6,
	EJackBattleFukidasiTalkConditionType__PlayerAdvantage = 7,
	EJackBattleFukidasiTalkConditionType__MonsterAdvantage = 8,
	EJackBattleFukidasiTalkConditionType__Critical = 9,
	EJackBattleFukidasiTalkConditionType__HPDamage = 10,
	EJackBattleFukidasiTalkConditionType__HPDamageNextFuki = 11,
	EJackBattleFukidasiTalkConditionType__HPPerUnder = 12,
	EJackBattleFukidasiTalkConditionType__MPPerUnder = 13,
	EJackBattleFukidasiTalkConditionType__HPPerOver = 14,
	EJackBattleFukidasiTalkConditionType__MPPerOver = 15,
	EJackBattleFukidasiTalkConditionType__HPOver = 16,
	EJackBattleFukidasiTalkConditionType__MPOver = 17,
	EJackBattleFukidasiTalkConditionType__HPUnder = 18,
	EJackBattleFukidasiTalkConditionType__MPUnder = 19,
	EJackBattleFukidasiTalkConditionType__OddEffectSet = 20,
	EJackBattleFukidasiTalkConditionType__OddEffectStatusSet = 21,
	EJackBattleFukidasiTalkConditionType__OddEffect = 22,
	EJackBattleFukidasiTalkConditionType__OddEffectStatus = 23,
	EJackBattleFukidasiTalkConditionType__InvokeOddEffect = 24,
	EJackBattleFukidasiTalkConditionType__TurnStartOddEffect = 25,
	EJackBattleFukidasiTalkConditionType__EventBattle = 26,
	EJackBattleFukidasiTalkConditionType__BattleChara = 27,
	EJackBattleFukidasiTalkConditionType__DeadMonster = 28,
	EJackBattleFukidasiTalkConditionType__DeadPlayer = 29,
	EJackBattleFukidasiTalkConditionType__NigeruFaild = 30,
	EJackBattleFukidasiTalkConditionType__Nusumu = 31,
	EJackBattleFukidasiTalkConditionType__Action = 32,
	EJackBattleFukidasiTalkConditionType__ActionNextFuki = 33,
	EJackBattleFukidasiTalkConditionType__GuardSuccess = 34,
	EJackBattleFukidasiTalkConditionType__ResFuki = 35,
	EJackBattleFukidasiTalkConditionType__AppearMetal = 36,
	EJackBattleFukidasiTalkConditionType__KilledMetal = 37,
	EJackBattleFukidasiTalkConditionType__ManyDead = 38,
	EJackBattleFukidasiTalkConditionType__LevelUp = 39,
	EJackBattleFukidasiTalkConditionType__NormalDrop = 40,
	EJackBattleFukidasiTalkConditionType__RareDrop = 41,
	EJackBattleFukidasiTalkConditionType__EnemyVeryStrong = 42,
	EJackBattleFukidasiTalkConditionType__NoInput = 43,
	EJackBattleFukidasiTalkConditionType__MonsterEncount = 44,
	EJackBattleFukidasiTalkConditionType__RoundCount = 45,
	EJackBattleFukidasiTalkConditionType__DeadAction = 46,
	EJackBattleFukidasiTalkConditionType__CharacterRoundCount = 47,
	EJackBattleFukidasiTalkConditionType__CharacterRoundOver = 48,
	EJackBattleFukidasiTalkConditionType__SPFlag = 49,
	EJackBattleFukidasiTalkConditionType__MAX = 50
};


// Enum JackGame.EJackBattleFukidasiTalkCondChara
enum class EJackBattleFukidasiTalkCondChara : uint8_t
{
	EJackBattleFukidasiTalkCondChara__None = 0,
	EJackBattleFukidasiTalkCondChara__CondChara = 1,
	EJackBattleFukidasiTalkCondChara__NoCondChara = 2,
	EJackBattleFukidasiTalkCondChara__MAX = 3
};


// Enum JackGame.EJackBattleFukidasiTalkTarget
enum class EJackBattleFukidasiTalkTarget : uint8_t
{
	EJackBattleFukidasiTalkTarget__None = 0,
	EJackBattleFukidasiTalkTarget__Party = 1,
	EJackBattleFukidasiTalkTarget__Friend = 2,
	EJackBattleFukidasiTalkTarget__Enemys = 3,
	EJackBattleFukidasiTalkTarget__Boss = 4,
	EJackBattleFukidasiTalkTarget__CharacterID = 5,
	EJackBattleFukidasiTalkTarget__OtherCharacter = 6,
	EJackBattleFukidasiTalkTarget__MonsterBig = 7,
	EJackBattleFukidasiTalkTarget__MonsterSmall = 8,
	EJackBattleFukidasiTalkTarget__MonsterMetal = 9,
	EJackBattleFukidasiTalkTarget__MonsterDance = 10,
	EJackBattleFukidasiTalkTarget__MonsterHorror = 11,
	EJackBattleFukidasiTalkTarget__MonsterInsect = 12,
	EJackBattleFukidasiTalkTarget__MonsterCat = 13,
	EJackBattleFukidasiTalkTarget__MonsterBird = 14,
	EJackBattleFukidasiTalkTarget__MonsterMagic = 15,
	EJackBattleFukidasiTalkTarget__MonsterWarrior = 16,
	EJackBattleFukidasiTalkTarget__MonsterMimic = 17,
	EJackBattleFukidasiTalkTarget__MonsterUru1 = 18,
	EJackBattleFukidasiTalkTarget__MonsterUru2 = 19,
	EJackBattleFukidasiTalkTarget__MonsterUru = 20,
	EJackBattleFukidasiTalkTarget__MonsterNiz = 21,
	EJackBattleFukidasiTalkTarget__MonsterHome = 22,
	EJackBattleFukidasiTalkTarget__MonsterKira = 23,
	EJackBattleFukidasiTalkTarget__MonsterYaruki = 24,
	EJackBattleFukidasiTalkTarget__MonsterTyui = 25,
	EJackBattleFukidasiTalkTarget__MonsterReisei = 26,
	EJackBattleFukidasiTalkTarget__MonsterAseri = 27,
	EJackBattleFukidasiTalkTarget__MonsterIkari = 28,
	EJackBattleFukidasiTalkTarget__MonsterKansya = 29,
	EJackBattleFukidasiTalkTarget__MonsterYorokobi = 30,
	EJackBattleFukidasiTalkTarget__MonsterKonran = 31,
	EJackBattleFukidasiTalkTarget__MAX = 32
};


// Enum JackGame.EJackBattleCameraCategory
enum class EJackBattleCameraCategory : uint8_t
{
	EJackBattleCameraCategory__UnknownCamera = 0,
	EJackBattleCameraCategory__BattleStartMenuCamera = 1,
	EJackBattleCameraCategory__AutoCommandCamera = 2,
	EJackBattleCameraCategory__ActionCamera = 3,
	EJackBattleCameraCategory__MonsterAppearCamera = 4,
	EJackBattleCameraCategory__MAX = 5
};


// Enum JackGame.EJackBattleFieldEffectStatus
enum class EJackBattleFieldEffectStatus : uint8_t
{
	EJackBattleFieldEffectStatus__None = 0,
	EJackBattleFieldEffectStatus__AkaiKiri = 1,
	EJackBattleFieldEffectStatus__Fubuki = 2,
	EJackBattleFieldEffectStatus__TokiWoUbau = 3,
	EJackBattleFieldEffectStatus__YamiHomerosu2 = 4,
	EJackBattleFieldEffectStatus__MAX = 5
};


// Enum JackGame.EJackBattleResult
enum class EJackBattleResult : uint8_t
{
	EJackBattleResult__None        = 0,
	EJackBattleResult__Win         = 1,
	EJackBattleResult__Lose        = 2,
	EJackBattleResult__Escape      = 3,
	EJackBattleResult__MAX         = 4
};


// Enum JackGame.EJackFadeColor
enum class EJackFadeColor : uint8_t
{
	EJackFadeColor__Black          = 0,
	EJackFadeColor__White          = 1,
	EJackFadeColor__Red            = 2,
	EJackFadeColor__MAX            = 3
};


// Enum JackGame.EJackBattleFoliageDitherBattleFieldType
enum class EJackBattleFoliageDitherBattleFieldType : uint8_t
{
	EJackBattleFoliageDitherBattleFieldType__Default = 0,
	EJackBattleFoliageDitherBattleFieldType__AutoCommandCamera = 1,
	EJackBattleFoliageDitherBattleFieldType__OtherCamera = 2,
	EJackBattleFoliageDitherBattleFieldType__MAX = 3
};


// Enum JackGame.EJackBattleFoliageDitherRangeType
enum class EJackBattleFoliageDitherRangeType : uint8_t
{
	EJackBattleFoliageDitherRangeType__Default = 0,
	EJackBattleFoliageDitherRangeType__MonsterAppear = 1,
	EJackBattleFoliageDitherRangeType__ActionCamera = 2,
	EJackBattleFoliageDitherRangeType__MAX = 3
};


// Enum JackGame.EJackMight
enum class EJackMight : uint8_t
{
	EJackMight__Unknown            = 0,
	EJackMight__Player             = 1,
	EJackMight__Monster            = 2,
	EJackMight__MAX                = 3
};


// Enum JackGame.EJackBattleAdditionalResourceType
enum class EJackBattleAdditionalResourceType : uint8_t
{
	EJackBattleAdditionalResourceType__None = 0,
	EJackBattleAdditionalResourceType__KiokusousituP002Voice = 1,
	EJackBattleAdditionalResourceType__MAX = 2
};


// Enum JackGame.EJackBattlePreemptiveAttack
enum class EJackBattlePreemptiveAttack : uint8_t
{
	EJackBattlePreemptiveAttack__None = 0,
	EJackBattlePreemptiveAttack__Player = 1,
	EJackBattlePreemptiveAttack__Monster = 2,
	EJackBattlePreemptiveAttack__MAX = 3
};


// Enum JackGame.EJackBattleEncount
enum class EJackBattleEncount : uint8_t
{
	EJackBattleEncount__Symbol     = 0,
	EJackBattleEncount__Random     = 1,
	EJackBattleEncount__Event      = 2,
	EJackBattleEncount__MAX        = 3
};


// Enum JackGame.EJackHitStopPresetType
enum class EJackHitStopPresetType : uint8_t
{
	EJackHitStopPresetType__None   = 0,
	EJackHitStopPresetType__N_SS   = 1,
	EJackHitStopPresetType__N_S    = 2,
	EJackHitStopPresetType__N_M    = 3,
	EJackHitStopPresetType__N_L    = 4,
	EJackHitStopPresetType__N_LL   = 5,
	EJackHitStopPresetType__SS_SS  = 6,
	EJackHitStopPresetType__SS_S   = 7,
	EJackHitStopPresetType__SS_M   = 8,
	EJackHitStopPresetType__SS_L   = 9,
	EJackHitStopPresetType__SS_LL  = 10,
	EJackHitStopPresetType__S_S    = 11,
	EJackHitStopPresetType__S_M    = 12,
	EJackHitStopPresetType__S_L    = 13,
	EJackHitStopPresetType__S_LL   = 14,
	EJackHitStopPresetType__M_M    = 15,
	EJackHitStopPresetType__M_L    = 16,
	EJackHitStopPresetType__M_LL   = 17,
	EJackHitStopPresetType__L_L    = 18,
	EJackHitStopPresetType__L_LL   = 19,
	EJackHitStopPresetType__LL_LL  = 20,
	EJackHitStopPresetType__UN1    = 21,
	EJackHitStopPresetType__UN2    = 22,
	EJackHitStopPresetType__MAX    = 23
};


// Enum JackGame.EJackInteractor
enum class EJackInteractor : uint8_t
{
	EJackInteractor__Unknown       = 0,
	EJackInteractor__Hero          = 1,
	EJackInteractor__Hero_Fish     = 2,
	EJackInteractor__NPC           = 3,
	EJackInteractor__Uma           = 4,
	EJackInteractor__Eggurobo      = 5,
	EJackInteractor__Sukaruraida   = 6,
	EJackInteractor__Doragonraida  = 7,
	EJackInteractor__Biraida       = 8,
	EJackInteractor__Dexyurahanraido = 9,
	EJackInteractor__Herukattya    = 10,
	EJackInteractor__UrufuDoragon  = 11,
	EJackInteractor__MeidenDooru   = 12,
	EJackInteractor__KiRaaPansar   = 13,
	EJackInteractor__SuraimuNaito  = 14,
	EJackInteractor__Gorem         = 15,
	EJackInteractor__Gondora       = 16,
	EJackInteractor__MAX           = 17
};


// Enum JackGame.EJackGamePlayerCondition
enum class EJackGamePlayerCondition : uint8_t
{
	InputDisable = 0,
	MoveInputDisable = 1,
	LookInputDisabled = 2,
	JumpDisabled = 3,
	AutoRunDisabled = 4,
	DisplayMainMenuDisabled = 5,
	DisplayMiniMapDisabled = 6,
	DisplayWorldMapDisabled = 7,
	DisplayFukidasiDisabled = 8,
	DisplaySyouLocationTitleDisabled = 9,
	MovementDisabled = 10,
	FieldActionDisabled = 11,
	MoveActionDisabled = 12,
	BenriButtonActionDisabled = 13,
	DisplayActionGuideDisabled = 14,
	RuraDisabled = 15,
	RiremitoDisabled = 16,
	SymbolEncountDisabled = 17,
	MountAndUnmountVehicleDisabled = 18,
	DisplayNorimonoGaugeDisabled = 19,
	LazyMessageDisabled = 20,
	RunningDisabledWhileLoading = 21,
	RunningDisabled = 22,
	VehicleRunningDisabled = 23,
	HideControlGuideUI = 24,
	PhotoModeDisable = 25,
	MAX  = 26
};


// Enum JackGame.EJackPlayerControlPossessor
enum class EJackPlayerControlPossessor : uint8_t
{
	EJackPlayerControlPossessor__None = 0,
	EJackPlayerControlPossessor__Battle = 1,
	EJackPlayerControlPossessor__FieldAttack = 2,
	EJackPlayerControlPossessor__FieldAttackEncount = 3,
	EJackPlayerControlPossessor__ActionGuideHelpTrigger = 4,
	EJackPlayerControlPossessor__PlayerTriggerVolume = 5,
	EJackPlayerControlPossessor__NakamaKaiwa = 6,
	EJackPlayerControlPossessor__PhotoMode = 7,
	EJackPlayerControlPossessor__ActionGuideHelp = 8,
	EJackPlayerControlPossessor__Syougou = 9,
	EJackPlayerControlPossessor__Tyuuyakirikae = 10,
	EJackPlayerControlPossessor__FirstPersonViewCamera = 11,
	EJackPlayerControlPossessor__MenuHUD = 12,
	EJackPlayerControlPossessor__BenriButtonAction = 13,
	EJackPlayerControlPossessor__RandomEncount = 14,
	EJackPlayerControlPossessor__FieldAction = 15,
	EJackPlayerControlPossessor__VehicleSplash = 16,
	EJackPlayerControlPossessor__MiniGame = 17,
	EJackPlayerControlPossessor__Event = 18,
	EJackPlayerControlPossessor__DontGo = 19,
	EJackPlayerControlPossessor__SymbolEncount = 20,
	EJackPlayerControlPossessor__LazyMessage = 21,
	EJackPlayerControlPossessor__MapJump = 22,
	EJackPlayerControlPossessor__Rura = 23,
	EJackPlayerControlPossessor__VehicleSpawn = 24,
	EJackPlayerControlPossessor__ReturnToAutoSaveVolume = 25,
	EJackPlayerControlPossessor__MAX = 26
};


// Enum JackGame.EJackGamePlayerConditionControlPurpose
enum class EJackGamePlayerConditionControlPurpose : uint8_t
{
	EJackGamePlayerConditionControlPurpose__Level = 0,
	EJackGamePlayerConditionControlPurpose__Battle = 1,
	EJackGamePlayerConditionControlPurpose__BattleCameraMode = 2,
	EJackGamePlayerConditionControlPurpose__Gimmick = 3,
	EJackGamePlayerConditionControlPurpose__Gimmick3Steps = 4,
	EJackGamePlayerConditionControlPurpose__MiniGame = 5,
	EJackGamePlayerConditionControlPurpose__SyougouKakutoku = 6,
	EJackGamePlayerConditionControlPurpose__TyuuyaKirikae = 7,
	EJackGamePlayerConditionControlPurpose__NakamaKaiwa = 8,
	EJackGamePlayerConditionControlPurpose__FieldAttack = 9,
	EJackGamePlayerConditionControlPurpose__BPControl = 10,
	EJackGamePlayerConditionControlPurpose__CharacterJump = 11,
	EJackGamePlayerConditionControlPurpose__VehicleJump = 12,
	EJackGamePlayerConditionControlPurpose__DebugCamera = 13,
	EJackGamePlayerConditionControlPurpose__FirstParsonCamera = 14,
	EJackGamePlayerConditionControlPurpose__HUD = 15,
	EJackGamePlayerConditionControlPurpose__Event = 16,
	EJackGamePlayerConditionControlPurpose__VehicleMount = 17,
	EJackGamePlayerConditionControlPurpose__VehicleSplash = 18,
	EJackGamePlayerConditionControlPurpose__InRuraRiremito = 19,
	EJackGamePlayerConditionControlPurpose__PlayingME = 20,
	EJackGamePlayerConditionControlPurpose__NPCTalk = 21,
	EJackGamePlayerConditionControlPurpose__ReturnToAutoSave = 22,
	EJackGamePlayerConditionControlPurpose__BattleSubSequence = 23,
	EJackGamePlayerConditionControlPurpose__System = 24,
	EJackGamePlayerConditionControlPurpose__VehicleSpawn = 25,
	EJackGamePlayerConditionControlPurpose__LevelVisibleVolume = 26,
	EJackGamePlayerConditionControlPurpose__MAX = 27
};


// Enum JackGame.EJackSenaHairStyle
enum class EJackSenaHairStyle : uint8_t
{
	EJackSenaHairStyle__Long       = 0,
	EJackSenaHairStyle__Short      = 1,
	EJackSenaHairStyle__MAX        = 2
};


// Enum JackGame.EJackWhaleCharacterForm
enum class EJackWhaleCharacterForm : uint8_t
{
	EJackWhaleCharacterForm__Normal = 0,
	EJackWhaleCharacterForm__Enhanced = 1,
	EJackWhaleCharacterForm__MAX   = 2
};


// Enum JackGame.EJackHeroCharacterForm
enum class EJackHeroCharacterForm : uint8_t
{
	EJackHeroCharacterForm__Human  = 0,
	EJackHeroCharacterForm__Fish   = 1,
	EJackHeroCharacterForm__MAX    = 2
};


// Enum JackGame.EJackPlayerControlCharacter
enum class EJackPlayerControlCharacter : uint8_t
{
	EJackPlayerControlCharacter__Hero = 0,
	EJackPlayerControlCharacter__Ship = 1,
	EJackPlayerControlCharacter__Whale = 2,
	EJackPlayerControlCharacter__MAX = 3
};


// Enum JackGame.EJackVehicleModelId
enum class EJackVehicleModelId : uint8_t
{
	EJackVehicleModelId__None      = 0,
	EJackVehicleModelId__V001_E001 = 1,
	EJackVehicleModelId__V001_E002 = 2,
	EJackVehicleModelId__V001_E003 = 3,
	EJackVehicleModelId__V001_E004 = 4,
	EJackVehicleModelId__V001_E005 = 5,
	EJackVehicleModelId__V001_E006 = 6,
	EJackVehicleModelId__V011_E001 = 7,
	EJackVehicleModelId__V011_E002 = 8,
	EJackVehicleModelId__V012_E001 = 9,
	EJackVehicleModelId__V101_E001 = 10,
	EJackVehicleModelId__V101_E002 = 11,
	EJackVehicleModelId__V101_E003 = 12,
	EJackVehicleModelId__V102_E001 = 13,
	EJackVehicleModelId__V102_E002 = 14,
	EJackVehicleModelId__V102_E003 = 15,
	EJackVehicleModelId__V102_E004 = 16,
	EJackVehicleModelId__V103_E001 = 17,
	EJackVehicleModelId__V103_E002 = 18,
	EJackVehicleModelId__V103_E003 = 19,
	EJackVehicleModelId__V103_E004 = 20,
	EJackVehicleModelId__V104_E001 = 21,
	EJackVehicleModelId__V104_E002 = 22,
	EJackVehicleModelId__V104_E003 = 23,
	EJackVehicleModelId__V105_E001 = 24,
	EJackVehicleModelId__V105_E002 = 25,
	EJackVehicleModelId__V105_E003 = 26,
	EJackVehicleModelId__V106_E001 = 27,
	EJackVehicleModelId__V106_E002 = 28,
	EJackVehicleModelId__V106_E003 = 29,
	EJackVehicleModelId__V201_E001 = 30,
	EJackVehicleModelId__V201_E002 = 31,
	EJackVehicleModelId__V201_E003 = 32,
	EJackVehicleModelId__V201_E004 = 33,
	EJackVehicleModelId__V202_E001 = 34,
	EJackVehicleModelId__V202_E002 = 35,
	EJackVehicleModelId__V202_E003 = 36,
	EJackVehicleModelId__V202_E004 = 37,
	EJackVehicleModelId__V203_E001 = 38,
	EJackVehicleModelId__V203_E002 = 39,
	EJackVehicleModelId__V203_E003 = 40,
	EJackVehicleModelId__V204_E001 = 41,
	EJackVehicleModelId__V204_E002 = 42,
	EJackVehicleModelId__V204_E003 = 43,
	EJackVehicleModelId__V205_E001 = 44,
	EJackVehicleModelId__V205_E002 = 45,
	EJackVehicleModelId__V205_E003 = 46,
	EJackVehicleModelId__V205_E004 = 47,
	EJackVehicleModelId__MAX       = 48
};


// Enum JackGame.EJackVehicle
enum class EJackVehicle : uint8_t
{
	None             = 0,
	Uma              = 1, // Horse
	Eggurobo         = 2, // Eggsoskeleton
	Sukaruraida      = 3, // Skullrider's Steed
	Doragonraida     = 4, // Dragon Rider
	Biraida          = 5, // Horknight Hornet
	Dexyurahanraido  = 6, // Headless Horseman Horse?
	Herukattya       = 7, // Face Invader
	UrufuDoragon     = 8,
	MeidenDooru      = 9,
	KiRaaPansar      = 10,
	SuraimuNaito     = 11, // Slime Knight
	Gorem            = 12,
	Gondora          = 13,
	Ship             = 14,
	Whale            = 15,
	Sakana           = 16,
	Player           = 17,
	MAX              = 18
};


// Enum JackGame.EJackBGMVolumeResult
enum class EJackBGMVolumeResult : uint8_t
{
	EJackBGMVolumeResult__None     = 0,
	EJackBGMVolumeResult__FirstInVolume = 1,
	EJackBGMVolumeResult__ChangeInVolume = 2,
	EJackBGMVolumeResult__LastOutVolume = 3,
	EJackBGMVolumeResult__InOverlapVolume = 4,
	EJackBGMVolumeResult__OutOverlapVolume = 5,
	EJackBGMVolumeResult__MAX      = 6
};


// Enum JackGame.EJackMusicEvent
enum class EJackMusicEvent : uint8_t
{
	EJackMusicEvent__BGMChanged    = 0,
	EJackMusicEvent__MEPlayStart   = 1,
	EJackMusicEvent__MEPlayFinished = 2,
	EJackMusicEvent__Destroy       = 3,
	EJackMusicEvent__EJackMusicEvent_MAX = 4
};


// Enum JackGame.EJackLanguage
enum class EJackLanguage : uint8_t
{
	EJackLanguage__Japanese        = 0,
	EJackLanguage__TraditionalChinese = 1,
	EJackLanguage__SimplifiedChinese = 2,
	EJackLanguage__Korean          = 3,
	EJackLanguage__EnglishGB       = 4,
	EJackLanguage__French          = 5,
	EJackLanguage__Italian         = 6,
	EJackLanguage__German          = 7,
	EJackLanguage__Spanish         = 8,
	EJackLanguage__MAX             = 9
};


// Enum JackGame.EJackSEADCategory
enum class EJackSEADCategory : uint8_t
{
	EJackSEADCategory__Music       = 0,
	EJackSEADCategory__ME          = 1,
	EJackSEADCategory__SE_System   = 2,
	EJackSEADCategory__SE_PC_Move  = 3,
	EJackSEADCategory__SE_Monster_Move = 4,
	EJackSEADCategory__SE_Weather  = 5,
	EJackSEADCategory__SE_FieldSound = 6,
	EJackSEADCategory__SE_Battle   = 7,
	EJackSEADCategory__SE_CS       = 8,
	EJackSEADCategory__SE_Door     = 9,
	EJackSEADCategory__SE_IndoorSound = 10,
	EJackSEADCategory__SE_NPC_Move = 11,
	EJackSEADCategory__SE_Minigame = 12,
	EJackSEADCategory__SE_PC_Footstep = 13,
	EJackSEADCategory__SE_NPC_Footstep = 14,
	EJackSEADCategory__SE_MON_Footstep = 15,
	EJackSEADCategory__SE_Vehicle_Footstep = 16,
	EJackSEADCategory__SE_Vehicle_Move = 17,
	EJackSEADCategory__SE_OneOffEvent = 18,
	EJackSEADCategory__SE_IE       = 19,
	EJackSEADCategory__SE_Torch    = 20,
	EJackSEADCategory__SE_B020_Monster = 21,
	EJackSEADCategory__Voice       = 22,
	EJackSEADCategory__Voice_P001  = 23,
	EJackSEADCategory__Voice_NakamaBTL = 24,
	EJackSEADCategory__MAX         = 25
};


// Enum JackGame.EJackNPCActionTypeInBPControl
enum class EJackNPCActionTypeInBPControl : uint8_t
{
	EJackNPCActionTypeInBPControl__NoAction = 0,
	EJackNPCActionTypeInBPControl__Turn = 1,
	EJackNPCActionTypeInBPControl__Animation = 2,
	EJackNPCActionTypeInBPControl__MAX = 3
};


// Enum JackGame.EJackCharacter
enum class EJackCharacter : uint8_t
{
	EJackCharacter__P001           = 0,
	EJackCharacter__P002           = 1,
	EJackCharacter__P003           = 2,
	EJackCharacter__P004           = 3,
	EJackCharacter__P005           = 4,
	EJackCharacter__P006           = 5,
	EJackCharacter__P007           = 6,
	EJackCharacter__P008           = 7,
	EJackCharacter__GN00001        = 8,
	EJackCharacter__GN00002        = 9,
	EJackCharacter__GN00003        = 10,
	EJackCharacter__GN00004        = 11,
	EJackCharacter__GN00005        = 12,
	EJackCharacter__GN00006        = 13,
	EJackCharacter__GN00007        = 14,
	EJackCharacter__GN00008        = 15,
	EJackCharacter__GN00009        = 16,
	EJackCharacter__GN00010        = 17,
	EJackCharacter__GN00011        = 18,
	EJackCharacter__GN00012        = 19,
	EJackCharacter__GN00013        = 20,
	EJackCharacter__GN00014        = 21,
	EJackCharacter__GN00015        = 22,
	EJackCharacter__GN00016        = 23,
	EJackCharacter__GN00017        = 24,
	EJackCharacter__GN00018        = 25,
	EJackCharacter__GN00019        = 26,
	EJackCharacter__GN00020        = 27,
	EJackCharacter__GN00021        = 28,
	EJackCharacter__GN00022        = 29,
	EJackCharacter__GN00023        = 30,
	EJackCharacter__GN00024        = 31,
	EJackCharacter__GN00025        = 32,
	EJackCharacter__GN00026        = 33,
	EJackCharacter__GN00027        = 34,
	EJackCharacter__GN00028        = 35,
	EJackCharacter__GN00029        = 36,
	EJackCharacter__GN00030        = 37,
	EJackCharacter__GN00031        = 38,
	EJackCharacter__GN00032        = 39,
	EJackCharacter__GN00033        = 40,
	EJackCharacter__GN00034        = 41,
	EJackCharacter__GN00035        = 42,
	EJackCharacter__GN00036        = 43,
	EJackCharacter__GN00037        = 44,
	EJackCharacter__GN00038        = 45,
	EJackCharacter__GN00039        = 46,
	EJackCharacter__GN00040        = 47,
	EJackCharacter__GN00041        = 48,
	EJackCharacter__GN00042        = 49,
	EJackCharacter__GN00043        = 50,
	EJackCharacter__Unknown        = 51,
	EJackCharacter__Anyone         = 52,
	EJackCharacter__MAX            = 53
};


// Enum JackGame.EJackPlayableMovement
enum class EJackPlayableMovement : uint8_t
{
	EJackPlayableMovement__None    = 0,
	EJackPlayableMovement__Default = 1,
	EJackPlayableMovement__Field   = 2,
	EJackPlayableMovement__NavMesh = 3,
	EJackPlayableMovement__Osihiki = 4,
	EJackPlayableMovement__RopeClimb = 5,
	EJackPlayableMovement__SuriSuri = 6,
	EJackPlayableMovement__Tunawatari = 7,
	EJackPlayableMovement__GakeNobori = 8,
	EJackPlayableMovement__Ladder  = 9,
	EJackPlayableMovement__V104Gake = 10,
	EJackPlayableMovement__Battle  = 11,
	EJackPlayableMovement__UmaRace = 12,
	EJackPlayableMovement__MAX     = 13
};


// Enum JackGame.EJackPlayableMovementDefault
enum class EJackPlayableMovementDefault : uint8_t
{
	EJackPlayableMovementDefault__None = 0,
	EJackPlayableMovementDefault__Idle = 1,
	EJackPlayableMovementDefault__Shiver = 2,
	EJackPlayableMovementDefault__Heat = 3,
	EJackPlayableMovementDefault__Dance = 4,
	EJackPlayableMovementDefault__WindBreak = 5,
	EJackPlayableMovementDefault__ThrustWay = 6,
	EJackPlayableMovementDefault__MAX = 7
};


// Enum JackGame.EJackPipipiType
enum class EJackPipipiType : uint8_t
{
	EJackPipipiType__None          = 0,
	EJackPipipiType__Middle        = 1,
	EJackPipipiType__Lowest        = 2,
	EJackPipipiType__Lower         = 3,
	EJackPipipiType__Higher        = 4,
	EJackPipipiType__Highest       = 5,
	EJackPipipiType__Default       = 6,
	EJackPipipiType__Unknown       = 7,
	EJackPipipiType__MAX           = 8
};


// Enum JackGame.EJackPlayableMovementAnimMontage
enum class EJackPlayableMovementAnimMontage : uint8_t
{
	EJackPlayableMovementAnimMontage__Wait = 0,
	EJackPlayableMovementAnimMontage__Turn = 1,
	EJackPlayableMovementAnimMontage__MAX = 2
};


// Enum JackGame.EJackLadderMovementState
enum class EJackLadderMovementState : uint8_t
{
	EJackLadderMovementState__Idle = 0,
	EJackLadderMovementState__Up   = 1,
	EJackLadderMovementState__Down = 2,
	EJackLadderMovementState__MAX  = 3
};


// Enum JackGame.EJackVehicleShipAnim
enum class EJackVehicleShipAnim : uint8_t
{
	EJackVehicleShipAnim__SHIP_SINK = 0,
	EJackVehicleShipAnim__SHIP_LEAP = 1,
	EJackVehicleShipAnim__MAX      = 2
};


// Enum JackGame.EJackUnmountNaviCheckOffPurpose
enum class EJackUnmountNaviCheckOffPurpose : uint8_t
{
	EJackUnmountNaviCheckOffPurpose__Volume = 0,
	EJackUnmountNaviCheckOffPurpose__MAX = 1
};


// Enum JackGame.EJackVehcileMonsterSplashScoketType
enum class EJackVehcileMonsterSplashScoketType : uint8_t
{
	EJackVehcileMonsterSplashScoketType__Free = 0,
	EJackVehcileMonsterSplashScoketType__SnapToTarget = 1,
	EJackVehcileMonsterSplashScoketType__SnapLocationProjectXY = 2,
	EJackVehcileMonsterSplashScoketType__MAX = 3
};


// Enum JackGame.EJackMonsterFieldDamageReaction
enum class EJackMonsterFieldDamageReaction : uint8_t
{
	EJackMonsterFieldDamageReaction__None = 0,
	EJackMonsterFieldDamageReaction__BlowAway = 1,
	EJackMonsterFieldDamageReaction__SwordDamage = 2,
	EJackMonsterFieldDamageReaction__GolemPunch = 3,
	EJackMonsterFieldDamageReaction__MAX = 4
};


// Enum JackGame.EJackActionGuide
enum class EJackActionGuide : uint8_t
{
	EJackActionGuide__None         = 0,
	EJackActionGuide__Normal       = 1,
	EJackActionGuide__MAX          = 2
};


// Enum JackGame.EJackActionCursor
enum class EJackActionCursor : uint8_t
{
	EJackActionCursor__Arrow       = 0,
	EJackActionCursor__ExclamationMark = 1,
	EJackActionCursor__NPCNormal   = 2,
	EJackActionCursor__FieldAttackSword = 3,
	EJackActionCursor__FieldAttackBowgun = 4,
	EJackActionCursor__None        = 5,
	EJackActionCursor__MAX         = 6
};


// Enum JackGame.EJackKeys
enum class EJackKeys : uint8_t
{
	EJackKeys__DPad_Up             = 0,
	EJackKeys__DPad_Down           = 1,
	EJackKeys__DPad_Left           = 2,
	EJackKeys__DPad_Right          = 3,
	EJackKeys__FaceButton_Top      = 4,
	EJackKeys__FaceButton_Bottom   = 5,
	EJackKeys__FaceButton_Left     = 6,
	EJackKeys__FaceButton_Right    = 7,
	EJackKeys__L1                  = 8,
	EJackKeys__L2                  = 9,
	EJackKeys__L3                  = 10,
	EJackKeys__R1                  = 11,
	EJackKeys__R2                  = 12,
	EJackKeys__R3                  = 13,
	EJackKeys__Start               = 14,
	EJackKeys__Select              = 15,
	EJackKeys__Keyboard_Up         = 16,
	EJackKeys__Keyboard_Down       = 17,
	EJackKeys__Keyboard_Left       = 18,
	EJackKeys__Keyboard_Right      = 19,
	EJackKeys__Keyboard_Enter      = 20,
	EJackKeys__Keyboard_BackSpace  = 21,
	EJackKeys__PhysicalButtonMax   = 22,
	EJackKeys__Up                  = 23,
	EJackKeys__Down                = 24,
	EJackKeys__Left                = 25,
	EJackKeys__Right               = 26,
	EJackKeys__Convenience         = 27,
	EJackKeys__Cancel              = 28,
	EJackKeys__Enter               = 29,
	EJackKeys__Any                 = 30,
	EJackKeys__None                = 31,
	EJackKeys__Invalid             = 32,
	EJackKeys__MAX                 = 33
};


// Enum JackGame.EJackEquipmentRegion
enum class EJackEquipmentRegion : uint8_t
{
	EJackEquipmentRegion__Unknown  = 0,
	EJackEquipmentRegion__Handedness = 1,
	EJackEquipmentRegion__Hand     = 2,
	EJackEquipmentRegion__Head     = 3,
	EJackEquipmentRegion__Body     = 4,
	EJackEquipmentRegion__Accessory1 = 5,
	EJackEquipmentRegion__Accessory2 = 6,
	EJackEquipmentRegion__MAX      = 7
};


// Enum JackGame.EJackPassiveTokugiType
enum class EJackPassiveTokugiType : uint8_t
{
	EJackPassiveTokugiType__Unknown = 0,
	EJackPassiveTokugiType__Tikara_Plus = 1,
	EJackPassiveTokugiType__Minomamori_Plus = 2,
	EJackPassiveTokugiType__Subayasa_Plus = 3,
	EJackPassiveTokugiType__Kiyousa_Plus = 4,
	EJackPassiveTokugiType__Miryoku_Plus = 5,
	EJackPassiveTokugiType__KougekiMaryoku_Plus = 6,
	EJackPassiveTokugiType__KaifukuMaryoku_Plus = 7,
	EJackPassiveTokugiType__MaxHP_Plus = 8,
	EJackPassiveTokugiType__MaxMP_Plus = 9,
	EJackPassiveTokugiType__Kougekiryoku_Plus = 10,
	EJackPassiveTokugiType__Syubiryoku_Plus = 11,
	EJackPassiveTokugiType__HPKyuuSyuuRate_Plus = 12,
	EJackPassiveTokugiType__MPKyuuSyuuRate_Plus = 13,
	EJackPassiveTokugiType__TateGuardRate_Plus = 14,
	EJackPassiveTokugiType__BukiGuardRate_Plus = 15,
	EJackPassiveTokugiType__MikawasiRate_Plus = 16,
	EJackPassiveTokugiType__CriticalRate_Plus = 17,
	EJackPassiveTokugiType__ZoneOnRate_Plus = 18,
	EJackPassiveTokugiType__MeityuuRate_Plus = 19,
	EJackPassiveTokugiType__ZoneEffect_Up = 20,
	EJackPassiveTokugiType__OddEffectSuccessRate_Up = 21,
	EJackPassiveTokugiType__NusumuRate_Up = 22,
	EJackPassiveTokugiType__SenrituVolume_Up = 23,
	EJackPassiveTokugiType__SenrituEffect_Up = 24,
	EJackPassiveTokugiType__HonooAndTutiResist_Up = 25,
	EJackPassiveTokugiType__KooriAndKazeResist_Up = 26,
	EJackPassiveTokugiType__HikariAndKaminariResist_Up = 27,
	EJackPassiveTokugiType__BattleWinMPRecover = 28,
	EJackPassiveTokugiType__GuardCounter = 29,
	EJackPassiveTokugiType__NioudatiNoKokoroe = 30,
	EJackPassiveTokugiType__NitouNoKokoroe = 31,
	EJackPassiveTokugiType__NitouNoGokui = 32,
	EJackPassiveTokugiType__KabauNoKokoroe = 33,
	EJackPassiveTokugiType__KabauNoGokui = 34,
	EJackPassiveTokugiType__YamabikoNoKokoroe = 35,
	EJackPassiveTokugiType__MAX    = 36
};


// Enum JackGame.EJackGambit
enum class EJackGambit : uint8_t
{
	EJackGambit__Battiriganbare    = 0,
	EJackGambit__Ganganikouze      = 1,
	EJackGambit__Iroiroyarouze     = 2,
	EJackGambit__Inotidaizini      = 3,
	EJackGambit__MPTukauna         = 4,
	EJackGambit__Meireisasero      = 5,
	EJackGambit__Renkeisiyouze     = 6,
	EJackGambit__MAX               = 7
};


// Enum JackGame.EJackGender
enum class EJackGender : uint8_t
{
	EJackGender__Unknown           = 0,
	EJackGender__Male              = 1,
	EJackGender__Female            = 2,
	EJackGender__MAX               = 3
};


// Enum JackGame.EJackJob
enum class EJackJob : uint8_t
{
	EJackJob__Unknown              = 0,
	EJackJob__Yuusya               = 1,
	EJackJob__Sensi                = 2,
	EJackJob__Mahoutukai           = 3,
	EJackJob__Souryo               = 4,
	EJackJob__Tabigeinin           = 5,
	EJackJob__Butouka              = 6,
	EJackJob__Kenja                = 7,
	EJackJob__Paradexin            = 8,
	EJackJob__MAX                  = 9
};


// Enum JackGame.EJackPosition
enum class EJackPosition : uint8_t
{
	EJackPosition__Vanguard        = 0,
	EJackPosition__Unknown         = 1,
	EJackPosition__Rearguard       = 2,
	EJackPosition__MAX             = 3
};


// Enum JackGame.EJackMapChangeSound
enum class EJackMapChangeSound : uint8_t
{
	EJackMapChangeSound__SE_No_Sound = 0,
	EJackMapChangeSound__SE_Default = 1,
	EJackMapChangeSound__SE_Door_001 = 2,
	EJackMapChangeSound__SE_Door_002 = 3,
	EJackMapChangeSound__SE_Door_003 = 4,
	EJackMapChangeSound__SE_Door_004 = 5,
	EJackMapChangeSound__SE_Door_005 = 6,
	EJackMapChangeSound__SE_Door_006 = 7,
	EJackMapChangeSound__SE_Door_007 = 8,
	EJackMapChangeSound__SE_Door_008 = 9,
	EJackMapChangeSound__SE_Door_009 = 10,
	EJackMapChangeSound__SE_Door_010 = 11,
	EJackMapChangeSound__SE_Door_011 = 12,
	EJackMapChangeSound__SE_Door_012 = 13,
	EJackMapChangeSound__SE_Door_013 = 14,
	EJackMapChangeSound__SE_Door_014 = 15,
	EJackMapChangeSound__SE_Door_015 = 16,
	EJackMapChangeSound__SE_CS_Door_001 = 17,
	EJackMapChangeSound__SE_CS_Door_002 = 18,
	EJackMapChangeSound__SE_CS_Door_003 = 19,
	EJackMapChangeSound__SE_CS_Door_004 = 20,
	EJackMapChangeSound__SE_CS_Door_005 = 21,
	EJackMapChangeSound__SE_CS_Door_006 = 22,
	EJackMapChangeSound__SE_CS_Door_007 = 23,
	EJackMapChangeSound__MAX       = 24
};


// Enum JackGame.EJackFadeTime
enum class EJackFadeTime : uint8_t
{
	EJackFadeTime__Default         = 0,
	EJackFadeTime__MapChange       = 1,
	EJackFadeTime__CutsceneInOut   = 2,
	EJackFadeTime__CutsceneInIn    = 3,
	EJackFadeTime__CutsceneOutOut  = 4,
	EJackFadeTime__CutsceneOutIn   = 5,
	EJackFadeTime__BattleCutSceneOut = 6,
	EJackFadeTime__CutsceneSkip    = 7,
	EJackFadeTime__InnSleepOut     = 8,
	EJackFadeTime__InnSleepIn      = 9,
	EJackFadeTime__Gimmick         = 10,
	EJackFadeTime__UI              = 11,
	EJackFadeTime__Event           = 12,
	EJackFadeTime__EventBattle     = 13,
	EJackFadeTime__ObjectVisibility = 14,
	EJackFadeTime__RuraRiremito    = 15,
	EJackFadeTime__KujiraFune      = 16,
	EJackFadeTime__VehicleMount    = 17,
	EJackFadeTime__PartyTalk       = 18,
	EJackFadeTime__MAX             = 19
};


// Enum JackGame.EJackBGMControl
enum class EJackBGMControl : uint8_t
{
	EJackBGMControl__Keep          = 0,
	EJackBGMControl__Rewind        = 1,
	EJackBGMControl__Stop          = 2,
	EJackBGMControl__Pause         = 3,
	EJackBGMControl__Nothing       = 4,
	EJackBGMControl__EventBattle   = 5,
	EJackBGMControl__Continue      = 6,
	EJackBGMControl__MAX           = 7
};


// Enum JackGame.EJackItem_Classification
enum class EJackItem_Classification : uint8_t
{
	EJackItem_Classification__Unknown = 0,
	EJackItem_Classification__Sword = 1,
	EJackItem_Classification__Dagger = 2,
	EJackItem_Classification__Ax   = 3,
	EJackItem_Classification__Stick = 4,
	EJackItem_Classification__Boomerang = 5,
	EJackItem_Classification__DoubleSword = 6,
	EJackItem_Classification__Spear = 7,
	EJackItem_Classification__Staff = 8,
	EJackItem_Classification__Claw = 9,
	EJackItem_Classification__Whip = 10,
	EJackItem_Classification__Shield = 11,
	EJackItem_Classification__LargeShield = 12,
	EJackItem_Classification__Clothes = 13,
	EJackItem_Classification__Armor = 14,
	EJackItem_Classification__Robe = 15,
	EJackItem_Classification__Hat  = 16,
	EJackItem_Classification__Helmet = 17,
	EJackItem_Classification__FaceAccessory = 18,
	EJackItem_Classification__NeckAccessory = 19,
	EJackItem_Classification__FingerAccessory = 20,
	EJackItem_Classification__HandAccessory = 21,
	EJackItem_Classification__ArmAccessory = 22,
	EJackItem_Classification__ShoesAccessory = 23,
	EJackItem_Classification__FootAccessory = 24,
	EJackItem_Classification__EtcAccessory = 25,
	EJackItem_Classification__UsableItem = 26,
	EJackItem_Classification__Daizinamono = 27,
	EJackItem_Classification__Material = 28,
	EJackItem_Classification__RecipeBook = 29,
	EJackItem_Classification__Exchange = 30,
	EJackItem_Classification__MAX  = 31
};


// Enum JackGame.EJackItemGetIcon
enum class EJackItemGetIcon : uint8_t
{
	EJackItemGetIcon__Item         = 0,
	EJackItemGetIcon__Gold         = 1,
	EJackItemGetIcon__CasinoCoin   = 2,
	EJackItemGetIcon__TiisanaMedal = 3,
	EJackItemGetIcon__Houzyu       = 4,
	EJackItemGetIcon__MAX          = 5
};


// Enum JackGame.EJackGameFlagCategory
enum class EJackGameFlagCategory : uint8_t
{
	EJackGameFlagCategory__None    = 0,
	EJackGameFlagCategory__All     = 1,
	EJackGameFlagCategory__Global  = 2,
	EJackGameFlagCategory__GameProgress = 3,
	EJackGameFlagCategory__System  = 4,
	EJackGameFlagCategory__Scenario = 5,
	EJackGameFlagCategory__Quest   = 6,
	EJackGameFlagCategory__CutScene = 7,
	EJackGameFlagCategory__Gimmick = 8,
	EJackGameFlagCategory__MiniGame = 9,
	EJackGameFlagCategory__Guide   = 10,
	EJackGameFlagCategory__Temporary = 11,
	EJackGameFlagCategory__TalkCounter = 12,
	EJackGameFlagCategory__MapVisit = 13,
	EJackGameFlagCategory__BoukenGuide = 14,
	EJackGameFlagCategory__MAX     = 15
};


// Enum JackGame.EJackPhotoModeEvent
enum class EJackPhotoModeEvent : uint8_t
{
	EJackPhotoModeEvent__HideHudStart = 0,
	EJackPhotoModeEvent__HideHudEnd = 1,
	EJackPhotoModeEvent__PhotoModeStart_FadeStart = 2,
	EJackPhotoModeEvent__PhotoModeStart_FadeBlackOut = 3,
	EJackPhotoModeEvent__PhotoModeStart_FadeEnd = 4,
	EJackPhotoModeEvent__PhotoModeEnd_FadeStart = 5,
	EJackPhotoModeEvent__PhotoModeEnd_FadeBlackOut = 6,
	EJackPhotoModeEvent__PhotoModeEnd_FadeEnd = 7,
	EJackPhotoModeEvent__MAX       = 8
};


// Enum JackGame.EJackPhotoModeEmote
enum class EJackPhotoModeEmote : uint8_t
{
	EJackPhotoModeEmote__Hoimi     = 0,
	EJackPhotoModeEmote__Mera      = 1,
	EJackPhotoModeEmote__Hyado     = 2,
	EJackPhotoModeEmote__Parupunte = 3,
	EJackPhotoModeEmote__MAX       = 4
};


// Enum JackGame.EJackPhotoModeErrorCode
enum class EJackPhotoModeErrorCode : uint8_t
{
	EJackPhotoModeErrorCode__None  = 0,
	EJackPhotoModeErrorCode__Unkown = 1,
	EJackPhotoModeErrorCode__NoSupport = 2,
	EJackPhotoModeErrorCode__DiskFull = 3,
	EJackPhotoModeErrorCode__EJackPhotoModeErrorCode_MAX = 4
};


// Enum JackGame.EJackPhotoModeCommand
enum class EJackPhotoModeCommand : uint8_t
{
	EJackPhotoModeCommand__None    = 0,
	EJackPhotoModeCommand__Rearrange = 1,
	EJackPhotoModeCommand__LookAt  = 2,
	EJackPhotoModeCommand__Setting = 3,
	EJackPhotoModeCommand__EmoteUp = 4,
	EJackPhotoModeCommand__EmoteLeft = 5,
	EJackPhotoModeCommand__EmoteRight = 6,
	EJackPhotoModeCommand__EmoteDown = 7,
	EJackPhotoModeCommand__EmoteCancel = 8,
	EJackPhotoModeCommand__TakePhoto = 9,
	EJackPhotoModeCommand__MAX     = 10
};


// Enum JackGame.EJackSibari
enum class EJackSibari : uint8_t
{
	EJackSibari__NoEscape          = 0,
	EJackSibari__NoShopping        = 1,
	EJackSibari__NoEquip           = 2,
	EJackSibari__EveryoneShyCurse  = 3,
	EJackSibari__ShyCurse          = 4,
	EJackSibari__WipeGameOver      = 5,
	EJackSibari__AllEnemyStrong    = 6,
	EJackSibari__DowngradeEnemyExp0 = 7,
	EJackSibari__NPCTellsLie       = 8,
	EJackSibari__AloneBattle       = 9,
	EJackSibari__MAX               = 10
};


// Enum JackGame.EJackScenarioTimeZone
enum class EJackScenarioTimeZone : uint8_t
{
	EJackScenarioTimeZone__None    = 0,
	EJackScenarioTimeZone__Morning = 1,
	EJackScenarioTimeZone__Daytime = 2,
	EJackScenarioTimeZone__Evening = 3,
	EJackScenarioTimeZone__Night   = 4,
	EJackScenarioTimeZone__Midnight = 5,
	EJackScenarioTimeZone__EarlyMorning = 6,
	EJackScenarioTimeZone__MAX     = 7
};


// Enum JackGame.EJackTimeZone
enum class EJackTimeZone : uint8_t
{
	EJackTimeZone__Morning         = 0,
	EJackTimeZone__Daytime         = 1,
	EJackTimeZone__Evening         = 2,
	EJackTimeZone__Night           = 3,
	EJackTimeZone__MAX             = 4
};


// Enum JackGame.EJackWorldTimePausePurpose
enum class EJackWorldTimePausePurpose : uint8_t
{
	EJackWorldTimePausePurpose__Talk = 0,
	EJackWorldTimePausePurpose__Battle = 1,
	EJackWorldTimePausePurpose__Camp = 2,
	EJackWorldTimePausePurpose__Window = 3,
	EJackWorldTimePausePurpose__Cutscene = 4,
	EJackWorldTimePausePurpose__Scenario = 5,
	EJackWorldTimePausePurpose__FastForward = 6,
	EJackWorldTimePausePurpose__PartyTalk = 7,
	EJackWorldTimePausePurpose__FPSCamera = 8,
	EJackWorldTimePausePurpose__Gimmick = 9,
	EJackWorldTimePausePurpose__BenriAction = 10,
	EJackWorldTimePausePurpose__MapJump = 11,
	EJackWorldTimePausePurpose__PhotoMode = 12,
	EJackWorldTimePausePurpose__MAX = 13
};


// Enum JackGame.EJackUMGTextColorSet
enum class EJackUMGTextColorSet : uint8_t
{
	EJackUMGTextColorSet__Tuujou   = 0,
	EJackUMGTextColorSet__Mukou    = 1,
	EJackUMGTextColorSet__StateEqual = 2,
	EJackUMGTextColorSet__StateUp  = 3,
	EJackUMGTextColorSet__StateDown = 4,
	EJackUMGTextColorSet__Kaifuku  = 5,
	EJackUMGTextColorSet__Active   = 6,
	EJackUMGTextColorSet__Standby  = 7,
	EJackUMGTextColorSet__HP50Percent = 8,
	EJackUMGTextColorSet__HP25Percent = 9,
	EJackUMGTextColorSet__Sibou    = 10,
	EJackUMGTextColorSet__Tyuumoku = 11,
	EJackUMGTextColorSet__PaperTitleKoi = 12,
	EJackUMGTextColorSet__PaperTitleUsui = 13,
	EJackUMGTextColorSet__PaperTitleSmall = 14,
	EJackUMGTextColorSet__PaperNormal = 15,
	EJackUMGTextColorSet__Fukidasi = 16,
	EJackUMGTextColorSet__RarityS  = 17,
	EJackUMGTextColorSet__RarityA  = 18,
	EJackUMGTextColorSet__RarityB  = 19,
	EJackUMGTextColorSet__RarityC  = 20,
	EJackUMGTextColorSet__RarityD  = 21,
	EJackUMGTextColorSet__RarityE  = 22,
	EJackUMGTextColorSet__RarityF  = 23,
	EJackUMGTextColorSet__BatoruRenkei = 24,
	EJackUMGTextColorSet__RenrekiCompRate = 25,
	EJackUMGTextColorSet__SmallLocationTitle = 26,
	EJackUMGTextColorSet__LocationTitle = 27,
	EJackUMGTextColorSet__MapLocationTitle = 28,
	EJackUMGTextColorSet__MapTextColor = 29,
	EJackUMGTextColorSet__MapLayer = 30,
	EJackUMGTextColorSet__MapLocationContact = 31,
	EJackUMGTextColorSet__CasinoExchange = 32,
	EJackUMGTextColorSet__NoEquipment = 33,
	EJackUMGTextColorSet__SkillHissatu = 34,
	EJackUMGTextColorSet__ZoneState = 35,
	EJackUMGTextColorSet__ScenarioFukidasi = 36,
	EJackUMGTextColorSet__VoiceDramaNormal = 37,
	EJackUMGTextColorSet__VoiceDramaGray = 38,
	EJackUMGTextColorSet__VoiceDramaLogYellow = 39,
	EJackUMGTextColorSet__VoiceDramaLogBlue = 40,
	EJackUMGTextColorSet__VoiceDramaFastForward = 41,
	EJackUMGTextColorSet__VoiceDramaPafupafu = 42,
	EJackUMGTextColorSet__MAX      = 43
};


// Enum JackGame.EJackUMGAnimMove
enum class EJackUMGAnimMove : uint8_t
{
	EJackUMGAnimMove__OffsetPosition = 0,
	EJackUMGAnimMove__ToPosition   = 1,
	EJackUMGAnimMove__MAX          = 2
};


// Enum JackGame.EJackUMGSnapType
enum class EJackUMGSnapType : uint8_t
{
	EJackUMGSnapType__None         = 0,
	EJackUMGSnapType__RightSide    = 1,
	EJackUMGSnapType__UnderSide    = 2,
	EJackUMGSnapType__UnderLeftSide = 3,
	EJackUMGSnapType__UnderRightSide = 4,
	EJackUMGSnapType__UpperSide    = 5,
	EJackUMGSnapType__Overrap      = 6,
	EJackUMGSnapType__UnderRightAlign = 7,
	EJackUMGSnapType__MAX          = 8
};


// Enum JackGame.EJackUMGPresetAnim
enum class EJackUMGPresetAnim : uint8_t
{
	EJackUMGPresetAnim__MainOpen   = 0,
	EJackUMGPresetAnim__MainClose  = 1,
	EJackUMGPresetAnim__PageOpen   = 2,
	EJackUMGPresetAnim__PageClose  = 3,
	EJackUMGPresetAnim__PageShow   = 4,
	EJackUMGPresetAnim__PageHide   = 5,
	EJackUMGPresetAnim__FadeIn     = 6,
	EJackUMGPresetAnim__FadeOut    = 7,
	EJackUMGPresetAnim__AddOpen    = 8,
	EJackUMGPresetAnim__TypeMax    = 9,
	EJackUMGPresetAnim__Default    = 10,
	EJackUMGPresetAnim__None       = 11,
	EJackUMGPresetAnim__EJackUMGPresetAnim_MAX = 12
};


// Enum JackGame.EJackSlotResultType
enum class EJackSlotResultType : uint8_t
{
	EJackSlotResultType__None      = 0,
	EJackSlotResultType__Slime     = 1,
	EJackSlotResultType__Slime01   = 2,
	EJackSlotResultType__Slime02   = 3,
	EJackSlotResultType__SlimeKight = 4,
	EJackSlotResultType__SlimeKight01 = 5,
	EJackSlotResultType__SlimeKight02 = 6,
	EJackSlotResultType__SlimeTower = 7,
	EJackSlotResultType__SlimeTower01 = 8,
	EJackSlotResultType__SlimeTower02 = 9,
	EJackSlotResultType__KightSlime = 10,
	EJackSlotResultType__KightSlime01 = 11,
	EJackSlotResultType__KightSlime02 = 12,
	EJackSlotResultType__Bar       = 13,
	EJackSlotResultType__Bar01     = 14,
	EJackSlotResultType__Bar02     = 15,
	EJackSlotResultType__Seven     = 16,
	EJackSlotResultType__Seven01   = 17,
	EJackSlotResultType__Seven02   = 18,
	EJackSlotResultType__Free      = 19,
	EJackSlotResultType__Free01    = 20,
	EJackSlotResultType__Free02    = 21,
	EJackSlotResultType__Fever     = 22,
	EJackSlotResultType__Fever01   = 23,
	EJackSlotResultType__Fever02   = 24,
	EJackSlotResultType__Bounus    = 25,
	EJackSlotResultType__Bounus01  = 26,
	EJackSlotResultType__Bounus02  = 27,
	EJackSlotResultType__Wild      = 28,
	EJackSlotResultType__Wild01    = 29,
	EJackSlotResultType__Wild02    = 30,
	EJackSlotResultType__Slime03   = 31,
	EJackSlotResultType__SlimeKight03 = 32,
	EJackSlotResultType__SlimeTower03 = 33,
	EJackSlotResultType__KightSlime03 = 34,
	EJackSlotResultType__Bar03     = 35,
	EJackSlotResultType__Seven03   = 36,
	EJackSlotResultType__Free03    = 37,
	EJackSlotResultType__Fever03   = 38,
	EJackSlotResultType__Bounus03  = 39,
	EJackSlotResultType__Wild03    = 40,
	EJackSlotResultType__Bounus_Lose = 41,
	EJackSlotResultType__Bounus_Win = 42,
	EJackSlotResultType__MAX       = 43
};


// Enum JackGame.EJackMiniGameSlotHand
enum class EJackMiniGameSlotHand : uint8_t
{
	EJackMiniGameSlotHand__Slime   = 0,
	EJackMiniGameSlotHand__SlimeKight = 1,
	EJackMiniGameSlotHand__SlimeTower = 2,
	EJackMiniGameSlotHand__KingSlime = 3,
	EJackMiniGameSlotHand__BAR     = 4,
	EJackMiniGameSlotHand__Seven   = 5,
	EJackMiniGameSlotHand__AngelSlime = 6,
	EJackMiniGameSlotHand__DanseJewelry = 7,
	EJackMiniGameSlotHand__DeviateSlime = 8,
	EJackMiniGameSlotHand__TreasureBox = 9,
	EJackMiniGameSlotHand__MetalSlime = 10,
	EJackMiniGameSlotHand__MetalRaider = 11,
	EJackMiniGameSlotHand__MetalBrothers = 12,
	EJackMiniGameSlotHand__MetalKing = 13,
	EJackMiniGameSlotHand__TripleBER = 14,
	EJackMiniGameSlotHand__MetalSeven = 15,
	EJackMiniGameSlotHand__MetalTreasureBox = 16,
	EJackMiniGameSlotHand__None    = 17,
	EJackMiniGameSlotHand__MAX     = 18
};


// Enum JackGame.EJackSlotSetNumberType
enum class EJackSlotSetNumberType : uint8_t
{
	EJackSlotSetNumberType__Five   = 0,
	EJackSlotSetNumberType__Four   = 1,
	EJackSlotSetNumberType__Three  = 2,
	EJackSlotSetNumberType__None   = 3,
	EJackSlotSetNumberType__MAX    = 4
};


// Enum JackGame.EJackSlotHitLineType
enum class EJackSlotHitLineType : uint8_t
{
	EJackSlotHitLineType__CenterLine = 0,
	EJackSlotHitLineType__UpperLine = 1,
	EJackSlotHitLineType__LowerLine = 2,
	EJackSlotHitLineType__MAX      = 3
};


// Enum JackGame.EJackSlotGameState
enum class EJackSlotGameState : uint8_t
{
	EJackSlotGameState__Init       = 0,
	EJackSlotGameState__Bet        = 1,
	EJackSlotGameState__BetMain    = 2,
	EJackSlotGameState__Game       = 3,
	EJackSlotGameState__ReelStart  = 4,
	EJackSlotGameState__QueenSlime = 5,
	EJackSlotGameState__ReelChangeAngelSlime = 6,
	EJackSlotGameState__ReelEnd    = 7,
	EJackSlotGameState__ResultFreeSpin = 8,
	EJackSlotGameState__ResultMetalChange = 9,
	EJackSlotGameState__ResultTreasureBox = 10,
	EJackSlotGameState__ResultDividend = 11,
	EJackSlotGameState__ResultCoinUpdate = 12,
	EJackSlotGameState__ResultLose = 13,
	EJackSlotGameState__ResultSelect = 14,
	EJackSlotGameState__MetalChangeEnd = 15,
	EJackSlotGameState__FreeSpinEnd = 16,
	EJackSlotGameState__RevertAngelSlime = 17,
	EJackSlotGameState__Retry      = 18,
	EJackSlotGameState__FadeOut    = 19,
	EJackSlotGameState__End        = 20,
	EJackSlotGameState__FreeSpinStartMessage = 21,
	EJackSlotGameState__JackPotStart = 22,
	EJackSlotGameState__MAX        = 23
};


// Enum JackGame.EJackBGMDiscVersion
enum class EJackBGMDiscVersion : uint8_t
{
	EJackBGMDiscVersion__GoldDisc  = 0,
	EJackBGMDiscVersion__OrchestraDisc = 1,
	EJackBGMDiscVersion__MAX       = 2
};


// Enum JackGame.EJackAudioVolume
enum class EJackAudioVolume : uint8_t
{
	EJackAudioVolume__Volume_Mute  = 0,
	EJackAudioVolume__Volume       = 1,
	EJackAudioVolume__Volume01     = 2,
	EJackAudioVolume__Volume02     = 3,
	EJackAudioVolume__Volume03     = 4,
	EJackAudioVolume__Volume04     = 5,
	EJackAudioVolume__Volume05     = 6,
	EJackAudioVolume__Volume06     = 7,
	EJackAudioVolume__Volume07     = 8,
	EJackAudioVolume__Volume08     = 9,
	EJackAudioVolume__Volume09     = 10,
	EJackAudioVolume__MAX          = 11
};


// Enum JackGame.EJackMiniGameRouletteMenuSequenceEnum
enum class EJackMiniGameRouletteMenuSequenceEnum : uint8_t
{
	EJackMiniGameRouletteMenuSequenceEnum__Init = 0,
	EJackMiniGameRouletteMenuSequenceEnum__ResultSelect = 1,
	EJackMiniGameRouletteMenuSequenceEnum__ResultStart = 2,
	EJackMiniGameRouletteMenuSequenceEnum__ResultDemo = 3,
	EJackMiniGameRouletteMenuSequenceEnum__ResultTreasureCoin = 4,
	EJackMiniGameRouletteMenuSequenceEnum__ResultDemoWin = 5,
	EJackMiniGameRouletteMenuSequenceEnum__ResultDemoLose = 6,
	EJackMiniGameRouletteMenuSequenceEnum__ResultDemoJackPot = 7,
	EJackMiniGameRouletteMenuSequenceEnum__ResultDemoJackPotMessage = 8,
	EJackMiniGameRouletteMenuSequenceEnum__ResultDemoCoinGetMessage = 9,
	EJackMiniGameRouletteMenuSequenceEnum__ResultDemoCoinMove = 10,
	EJackMiniGameRouletteMenuSequenceEnum__ResultDemoCoinGet = 11,
	EJackMiniGameRouletteMenuSequenceEnum__ResultDemoCoinUp = 12,
	EJackMiniGameRouletteMenuSequenceEnum__ResultDemoRetryMessage = 13,
	EJackMiniGameRouletteMenuSequenceEnum__Tutorial = 14,
	EJackMiniGameRouletteMenuSequenceEnum__StartMessage = 15,
	EJackMiniGameRouletteMenuSequenceEnum__GameBet = 16,
	EJackMiniGameRouletteMenuSequenceEnum__ToGame = 17,
	EJackMiniGameRouletteMenuSequenceEnum__EndQuestion = 18,
	EJackMiniGameRouletteMenuSequenceEnum__Finished = 19,
	EJackMiniGameRouletteMenuSequenceEnum__BetStart = 20,
	EJackMiniGameRouletteMenuSequenceEnum__MAX = 21
};


// Enum JackGame.EJackOmakeMessageState
enum class EJackOmakeMessageState : uint8_t
{
	EJackOmakeMessageState__None   = 0,
	EJackOmakeMessageState__Open   = 1,
	EJackOmakeMessageState__Close  = 2,
	EJackOmakeMessageState__Message = 3,
	EJackOmakeMessageState__MessageScrollCheck = 4,
	EJackOmakeMessageState__MessageScroll = 5,
	EJackOmakeMessageState__KeyWait = 6,
	EJackOmakeMessageState__EndKeyWait = 7,
	EJackOmakeMessageState__SelectWindowOpen = 8,
	EJackOmakeMessageState__SelectWindowUpdate = 9,
	EJackOmakeMessageState__SelectWindowClose = 10,
	EJackOmakeMessageState__Max    = 11
};


// Enum JackGame.EJackWorldWindLevel
enum class EJackWorldWindLevel : uint8_t
{
	EJackWorldWindLevel__Calm      = 0,
	EJackWorldWindLevel__Weak      = 1,
	EJackWorldWindLevel__Middle    = 2,
	EJackWorldWindLevel__Strong    = 3,
	EJackWorldWindLevel__MAX       = 4
};


// Enum JackGame.EJackWorldWeather
enum class EJackWorldWeather : uint8_t
{
	EJackWorldWeather__ClearAndSunny = 0,
	EJackWorldWeather__Sunny       = 1,
	EJackWorldWeather__Cloudy      = 2,
	EJackWorldWeather__LightRain   = 3,
	EJackWorldWeather__Rain        = 4,
	EJackWorldWeather__HeavyRain   = 5,
	EJackWorldWeather__Thunderstorm = 6,
	EJackWorldWeather__Snow        = 7,
	EJackWorldWeather__Snowstorm   = 8,
	EJackWorldWeather__Fog         = 9,
	EJackWorldWeather__HeavyFog    = 10,
	EJackWorldWeather__MAX         = 11
};


// Enum JackGame.EJackUIPlatformType
enum class EJackUIPlatformType : uint8_t
{
	EJackUIPlatformType__Unknow    = 0,
	EJackUIPlatformType__Other     = 1,
	EJackUIPlatformType__Windows   = 2,
	EJackUIPlatformType__PS4       = 3,
	EJackUIPlatformType__Switch    = 4,
	EJackUIPlatformType__XboxOne   = 5,
	EJackUIPlatformType__Steam     = 6,
	EJackUIPlatformType__MSStore   = 7,
	EJackUIPlatformType__EpicStore = 8,
	EJackUIPlatformType__Stadia    = 9,
	EJackUIPlatformType__MAX       = 10
};


// Enum JackGame.EJackUIStickMode
enum class EJackUIStickMode : uint8_t
{
	EJackUIStickMode__AnalogStickMode = 0,
	EJackUIStickMode__DirectionKeyMode = 1,
	EJackUIStickMode__MAX          = 2
};


// Enum JackGame.EJackPopupBalloon
enum class EJackPopupBalloon : uint8_t
{
	EJackPopupBalloon__Default     = 0,
	EJackPopupBalloon__DamagePlayer = 1,
	EJackPopupBalloon__DamageMonster = 2,
	EJackPopupBalloon__CriticalDamagePlayer = 3,
	EJackPopupBalloon__CriticalDamageMonster = 4,
	EJackPopupBalloon__RecoverHP   = 5,
	EJackPopupBalloon__RecoverMP   = 6,
	EJackPopupBalloon__Miss        = 7,
	EJackPopupBalloon__DamageMP    = 8,
	EJackPopupBalloon__DamageHPMiss = 9,
	EJackPopupBalloon__DamageMPMiss = 10,
	EJackPopupBalloon__RecoverHPMiss = 11,
	EJackPopupBalloon__RecoverMPMiss = 12,
	EJackPopupBalloon__KaziDamage  = 13,
	EJackPopupBalloon__KaziRecover = 14,
	EJackPopupBalloon__KaziMiss    = 15,
	EJackPopupBalloon__MAX         = 16
};


// Enum JackGame.EJackUMGWindowCursorMoveMode
enum class EJackUMGWindowCursorMoveMode : uint8_t
{
	EJackUMGWindowCursorMoveMode__EffectiveDirection = 0,
	EJackUMGWindowCursorMoveMode__ZeroAngle = 1,
	EJackUMGWindowCursorMoveMode__MoveDisable = 2,
	EJackUMGWindowCursorMoveMode__InputDisable = 3,
	EJackUMGWindowCursorMoveMode__MAX = 4
};


// Enum JackGame.EJackUMGMenuBGMode
enum class EJackUMGMenuBGMode : uint8_t
{
	EJackUMGMenuBGMode__None       = 0,
	EJackUMGMenuBGMode__Hide       = 1,
	EJackUMGMenuBGMode__ShowDouguBG = 2,
	EJackUMGMenuBGMode__ShowShopBuyBG = 3,
	EJackUMGMenuBGMode__ShowShopSellBG = 4,
	EJackUMGMenuBGMode__MAX        = 5
};


// Enum JackGame.EJackUMGItemActionCommand
enum class EJackUMGItemActionCommand : uint8_t
{
	EJackUMGItemActionCommand__None = 0,
	EJackUMGItemActionCommand__Use = 1,
	EJackUMGItemActionCommand__Equipment = 2,
	EJackUMGItemActionCommand__Pass = 3,
	EJackUMGItemActionCommand__Remove = 4,
	EJackUMGItemActionCommand__Buy = 5,
	EJackUMGItemActionCommand__Sell = 6,
	EJackUMGItemActionCommand__DouguSeiri = 7,
	EJackUMGItemActionCommand__EquipmentWithRegion = 8,
	EJackUMGItemActionCommand__EquipmentDetach = 9,
	EJackUMGItemActionCommand__Add = 10,
	EJackUMGItemActionCommand__Swap = 11,
	EJackUMGItemActionCommand__Store = 12,
	EJackUMGItemActionCommand__MAX = 13
};


// Enum JackGame.EJackUMGItemFind
enum class EJackUMGItemFind : uint8_t
{
	EJackUMGItemFind__All          = 0,
	EJackUMGItemFind__Equipped     = 1,
	EJackUMGItemFind__NoEquipment  = 2,
	EJackUMGItemFind__MAX          = 3
};


// Enum JackGame.EJackActionIconType
enum class EJackActionIconType : uint8_t
{
	EJackActionIconType__None      = 0,
	EJackActionIconType__Bouken    = 1,
	EJackActionIconType__Jakutai   = 2,
	EJackActionIconType__Kaifuku   = 3,
	EJackActionIconType__Kougeki   = 4,
	EJackActionIconType__Sien      = 5,
	EJackActionIconType__MAX       = 6
};


// Enum JackGame.EJackItem_DiscardType
enum class EJackItem_DiscardType : uint8_t
{
	EJackItem_DiscardType__Unknown = 0,
	EJackItem_DiscardType__NG      = 1,
	EJackItem_DiscardType__OK      = 2,
	EJackItem_DiscardType__NeedConfirmation1 = 3,
	EJackItem_DiscardType__NeedConfirmation2 = 4,
	EJackItem_DiscardType__MAX     = 5
};


// Enum JackGame.EJackUMGItemPlacedAcquisition
enum class EJackUMGItemPlacedAcquisition : uint8_t
{
	EJackUMGItemPlacedAcquisition__BukiShop = 0,
	EJackUMGItemPlacedAcquisition__BouguShop = 1,
	EJackUMGItemPlacedAcquisition__BukiBouguShop = 2,
	EJackUMGItemPlacedAcquisition__DouguShop = 3,
	EJackUMGItemPlacedAcquisition__YorozuShop = 4,
	EJackUMGItemPlacedAcquisition__GyousyouninShop = 5,
	EJackUMGItemPlacedAcquisition__Casino = 6,
	EJackUMGItemPlacedAcquisition__Medal = 7,
	EJackUMGItemPlacedAcquisition__UmaRace = 8,
	EJackUMGItemPlacedAcquisition__Kira = 9,
	EJackUMGItemPlacedAcquisition__GmmickDrop = 10,
	EJackUMGItemPlacedAcquisition__MonsterDrop = 11,
	EJackUMGItemPlacedAcquisition__Other = 12,
	EJackUMGItemPlacedAcquisition__None = 13,
	EJackUMGItemPlacedAcquisition__MAX = 14
};


// Enum JackGame.EJackUMGItemClassification
enum class EJackUMGItemClassification : uint8_t
{
	EJackUMGItemClassification__ItemNone = 0,
	EJackUMGItemClassification__ItemUnknow = 1,
	EJackUMGItemClassification__ItemWeapon = 2,
	EJackUMGItemClassification__ItemShield = 3,
	EJackUMGItemClassification__ItemArmor = 4,
	EJackUMGItemClassification__ItemAccessory = 5,
	EJackUMGItemClassification__ItemUsable = 6,
	EJackUMGItemClassification__ItemDaizinamono = 7,
	EJackUMGItemClassification__ItemMaterial = 8,
	EJackUMGItemClassification__ItemRecipe = 9,
	EJackUMGItemClassification__Exchange = 10,
	EJackUMGItemClassification__MAX = 11
};


// Enum JackGame.EJackUMGItemClassRefineType
enum class EJackUMGItemClassRefineType : uint8_t
{
	EJackUMGItemClassRefineType__Unknown = 0,
	EJackUMGItemClassRefineType__Sword = 1,
	EJackUMGItemClassRefineType__Dagger = 2,
	EJackUMGItemClassRefineType__Ax = 3,
	EJackUMGItemClassRefineType__Stick = 4,
	EJackUMGItemClassRefineType__Boomerang = 5,
	EJackUMGItemClassRefineType__DoubleSword = 6,
	EJackUMGItemClassRefineType__Spear = 7,
	EJackUMGItemClassRefineType__Staff = 8,
	EJackUMGItemClassRefineType__Claw = 9,
	EJackUMGItemClassRefineType__Whip = 10,
	EJackUMGItemClassRefineType__Shield = 11,
	EJackUMGItemClassRefineType__Armor = 12,
	EJackUMGItemClassRefineType__Helmet = 13,
	EJackUMGItemClassRefineType__Accessory = 14,
	EJackUMGItemClassRefineType__Usable = 15,
	EJackUMGItemClassRefineType__Daizinamono = 16,
	EJackUMGItemClassRefineType__Material = 17,
	EJackUMGItemClassRefineType__RecipeBook = 18,
	EJackUMGItemClassRefineType__Exchange = 19,
	EJackUMGItemClassRefineType__MAX = 20
};


// Enum JackGame.EJackItem_ParameterType
enum class EJackItem_ParameterType : uint8_t
{
	EJackItem_ParameterType__Unknown = 0,
	EJackItem_ParameterType__Kougekiryoku = 1,
	EJackItem_ParameterType__Syubiryoku = 2,
	EJackItem_ParameterType__MPKyuuSyuuRate = 3,
	EJackItem_ParameterType__TateGuardRate = 4,
	EJackItem_ParameterType__MikawasiRate = 5,
	EJackItem_ParameterType__CriticalRate = 6,
	EJackItem_ParameterType__ZoneOnRate = 7,
	EJackItem_ParameterType__Kiyousa = 8,
	EJackItem_ParameterType__Subayasa = 9,
	EJackItem_ParameterType__KougekiMaryoku = 10,
	EJackItem_ParameterType__KaifukuMaryoku = 11,
	EJackItem_ParameterType__MaxHP = 12,
	EJackItem_ParameterType__MaxMP = 13,
	EJackItem_ParameterType__Miryoku = 14,
	EJackItem_ParameterType__BukiGuardRate = 15,
	EJackItem_ParameterType__Tikara = 16,
	EJackItem_ParameterType__Minomamori = 17,
	EJackItem_ParameterType__MAX   = 18
};


// Enum JackGame.EJackUMGItemOsyareType
enum class EJackUMGItemOsyareType : uint8_t
{
	EJackUMGItemOsyareType__None   = 0,
	EJackUMGItemOsyareType__Type1  = 1,
	EJackUMGItemOsyareType__Type2  = 2,
	EJackUMGItemOsyareType__MAX    = 3
};


// Enum JackGame.EJackUMGGetItemParam
enum class EJackUMGGetItemParam : uint8_t
{
	EJackUMGGetItemParam__None     = 0,
	EJackUMGGetItemParam__IsCanConsume = 1,
	EJackUMGGetItemParam__IsLeaveAtSort = 2,
	EJackUMGGetItemParam__bStoreCommonBag = 3,
	EJackUMGGetItemParam__SellType = 4,
	EJackUMGGetItemParam__DiscardType = 5,
	EJackUMGGetItemParam__IsEquippedPossible = 6,
	EJackUMGGetItemParam__IsEquipmentPossibleP001 = 7,
	EJackUMGGetItemParam__IsEquipmentPossibleP002 = 8,
	EJackUMGGetItemParam__IsEquipmentPossibleP003 = 9,
	EJackUMGGetItemParam__IsEquipmentPossibleP004 = 10,
	EJackUMGGetItemParam__IsEquipmentPossibleP005 = 11,
	EJackUMGGetItemParam__IsEquipmentPossibleP006 = 12,
	EJackUMGGetItemParam__IsEquipmentPossibleP007 = 13,
	EJackUMGGetItemParam__IsEquipmentPossibleP008 = 14,
	EJackUMGGetItemParam__MAX      = 15
};


// Enum JackGame.EJackUIScenarioNumber
enum class EJackUIScenarioNumber : uint8_t
{
	EJackUIScenarioNumber__AScenario = 0,
	EJackUIScenarioNumber__BScenario = 1,
	EJackUIScenarioNumber__CScenario = 2,
	EJackUIScenarioNumber__SScenario = 3,
	EJackUIScenarioNumber__MAX     = 4
};


// Enum JackGame.EJackUMGShopResult
enum class EJackUMGShopResult : uint8_t
{
	EJackUMGShopResult__BagSuccessful = 0,
	EJackUMGShopResult__BagOverflow = 1,
	EJackUMGShopResult__BagCommonOverflow = 2,
	EJackUMGShopResult__BagCommonFull = 3,
	EJackUMGShopResult__CommonSuccessful = 4,
	EJackUMGShopResult__CommonOverflow = 5,
	EJackUMGShopResult__CommonFull = 6,
	EJackUMGShopResult__NoResult   = 7,
	EJackUMGShopResult__MAX        = 8
};


// Enum JackGame.EJackShop
enum class EJackShop : uint8_t
{
	EJackShop__Unknown             = 0,
	EJackShop__Buki_Shop           = 1,
	EJackShop__Bougu_Shop          = 2,
	EJackShop__BukiBougu_Shop      = 3,
	EJackShop__Dougu_Shop          = 4,
	EJackShop__Yorozu_Shop         = 5,
	EJackShop__Gyousyounin_Shop    = 6,
	EJackShop__MAX                 = 7
};


// Enum JackGame.EJackUMGMemberList
enum class EJackUMGMemberList : uint8_t
{
	EJackUMGMemberList__All        = 0,
	EJackUMGMemberList__Active     = 1,
	EJackUMGMemberList__Standby    = 2,
	EJackUMGMemberList__Single     = 3,
	EJackUMGMemberList__MAX        = 4
};


// Enum JackGame.EJackUMGItemSortType
enum class EJackUMGItemSortType : uint8_t
{
	EJackUMGItemSortType__None     = 0,
	EJackUMGItemSortType__GetOrder = 1,
	EJackUMGItemSortType__Classification = 2,
	EJackUMGItemSortType__Yomi     = 3,
	EJackUMGItemSortType__Tuyosa   = 4,
	EJackUMGItemSortType__Narabekae = 5,
	EJackUMGItemSortType__Equipment = 6,
	EJackUMGItemSortType__Pictorial = 7,
	EJackUMGItemSortType__MAX      = 8
};


// Enum JackGame.EJackUMGBattleMenuCommand
enum class EJackUMGBattleMenuCommand : uint8_t
{
	EJackUMGBattleMenuCommand__Kougeki = 0,
	EJackUMGBattleMenuCommand__Tokugi = 1,
	EJackUMGBattleMenuCommand__Jumon = 2,
	EJackUMGBattleMenuCommand__Dougu = 3,
	EJackUMGBattleMenuCommand__Bougyo = 4,
	EJackUMGBattleMenuCommand__Joutai = 5,
	EJackUMGBattleMenuCommand__Irekae = 6,
	EJackUMGBattleMenuCommand__Sakusen = 7,
	EJackUMGBattleMenuCommand__Nigeru = 8,
	EJackUMGBattleMenuCommand__Renkei = 9,
	EJackUMGBattleMenuCommand__Owari = 10,
	EJackUMGBattleMenuCommand__ToAI = 11,
	EJackUMGBattleMenuCommand__Soubi = 12,
	EJackUMGBattleMenuCommand__Tatakau = 13,
	EJackUMGBattleMenuCommand__Sakusengae = 14,
	EJackUMGBattleMenuCommand__MAX = 15
};


// Enum JackGame.EJackUMGUIActionFlow
enum class EJackUMGUIActionFlow : uint8_t
{
	EJackUMGUIActionFlow__None     = 0,
	EJackUMGUIActionFlow__Direct   = 1,
	EJackUMGUIActionFlow__Self     = 2,
	EJackUMGUIActionFlow__AllMember = 3,
	EJackUMGUIActionFlow__AllEnemy = 4,
	EJackUMGUIActionFlow__NearMember = 5,
	EJackUMGUIActionFlow__NearEnemy = 6,
	EJackUMGUIActionFlow__HPList   = 7,
	EJackUMGUIActionFlow__MPList   = 8,
	EJackUMGUIActionFlow__BuffList = 9,
	EJackUMGUIActionFlow__Tane     = 10,
	EJackUMGUIActionFlow__MonsterList = 11,
	EJackUMGUIActionFlow__GroupList = 12,
	EJackUMGUIActionFlow__CustomFlow = 13,
	EJackUMGUIActionFlow__MAX      = 14
};


// Enum JackGame.EJackCursorSaveTarget
enum class EJackCursorSaveTarget : uint8_t
{
	EJackCursorSaveTarget__Command = 0,
	EJackCursorSaveTarget__Player  = 1,
	EJackCursorSaveTarget__Monster = 2,
	EJackCursorSaveTarget__Dougu   = 3,
	EJackCursorSaveTarget__Jumon   = 4,
	EJackCursorSaveTarget__Tokugi  = 5,
	EJackCursorSaveTarget__Renkei  = 6,
	EJackCursorSaveTarget__Group   = 7,
	EJackCursorSaveTarget__MAX     = 8
};


// Enum JackGame.EJackRenkeiMember
enum class EJackRenkeiMember : uint8_t
{
	EJackRenkeiMember__A           = 0,
	EJackRenkeiMember__B           = 1,
	EJackRenkeiMember__C           = 2,
	EJackRenkeiMember__D           = 3,
	EJackRenkeiMember__MAX_COUNT   = 4,
	EJackRenkeiMember__SELECT      = 5,
	EJackRenkeiMember__NONE        = 6,
	EJackRenkeiMember__EJackRenkeiMember_MAX = 7
};


// Enum JackGame.EJackRenkeiCategory
enum class EJackRenkeiCategory : uint8_t
{
	EJackRenkeiCategory__Program   = 0,
	EJackRenkeiCategory__Matinee   = 1,
	EJackRenkeiCategory__MAX       = 2
};


// Enum JackGame.EJackRenkeiSpectacleShowStatus
enum class EJackRenkeiSpectacleShowStatus : uint8_t
{
	EJackRenkeiSpectacleShowStatus__Available = 0,
	EJackRenkeiSpectacleShowStatus__AlreadyUsed = 1,
	EJackRenkeiSpectacleShowStatus__EventBattle = 2,
	EJackRenkeiSpectacleShowStatus__BattleFieldNarrow = 3,
	EJackRenkeiSpectacleShowStatus__Error = 4,
	EJackRenkeiSpectacleShowStatus__MAX = 5
};


// Enum JackGame.EJackTokugiNotAvailableReason
enum class EJackTokugiNotAvailableReason : uint8_t
{
	EJackTokugiNotAvailableReason__None = 0,
	EJackTokugiNotAvailableReason__NotWeapon = 1,
	EJackTokugiNotAvailableReason__MismatchWeaponStyle = 2,
	EJackTokugiNotAvailableReason__NoMustEquipment = 3,
	EJackTokugiNotAvailableReason__NotAvailableSeijaNoUta = 4,
	EJackTokugiNotAvailableReason__NotAvailablePaladinGuard = 5,
	EJackTokugiNotAvailableReason__MAX = 6
};


// Enum JackGame.EJackFusigiKaziMaterialUseInfo
enum class EJackFusigiKaziMaterialUseInfo : uint8_t
{
	EJackFusigiKaziMaterialUseInfo__NotEnough = 0,
	EJackFusigiKaziMaterialUseInfo__UseBag = 1,
	EJackFusigiKaziMaterialUseInfo__UseChara = 2,
	EJackFusigiKaziMaterialUseInfo__UseEquip = 3,
	EJackFusigiKaziMaterialUseInfo__TypeMAX = 4,
	EJackFusigiKaziMaterialUseInfo__Invalid = 5,
	EJackFusigiKaziMaterialUseInfo__EJackFusigiKaziMaterialUseInfo_MAX = 6
};


// Enum JackGame.EJackFusigiKaziUMGParts
enum class EJackFusigiKaziUMGParts : uint8_t
{
	EJackFusigiKaziUMGParts__Entrance_StartCommand = 0,
	EJackFusigiKaziUMGParts__Entrance_SelectCategory = 1,
	EJackFusigiKaziUMGParts__Entrance_SelectParts = 2,
	EJackFusigiKaziUMGParts__Entrance_NeedMaterial = 3,
	EJackFusigiKaziUMGParts__Entrance_NeedInfo = 4,
	EJackFusigiKaziUMGParts__Entrance_SelectMaterial = 5,
	EJackFusigiKaziUMGParts__Entrance_SelectPlus = 6,
	EJackFusigiKaziUMGParts__Entrance_SelectMaterialPlus = 7,
	EJackFusigiKaziUMGParts__Retry_SelectPlayer = 8,
	EJackFusigiKaziUMGParts__Retry_SelectItemList = 9,
	EJackFusigiKaziUMGParts__Entrance_PlayerStatus = 10,
	EJackFusigiKaziUMGParts__Entrance_RetryBall = 11,
	EJackFusigiKaziUMGParts__Entrance_Setumei1 = 12,
	EJackFusigiKaziUMGParts__Entrance_Setumei2 = 13,
	EJackFusigiKaziUMGParts__Entrance_Difficulty = 14,
	EJackFusigiKaziUMGParts__Entrance_Kuwasiku = 15,
	EJackFusigiKaziUMGParts__Game_Base = 16,
	EJackFusigiKaziUMGParts__Game_SelectCommand = 17,
	EJackFusigiKaziUMGParts__Game_SelectSkill = 18,
	EJackFusigiKaziUMGParts__Game_MessageSpecial = 19,
	EJackFusigiKaziUMGParts__Game_MessageAction = 20,
	EJackFusigiKaziUMGParts__Game_ResultParts = 21,
	EJackFusigiKaziUMGParts__TypeMAX = 22,
	EJackFusigiKaziUMGParts__Invalid = 23,
	EJackFusigiKaziUMGParts__EJackFusigiKaziUMGParts_MAX = 24
};


// Enum JackGame.EJackFusigiKaziDifficultyType
enum class EJackFusigiKaziDifficultyType : uint8_t
{
	EJackFusigiKaziDifficultyType__Easy = 0,
	EJackFusigiKaziDifficultyType__LittleEasy = 1,
	EJackFusigiKaziDifficultyType__Normal = 2,
	EJackFusigiKaziDifficultyType__LittleHard = 3,
	EJackFusigiKaziDifficultyType__Hard = 4,
	EJackFusigiKaziDifficultyType__TypeMAX = 5,
	EJackFusigiKaziDifficultyType__Invalid = 6,
	EJackFusigiKaziDifficultyType__EJackFusigiKaziDifficultyType_MAX = 7
};


// Enum JackGame.EJackFusigiKaziCreateCategory
enum class EJackFusigiKaziCreateCategory : uint8_t
{
	EJackFusigiKaziCreateCategory__Weapon = 0,
	EJackFusigiKaziCreateCategory__Armor = 1,
	EJackFusigiKaziCreateCategory__Accessory = 2,
	EJackFusigiKaziCreateCategory__TypeMAX = 3,
	EJackFusigiKaziCreateCategory__Invalid = 4,
	EJackFusigiKaziCreateCategory__EJackFusigiKaziCreateCategory_MAX = 5
};


// Enum JackGame.EJackFusigiKaziCreateFrame
enum class EJackFusigiKaziCreateFrame : uint8_t
{
	EJackFusigiKaziCreateFrame__A  = 0,
	EJackFusigiKaziCreateFrame__B  = 1,
	EJackFusigiKaziCreateFrame__C  = 2,
	EJackFusigiKaziCreateFrame__D  = 3,
	EJackFusigiKaziCreateFrame__E  = 4,
	EJackFusigiKaziCreateFrame__F  = 5,
	EJackFusigiKaziCreateFrame__G  = 6,
	EJackFusigiKaziCreateFrame__H  = 7,
	EJackFusigiKaziCreateFrame__I  = 8,
	EJackFusigiKaziCreateFrame__J  = 9,
	EJackFusigiKaziCreateFrame__K  = 10,
	EJackFusigiKaziCreateFrame__L  = 11,
	EJackFusigiKaziCreateFrame__TypeMAX = 12,
	EJackFusigiKaziCreateFrame__Invalid = 13,
	EJackFusigiKaziCreateFrame__EJackFusigiKaziCreateFrame_MAX = 14
};


// Enum JackGame.EJackFusigiKaziParts
enum class EJackFusigiKaziParts : uint8_t
{
	EJackFusigiKaziParts__W_Sword  = 0,
	EJackFusigiKaziParts__W_Rapier = 1,
	EJackFusigiKaziParts__W_Staff  = 2,
	EJackFusigiKaziParts__A_Hand   = 3,
	EJackFusigiKaziParts__W_DoubleSword = 4,
	EJackFusigiKaziParts__P_Robe   = 5,
	EJackFusigiKaziParts__W_Dagger = 6,
	EJackFusigiKaziParts__W_Stick  = 7,
	EJackFusigiKaziParts__A_Bracelet = 8,
	EJackFusigiKaziParts__W_Spear  = 9,
	EJackFusigiKaziParts__W_Ax     = 10,
	EJackFusigiKaziParts__W_Claw   = 11,
	EJackFusigiKaziParts__P_Shield = 12,
	EJackFusigiKaziParts__P_Clothes = 13,
	EJackFusigiKaziParts__P_Helmet = 14,
	EJackFusigiKaziParts__P_Hat    = 15,
	EJackFusigiKaziParts__A_Etc    = 16,
	EJackFusigiKaziParts__W_Whip   = 17,
	EJackFusigiKaziParts__W_Boomerang = 18,
	EJackFusigiKaziParts__P_LargeShield = 19,
	EJackFusigiKaziParts__P_Armor  = 20,
	EJackFusigiKaziParts__A_Glasses = 21,
	EJackFusigiKaziParts__A_Earrings = 22,
	EJackFusigiKaziParts__A_Finger = 23,
	EJackFusigiKaziParts__A_Shoes  = 24,
	EJackFusigiKaziParts__A_Neck   = 25,
	EJackFusigiKaziParts__TypeMAX  = 26,
	EJackFusigiKaziParts__Invalid  = 27,
	EJackFusigiKaziParts__EJackFusigiKaziParts_MAX = 28
};


// Enum JackGame.EJackFusigiKaziKanagata
enum class EJackFusigiKaziKanagata : uint8_t
{
	EJackFusigiKaziKanagata__Kata_1x3 = 0,
	EJackFusigiKaziKanagata__Kata_2x4 = 1,
	EJackFusigiKaziKanagata__Kata_1x2 = 2,
	EJackFusigiKaziKanagata__Kata_1x4 = 3,
	EJackFusigiKaziKanagata__Kata_2x2 = 4,
	EJackFusigiKaziKanagata__Kata_2x3 = 5,
	EJackFusigiKaziKanagata__Kata_2x1 = 6,
	EJackFusigiKaziKanagata__TypeMAX = 7,
	EJackFusigiKaziKanagata__Invalid = 8,
	EJackFusigiKaziKanagata__EJackFusigiKaziKanagata_MAX = 9
};


// Enum JackGame.EJackFusigiKaziMetalMaterial
enum class EJackFusigiKaziMetalMaterial : uint8_t
{
	EJackFusigiKaziMetalMaterial__Iron = 0,
	EJackFusigiKaziMetalMaterial__Cloth = 1,
	EJackFusigiKaziMetalMaterial__Wood = 2,
	EJackFusigiKaziMetalMaterial__TypeMAX = 3,
	EJackFusigiKaziMetalMaterial__Invalid = 4,
	EJackFusigiKaziMetalMaterial__EJackFusigiKaziMetalMaterial_MAX = 5
};


// Enum JackGame.EJackFusigiKaziEffect
enum class EJackFusigiKaziEffect : uint8_t
{
	EJackFusigiKaziEffect__Smoke_000 = 0,
	EJackFusigiKaziEffect__Half    = 1,
	EJackFusigiKaziEffect__Hit_002 = 2,
	EJackFusigiKaziEffect__Hit_000 = 3,
	EJackFusigiKaziEffect__Hit_003 = 4,
	EJackFusigiKaziEffect__Snipe   = 5,
	EJackFusigiKaziEffect__PowerUp = 6,
	EJackFusigiKaziEffect__PowerDown = 7,
	EJackFusigiKaziEffect__TemperBack_000 = 8,
	EJackFusigiKaziEffect__Smoke_001 = 9,
	EJackFusigiKaziEffect__HissatuCharge = 10,
	EJackFusigiKaziEffect__Hot     = 11,
	EJackFusigiKaziEffect__Rise    = 12,
	EJackFusigiKaziEffect__Hit_001 = 13,
	EJackFusigiKaziEffect__Square_000 = 14,
	EJackFusigiKaziEffect__Fire    = 15,
	EJackFusigiKaziEffect__TypeMAX = 16,
	EJackFusigiKaziEffect__Invalid = 17,
	EJackFusigiKaziEffect__EJackFusigiKaziEffect_MAX = 18
};


// Enum JackGame.EJackFusigiKaziGameStat
enum class EJackFusigiKaziGameStat : uint8_t
{
	EJackFusigiKaziGameStat__TurnInit = 0,
	EJackFusigiKaziGameStat__WaitInit = 1,
	EJackFusigiKaziGameStat__CleanBeforeTurn = 2,
	EJackFusigiKaziGameStat__MainCommand = 3,
	EJackFusigiKaziGameStat__SubCommand = 4,
	EJackFusigiKaziGameStat__SelectCursor = 5,
	EJackFusigiKaziGameStat__SceneKuwasiku = 6,
	EJackFusigiKaziGameStat__WaitAction = 7,
	EJackFusigiKaziGameStat__NextTurn = 8,
	EJackFusigiKaziGameStat__DecideEnd = 9,
	EJackFusigiKaziGameStat__TypeMAX = 10,
	EJackFusigiKaziGameStat__Invalid = 11,
	EJackFusigiKaziGameStat__EJackFusigiKaziGameStat_MAX = 12
};


// Enum JackGame.EJackFusigiKaziGameResult
enum class EJackFusigiKaziGameResult : uint8_t
{
	EJackFusigiKaziGameResult__Sippai = 0,
	EJackFusigiKaziGameResult__Seikou = 1,
	EJackFusigiKaziGameResult__Seikou01 = 2,
	EJackFusigiKaziGameResult__Seikou02 = 3,
	EJackFusigiKaziGameResult__Daiseikou = 4,
	EJackFusigiKaziGameResult__TypeMAX = 5,
	EJackFusigiKaziGameResult__Invalid = 6,
	EJackFusigiKaziGameResult__EJackFusigiKaziGameResult_MAX = 7
};


// Enum JackGame.EJackFusigiKaziKuwasikuQuality
enum class EJackFusigiKaziKuwasikuQuality : uint8_t
{
	EJackFusigiKaziKuwasikuQuality__FAILED = 0,
	EJackFusigiKaziKuwasikuQuality__FAILED01 = 1,
	EJackFusigiKaziKuwasikuQuality__FAILED_RETRY = 2,
	EJackFusigiKaziKuwasikuQuality__SUCCESS_NORMAL = 3,
	EJackFusigiKaziKuwasikuQuality__SUCCESS_PLUS = 4,
	EJackFusigiKaziKuwasikuQuality__SUCCESS_PLUS01 = 5,
	EJackFusigiKaziKuwasikuQuality__SUCCESS_PLUS02 = 6,
	EJackFusigiKaziKuwasikuQuality__TypeMAX = 7,
	EJackFusigiKaziKuwasikuQuality__Invalid = 8,
	EJackFusigiKaziKuwasikuQuality__EJackFusigiKaziKuwasikuQuality_MAX = 9
};


// Enum JackGame.EJackFusigiKaziGameTokugi
enum class EJackFusigiKaziGameTokugi : uint8_t
{
	EJackFusigiKaziGameTokugi__Tataku = 0,
	EJackFusigiKaziGameTokugi__JougeUti = 1,
	EJackFusigiKaziGameTokugi__YonrenUti = 2,
	EJackFusigiKaziGameTokugi__SPYonrenUti = 3,
	EJackFusigiKaziGameTokugi__NanameUti = 4,
	EJackFusigiKaziGameTokugi__TekagenUti = 5,
	EJackFusigiKaziGameTokugi__NibaiUti = 6,
	EJackFusigiKaziGameTokugi__SanbaiUti = 7,
	EJackFusigiKaziGameTokugi__NeraiUti = 8,
	EJackFusigiKaziGameTokugi__KaryokuAge = 9,
	EJackFusigiKaziGameTokugi__NeppuOrosi = 10,
	EJackFusigiKaziGameTokugi__Hiyasikomi = 11,
	EJackFusigiKaziGameTokugi__MidareUti = 12,
	EJackFusigiKaziGameTokugi__Hepaitosu = 13,
	EJackFusigiKaziGameTokugi__KaisinUp_001 = 14,
	EJackFusigiKaziGameTokugi__KaisinUp_002 = 15,
	EJackFusigiKaziGameTokugi__KaisinUp_003 = 16,
	EJackFusigiKaziGameTokugi__Hissatu_Little = 17,
	EJackFusigiKaziGameTokugi__Tokugi = 18,
	EJackFusigiKaziGameTokugi__Kuwasiku = 19,
	EJackFusigiKaziGameTokugi__Siageru = 20,
	EJackFusigiKaziGameTokugi__Hissatu = 21,
	EJackFusigiKaziGameTokugi__TypeMAX = 22,
	EJackFusigiKaziGameTokugi__Invalid = 23,
	EJackFusigiKaziGameTokugi__EJackFusigiKaziGameTokugi_MAX = 24
};


// Enum JackGame.EJackFusigiKaziPossibleType
enum class EJackFusigiKaziPossibleType : uint8_t
{
	EJackFusigiKaziPossibleType__OK = 0,
	EJackFusigiKaziPossibleType__NG_PlusMax = 1,
	EJackFusigiKaziPossibleType__NG_NoHaveMaterial = 2,
	EJackFusigiKaziPossibleType__NG_NoHaveRetryMaterial = 3,
	EJackFusigiKaziPossibleType__NG_NotExistRecipe = 4,
	EJackFusigiKaziPossibleType__TypeMAX = 5,
	EJackFusigiKaziPossibleType__Invalid = 6,
	EJackFusigiKaziPossibleType__EJackFusigiKaziPossibleType_MAX = 7
};


// Enum JackGame.EJackMiniGameTableCoinType
enum class EJackMiniGameTableCoinType : uint8_t
{
	EJackMiniGameTableCoinType__OneCoin = 0,
	EJackMiniGameTableCoinType__TenCoin = 1,
	EJackMiniGameTableCoinType__HundredCoin = 2,
	EJackMiniGameTableCoinType__Max = 3
};


// Enum JackGame.EJackFusigiKaziMaterialSpecial
enum class EJackFusigiKaziMaterialSpecial : uint8_t
{
	EJackFusigiKaziMaterialSpecial__None = 0,
	EJackFusigiKaziMaterialSpecial__UpDownPower = 1,
	EJackFusigiKaziMaterialSpecial__ChangeCP = 2,
	EJackFusigiKaziMaterialSpecial__RecoverHP = 3,
	EJackFusigiKaziMaterialSpecial__KaisinUp = 4,
	EJackFusigiKaziMaterialSpecial__TypeMAX = 5,
	EJackFusigiKaziMaterialSpecial__Invalid = 6,
	EJackFusigiKaziMaterialSpecial__EJackFusigiKaziMaterialSpecial_MAX = 7
};


// Enum JackGame.EJackUIFaceIcon
enum class EJackUIFaceIcon : uint8_t
{
	EJackUIFaceIcon__HudAlive      = 0,
	EJackUIFaceIcon__HudDead       = 1,
	EJackUIFaceIcon__HudZone       = 2,
	EJackUIFaceIcon__HudZoneStart  = 3,
	EJackUIFaceIcon__HudZoneStop   = 4,
	EJackUIFaceIcon__MenuBust      = 5,
	EJackUIFaceIcon__MenuEye       = 6,
	EJackUIFaceIcon__MenuFace      = 7,
	EJackUIFaceIcon__FaceZoneOff   = 8,
	EJackUIFaceIcon__FaceZoneKakuteiIn = 9,
	EJackUIFaceIcon__FaceZoneKakuteiWait = 10,
	EJackUIFaceIcon__FaceZoneIn    = 11,
	EJackUIFaceIcon__FaceZoneWait  = 12,
	EJackUIFaceIcon__FaceZoneLimitIn = 13,
	EJackUIFaceIcon__FaceZoneLimitWait = 14,
	EJackUIFaceIcon__FaceZoneOut   = 15,
	EJackUIFaceIcon__FaceZoneAllSet = 16,
	EJackUIFaceIcon__HudAliveReset = 17,
	EJackUIFaceIcon__HudAliveZone  = 18,
	EJackUIFaceIcon__MAX           = 19
};


// Enum JackGame.EJackUMGJumonBasyo
enum class EJackUMGJumonBasyo : uint8_t
{
	EJackUMGJumonBasyo__All        = 0,
	EJackUMGJumonBasyo__Field      = 1,
	EJackUMGJumonBasyo__Battle     = 2,
	EJackUMGJumonBasyo__MAX        = 3
};


// Enum JackGame.EJackUMGMembarZenin
enum class EJackUMGMembarZenin : uint8_t
{
	EJackUMGMembarZenin__None      = 0,
	EJackUMGMembarZenin__Top       = 1,
	EJackUMGMembarZenin__Bottom    = 2,
	EJackUMGMembarZenin__MAX       = 3
};


// Enum JackGame.EJackUMGOsusumeSoubi
enum class EJackUMGOsusumeSoubi : uint8_t
{
	EJackUMGOsusumeSoubi__KougekiRyoku = 0,
	EJackUMGOsusumeSoubi__SyubiRyoku = 1,
	EJackUMGOsusumeSoubi__KougekiMaryoku = 2,
	EJackUMGOsusumeSoubi__MAX      = 3
};


// Enum JackGame.EJackPartyTalkState
enum class EJackPartyTalkState : uint8_t
{
	EJackPartyTalkState__Possible  = 0,
	EJackPartyTalkState__Impossible = 1,
	EJackPartyTalkState__NonParty  = 2,
	EJackPartyTalkState__AllDead   = 3,
	EJackPartyTalkState__MAX       = 4
};


// Enum JackGame.EJackBattleCameraMode
enum class EJackBattleCameraMode : uint8_t
{
	EJackBattleCameraMode__Free    = 0,
	EJackBattleCameraMode__Simple  = 1,
	EJackBattleCameraMode__MAX     = 2
};


// Enum JackGame.EJackBattleSpeedMode
enum class EJackBattleSpeedMode : uint8_t
{
	EJackBattleSpeedMode__Normal   = 0,
	EJackBattleSpeedMode__Fast     = 1,
	EJackBattleSpeedMode__VeryFast = 2,
	EJackBattleSpeedMode__MAX      = 3
};


// Enum JackGame.EJackUMGBoukennoSyoAction
enum class EJackUMGBoukennoSyoAction : uint8_t
{
	EJackUMGBoukennoSyoAction__Start = 0,
	EJackUMGBoukennoSyoAction__Make = 1,
	EJackUMGBoukennoSyoAction__Delete = 2,
	EJackUMGBoukennoSyoAction__StartTaiken = 3,
	EJackUMGBoukennoSyoAction__MAX = 4
};


// Enum JackGame.EJackUMGBoukennoSyoSubAction
enum class EJackUMGBoukennoSyoSubAction : uint8_t
{
	EJackUMGBoukennoSyoSubAction__None = 0,
	EJackUMGBoukennoSyoSubAction__Sibai = 1,
	EJackUMGBoukennoSyoSubAction__Arasuzi = 2,
	EJackUMGBoukennoSyoSubAction__SibariArasuzi = 3,
	EJackUMGBoukennoSyoSubAction__MAX = 4
};


// Enum JackGame.EJackCameraSpeed
enum class EJackCameraSpeed : uint8_t
{
	EJackCameraSpeed__VerySlow     = 0,
	EJackCameraSpeed__VerySlow2    = 1,
	EJackCameraSpeed__Slow         = 2,
	EJackCameraSpeed__Slow2        = 3,
	EJackCameraSpeed__Normal       = 4,
	EJackCameraSpeed__Normal2      = 5,
	EJackCameraSpeed__LittleFast   = 6,
	EJackCameraSpeed__LittleFast2  = 7,
	EJackCameraSpeed__Fast         = 8,
	EJackCameraSpeed__Fast2        = 9,
	EJackCameraSpeed__MAX          = 10
};


// Enum JackGame.EJackVoice
enum class EJackVoice : uint8_t
{
	EJackVoice__EnglishGB          = 0,
	EJackVoice__Japanese           = 1,
	EJackVoice__None               = 2,
	EJackVoice__MAX                = 3
};


// Enum JackGame.EJackDisplayGamma
enum class EJackDisplayGamma : uint8_t
{
	EJackDisplayGamma__Level       = 0,
	EJackDisplayGamma__Level01     = 1,
	EJackDisplayGamma__Level02     = 2,
	EJackDisplayGamma__Level03     = 3,
	EJackDisplayGamma__Level04     = 4,
	EJackDisplayGamma__Level05     = 5,
	EJackDisplayGamma__Level06     = 6,
	EJackDisplayGamma__Level07     = 7,
	EJackDisplayGamma__Level08     = 8,
	EJackDisplayGamma__Level09     = 9,
	EJackDisplayGamma__Level10     = 10,
	EJackDisplayGamma__Level11     = 11,
	EJackDisplayGamma__Level12     = 12,
	EJackDisplayGamma__Level13     = 13,
	EJackDisplayGamma__Level14     = 14,
	EJackDisplayGamma__Level15     = 15,
	EJackDisplayGamma__Level16     = 16,
	EJackDisplayGamma__Level17     = 17,
	EJackDisplayGamma__Level18     = 18,
	EJackDisplayGamma__Level19     = 19,
	EJackDisplayGamma__Level20     = 20,
	EJackDisplayGamma__Level21     = 21,
	EJackDisplayGamma__Level22     = 22,
	EJackDisplayGamma__Level23     = 23,
	EJackDisplayGamma__Level24     = 24,
	EJackDisplayGamma__Level25     = 25,
	EJackDisplayGamma__Level26     = 26,
	EJackDisplayGamma__Level27     = 27,
	EJackDisplayGamma__Level28     = 28,
	EJackDisplayGamma__Level29     = 29,
	EJackDisplayGamma__Level30     = 30,
	EJackDisplayGamma__Level31     = 31,
	EJackDisplayGamma__Level32     = 32,
	EJackDisplayGamma__Level33     = 33,
	EJackDisplayGamma__Level34     = 34,
	EJackDisplayGamma__Level35     = 35,
	EJackDisplayGamma__Level36     = 36,
	EJackDisplayGamma__Level37     = 37,
	EJackDisplayGamma__Level38     = 38,
	EJackDisplayGamma__Level39     = 39,
	EJackDisplayGamma__Level40     = 40,
	EJackDisplayGamma__Level41     = 41,
	EJackDisplayGamma__Level42     = 42,
	EJackDisplayGamma__Level43     = 43,
	EJackDisplayGamma__Level44     = 44,
	EJackDisplayGamma__Level45     = 45,
	EJackDisplayGamma__Level46     = 46,
	EJackDisplayGamma__Level47     = 47,
	EJackDisplayGamma__Level48     = 48,
	EJackDisplayGamma__Level49     = 49,
	EJackDisplayGamma__Level50     = 50,
	EJackDisplayGamma__Level51     = 51,
	EJackDisplayGamma__Level52     = 52,
	EJackDisplayGamma__Level53     = 53,
	EJackDisplayGamma__Level54     = 54,
	EJackDisplayGamma__Level55     = 55,
	EJackDisplayGamma__Level56     = 56,
	EJackDisplayGamma__Level57     = 57,
	EJackDisplayGamma__Level58     = 58,
	EJackDisplayGamma__Level59     = 59,
	EJackDisplayGamma__Level60     = 60,
	EJackDisplayGamma__Level61     = 61,
	EJackDisplayGamma__Level62     = 62,
	EJackDisplayGamma__Level63     = 63,
	EJackDisplayGamma__Level64     = 64,
	EJackDisplayGamma__Level65     = 65,
	EJackDisplayGamma__Level66     = 66,
	EJackDisplayGamma__Level67     = 67,
	EJackDisplayGamma__Level68     = 68,
	EJackDisplayGamma__Level69     = 69,
	EJackDisplayGamma__Level70     = 70,
	EJackDisplayGamma__Level71     = 71,
	EJackDisplayGamma__Level72     = 72,
	EJackDisplayGamma__Level73     = 73,
	EJackDisplayGamma__Level74     = 74,
	EJackDisplayGamma__Level75     = 75,
	EJackDisplayGamma__Level76     = 76,
	EJackDisplayGamma__Level77     = 77,
	EJackDisplayGamma__Level78     = 78,
	EJackDisplayGamma__Level79     = 79,
	EJackDisplayGamma__Level80     = 80,
	EJackDisplayGamma__Level81     = 81,
	EJackDisplayGamma__Level82     = 82,
	EJackDisplayGamma__Level83     = 83,
	EJackDisplayGamma__Level84     = 84,
	EJackDisplayGamma__Level85     = 85,
	EJackDisplayGamma__Level86     = 86,
	EJackDisplayGamma__Level87     = 87,
	EJackDisplayGamma__Level88     = 88,
	EJackDisplayGamma__Level89     = 89,
	EJackDisplayGamma__Level90     = 90,
	EJackDisplayGamma__Level91     = 91,
	EJackDisplayGamma__Level92     = 92,
	EJackDisplayGamma__Level93     = 93,
	EJackDisplayGamma__Level94     = 94,
	EJackDisplayGamma__Level95     = 95,
	EJackDisplayGamma__Level96     = 96,
	EJackDisplayGamma__Level97     = 97,
	EJackDisplayGamma__Level98     = 98,
	EJackDisplayGamma__Level99     = 99,
	EJackDisplayGamma__MAX         = 100
};


// Enum JackGame.EJackUMGRestartMenuType
enum class EJackUMGRestartMenuType : uint8_t
{
	EJackUMGRestartMenuType__Oinori = 0,
	EJackUMGRestartMenuType__LastVisited = 1,
	EJackUMGRestartMenuType__AutoSave = 2,
	EJackUMGRestartMenuType__Cancel = 3,
	EJackUMGRestartMenuType__MAX   = 4
};


// Enum JackGame.EJackPlayGoMenuType
enum class EJackPlayGoMenuType : uint8_t
{
	EJackPlayGoMenuType__None      = 0,
	EJackPlayGoMenuType__GoToTitle = 1,
	EJackPlayGoMenuType__FromBoukennosyo = 2,
	EJackPlayGoMenuType__FromFukkatunojumon = 3,
	EJackPlayGoMenuType__DontGo    = 4,
	EJackPlayGoMenuType__VoiceDrama = 5,
	EJackPlayGoMenuType__MAX       = 6
};


// Enum JackGame.EJackPlayGoMenuResult
enum class EJackPlayGoMenuResult : uint8_t
{
	EJackPlayGoMenuResult__None    = 0,
	EJackPlayGoMenuResult__Close   = 1,
	EJackPlayGoMenuResult__CompleteInstall = 2,
	EJackPlayGoMenuResult__MAX     = 3
};


// Enum JackGame.EJackRenkeiSettei
enum class EJackRenkeiSettei : uint8_t
{
	EJackRenkeiSettei__JidouRenkei = 0,
	EJackRenkeiSettei__RenkeiSinai = 1,
	EJackRenkeiSettei__MAX         = 2
};


// Enum JackGame.EJackKeyboardType
enum class EJackKeyboardType : uint8_t
{
	EJackKeyboardType__Japanese    = 0,
	EJackKeyboardType__English     = 1,
	EJackKeyboardType__French      = 2,
	EJackKeyboardType__Italian     = 3,
	EJackKeyboardType__German      = 4,
	EJackKeyboardType__Spanish     = 5,
	EJackKeyboardType__MAX         = 6
};


// Enum JackGame.EJackUMGSibariMode
enum class EJackUMGSibariMode : uint8_t
{
	EJackUMGSibariMode__None       = 0,
	EJackUMGSibariMode__Settei     = 1,
	EJackUMGSibariMode__Kakunin    = 2,
	EJackUMGSibariMode__Tassei     = 3,
	EJackUMGSibariMode__MAX        = 4
};


// Enum JackGame.EJackUMGGraphicOption
enum class EJackUMGGraphicOption : uint8_t
{
	EJackUMGGraphicOption__All     = 0,
	EJackUMGGraphicOption__AntiAliasing = 1,
	EJackUMGGraphicOption__PostProcessing = 2,
	EJackUMGGraphicOption__Shadow  = 3,
	EJackUMGGraphicOption__Texture = 4,
	EJackUMGGraphicOption__VisualEffect = 5,
	EJackUMGGraphicOption__Foliage = 6,
	EJackUMGGraphicOption__FrameRate = 7,
	EJackUMGGraphicOption__VSync   = 8,
	EJackUMGGraphicOption__Window  = 9,
	EJackUMGGraphicOption__ScreenPercent = 10,
	EJackUMGGraphicOption__ScreenRes = 11,
	EJackUMGGraphicOption__EJackUMGGraphicOption_MAX = 12
};


// Enum JackGame.EJackSaveLoadResult
enum class EJackSaveLoadResult : uint8_t
{
	EJackSaveLoadResult__SUCCESS   = 0,
	EJackSaveLoadResult__BUSY      = 1,
	EJackSaveLoadResult__NO_FILE   = 2,
	EJackSaveLoadResult__NO_SPACE  = 3,
	EJackSaveLoadResult__READ_ONLY = 4,
	EJackSaveLoadResult__EXIST_FILE = 5,
	EJackSaveLoadResult__INVALID_USER = 6,
	EJackSaveLoadResult__BROKEN    = 7,
	EJackSaveLoadResult__NO_SYSTEM = 8,
	EJackSaveLoadResult__UNKNOWN_ERROR = 9,
	EJackSaveLoadResult__MAX       = 10
};


// Enum JackGame.EJackScenarioPlaythrough
enum class EJackScenarioPlaythrough : uint8_t
{
	EJackScenarioPlaythrough__First = 0,
	EJackScenarioPlaythrough__Second = 1,
	EJackScenarioPlaythrough__MAX  = 2
};


// Enum JackGame.EJackFukkatunojumonSpell
enum class EJackFukkatunojumonSpell : uint8_t
{
	EJackFukkatunojumonSpell__None = 0,
	EJackFukkatunojumonSpell__DQ11 = 1,
	EJackFukkatunojumonSpell__DQ1  = 2,
	EJackFukkatunojumonSpell__DQ2  = 3,
	EJackFukkatunojumonSpell__Special = 4,
	EJackFukkatunojumonSpell__EJackFukkatunojumonSpell_MAX = 5
};


// Enum JackGame.EJackFukkatunojumonPlatform
enum class EJackFukkatunojumonPlatform : uint8_t
{
	EJackFukkatunojumonPlatform__None = 0,
	EJackFukkatunojumonPlatform__PS4 = 1,
	EJackFukkatunojumonPlatform__NT3DS = 2,
	EJackFukkatunojumonPlatform__NTSWITCH = 3,
	EJackFukkatunojumonPlatform__MARBLE = 4,
	EJackFukkatunojumonPlatform__EJackFukkatunojumonPlatform_MAX = 5
};


// Enum JackGame.EJackFukkatunojumon
enum class EJackFukkatunojumon : uint8_t
{
	EJackFukkatunojumon__None      = 0,
	EJackFukkatunojumon__DQ11_Normal = 1,
	EJackFukkatunojumon__DQ1_2_Normal = 2,
	EJackFukkatunojumon__DQ1_2_Fame = 3,
	EJackFukkatunojumon__Special_Triple = 4,
	EJackFukkatunojumon__Special_2ndLapEnding = 5,
	EJackFukkatunojumon__Special_StoreOpen = 6,
	EJackFukkatunojumon__Special_NewGamePlus = 7,
	EJackFukkatunojumon__MAX       = 8
};


// Enum JackGame.EJackYadoyaMorningCallTimezone
enum class EJackYadoyaMorningCallTimezone : uint8_t
{
	EJackYadoyaMorningCallTimezone__None = 0,
	EJackYadoyaMorningCallTimezone__Morning = 1,
	EJackYadoyaMorningCallTimezone__Noon = 2,
	EJackYadoyaMorningCallTimezone__Evening = 3,
	EJackYadoyaMorningCallTimezone__Night = 4,
	EJackYadoyaMorningCallTimezone__StayToMorning = 5,
	EJackYadoyaMorningCallTimezone__MAX = 6
};


// Enum JackGame.EJackCampMenuResult
enum class EJackCampMenuResult : uint8_t
{
	EJackCampMenuResult__None      = 0,
	EJackCampMenuResult__Break     = 1,
	EJackCampMenuResult__Blacksmith = 2,
	EJackCampMenuResult__Church    = 3,
	EJackCampMenuResult__CampQuit  = 4,
	EJackCampMenuResult__MAX       = 5
};


// Enum JackGame.EJackKyoukaiEffectEventType
enum class EJackKyoukaiEffectEventType : uint8_t
{
	EJackKyoukaiEffectEventType__ExecuteRevive = 0,
	EJackKyoukaiEffectEventType__ExecuteTreat = 1,
	EJackKyoukaiEffectEventType__ExecuteDispel = 2,
	EJackKyoukaiEffectEventType__ExecuteSave = 3,
	EJackKyoukaiEffectEventType__MAX = 4
};


// Enum JackGame.EJackChurchFukkatunojumon
enum class EJackChurchFukkatunojumon : uint8_t
{
	EJackChurchFukkatunojumon__Unknown = 0,
	EJackChurchFukkatunojumon__Open = 1,
	EJackChurchFukkatunojumon__Close = 2,
	EJackChurchFukkatunojumon__FlagCheck = 3,
	EJackChurchFukkatunojumon__MAX = 4
};


// Enum JackGame.EJackChurch
enum class EJackChurch : uint8_t
{
	EJackChurch__Unknown           = 0,
	EJackChurch__Church            = 1,
	EJackChurch__Bible             = 2,
	EJackChurch__ChapterSave       = 3,
	EJackChurch__ChapterSaveYotti  = 4,
	EJackChurch__MAX               = 5
};


// Enum JackGame.EJackKyoukaiEventType
enum class EJackKyoukaiEventType : uint8_t
{
	EJackKyoukaiEventType__None    = 0,
	EJackKyoukaiEventType__ToTitle = 1,
	EJackKyoukaiEventType__SibariReset = 2,
	EJackKyoukaiEventType__MAX     = 3
};


// Enum JackGame.EJackKyoukaiSavedFlag
enum class EJackKyoukaiSavedFlag : uint8_t
{
	EJackKyoukaiSavedFlag__None    = 0,
	EJackKyoukaiSavedFlag__UnSave  = 1,
	EJackKyoukaiSavedFlag__Saved   = 2,
	EJackKyoukaiSavedFlag__MAX     = 3
};


// Enum JackGame.EJackMedal_Shop
enum class EJackMedal_Shop : uint8_t
{
	EJackMedal_Shop__BranchOffice  = 0,
	EJackMedal_Shop__GirlsHighSchool = 1,
	EJackMedal_Shop__MAX           = 2
};


// Enum JackGame.EJackUMGShopType
enum class EJackUMGShopType : uint8_t
{
	EJackUMGShopType__Shop         = 0,
	EJackUMGShopType__Yadoya       = 1,
	EJackUMGShopType__Kyoukai      = 2,
	EJackUMGShopType__Ginkou       = 3,
	EJackUMGShopType__CasinoCoin   = 4,
	EJackUMGShopType__CasinoKeihin = 5,
	EJackUMGShopType__MedalStamp   = 6,
	EJackUMGShopType__MedalKeihin  = 7,
	EJackUMGShopType__UtinaosiNoHouju = 8,
	EJackUMGShopType__MAX          = 9
};


// Enum JackGame.EJackUMGYaodyaState
enum class EJackUMGYaodyaState : uint8_t
{
	EJackUMGYaodyaState__Enable    = 0,
	EJackUMGYaodyaState__Disable   = 1,
	EJackUMGYaodyaState__DisableStay = 2,
	EJackUMGYaodyaState__DisableBreak = 3,
	EJackUMGYaodyaState__MAX       = 4
};


// Enum JackGame.EJackYadoyaEventType
enum class EJackYadoyaEventType : uint8_t
{
	EJackYadoyaEventType__Stay     = 0,
	EJackYadoyaEventType__Break    = 1,
	EJackYadoyaEventType__Quit     = 2,
	EJackYadoyaEventType__MAX      = 3
};


// Enum JackGame.EJackUMGItemContainerType
enum class EJackUMGItemContainerType : uint8_t
{
	EJackUMGItemContainerType__Value = 0,
	EJackUMGItemContainerType__Text = 1,
	EJackUMGItemContainerType__Image = 2,
	EJackUMGItemContainerType__Object = 3,
	EJackUMGItemContainerType__Visibility = 4,
	EJackUMGItemContainerType__MAX = 5
};


// Enum JackGame.EJackUMGWidgetConnectTarget
enum class EJackUMGWidgetConnectTarget : uint8_t
{
	EJackUMGWidgetConnectTarget__Viewport = 0,
	EJackUMGWidgetConnectTarget__CanvasPanel = 1,
	EJackUMGWidgetConnectTarget__RootPanel = 2,
	EJackUMGWidgetConnectTarget__Menu = 3,
	EJackUMGWidgetConnectTarget__MAX = 4
};


// Enum JackGame.EJackUMGMenuLoadResult
enum class EJackUMGMenuLoadResult : uint8_t
{
	EJackUMGMenuLoadResult__NoLoad = 0,
	EJackUMGMenuLoadResult__Error  = 1,
	EJackUMGMenuLoadResult__Complate = 2,
	EJackUMGMenuLoadResult__Loading = 3,
	EJackUMGMenuLoadResult__MAX    = 4
};


// Enum JackGame.EJackUMGMenuId
enum class EJackUMGMenuId : uint8_t
{
	EJackUMGMenuId__NoOpen         = 0,
	EJackUMGMenuId__CloseMenu      = 1,
	EJackUMGMenuId__TitleMenu      = 2,
	EJackUMGMenuId__BoukenNoSyoMenu = 3,
	EJackUMGMenuId__MainMenu       = 4,
	EJackUMGMenuId__BattleMenu     = 5,
	EJackUMGMenuId__ShopMenu       = 6,
	EJackUMGMenuId__KyoukaiMenu    = 7,
	EJackUMGMenuId__GinkouMenu     = 8,
	EJackUMGMenuId__YadoyaMenu     = 9,
	EJackUMGMenuId__CampStartMenu  = 10,
	EJackUMGMenuId__CampMenu       = 11,
	EJackUMGMenuId__BattleRoundMenu = 12,
	EJackUMGMenuId__BattleSakusenMenu = 13,
	EJackUMGMenuId__SakusenYoyakuMenu = 14,
	EJackUMGMenuId__CSSkipDialog   = 15,
	EJackUMGMenuId__KaziMenu       = 16,
	EJackUMGMenuId__SyougouDialog  = 17,
	EJackUMGMenuId__UmaRaceMenu    = 18,
	EJackUMGMenuId__WorldMap       = 19,
	EJackUMGMenuId__LocalMap       = 20,
	EJackUMGMenuId__MedalStampTyou = 21,
	EJackUMGMenuId__MedalKeihinKoukanMenu = 22,
	EJackUMGMenuId__CasinoCoinKoukanMenu = 23,
	EJackUMGMenuId__CasinoKeihinKoukanMenu = 24,
	EJackUMGMenuId__TabinoOmoideMenu = 25,
	EJackUMGMenuId__TokugiPanel    = 26,
	EJackUMGMenuId__TutorialWindow = 27,
	EJackUMGMenuId__SyuurenjyouMenu = 28,
	EJackUMGMenuId__PlayGoMenu     = 29,
	EJackUMGMenuId__ArasuziMenu    = 30,
	EJackUMGMenuId__NerusenPicture = 31,
	EJackUMGMenuId__RestartMenu    = 32,
	EJackUMGMenuId__KimeraMenu     = 33,
	EJackUMGMenuId__MeosiMenu      = 34,
	EJackUMGMenuId__QuestClearWindow = 35,
	EJackUMGMenuId__HoujuKoukanMenu = 36,
	EJackUMGMenuId__SibariTasseiMenu = 37,
	EJackUMGMenuId__ShortCutMenu   = 38,
	EJackUMGMenuId__PhotoModeMenu  = 39,
	EJackUMGMenuId__VoiceDrama     = 40,
	EJackUMGMenuId__VoiceDramaList = 41,
	EJackUMGMenuId__PrivacyPolicy  = 42,
	EJackUMGMenuId__SystemSetteiMenu = 43,
	EJackUMGMenuId__SuspendGameMenu = 44,
	EJackUMGMenuId__ChangeProfileMenu = 45,
	EJackUMGMenuId__PairingControllerMenu = 46,
	EJackUMGMenuId__DisplayProfile = 47,
	EJackUMGMenuId__InitControllerMenu = 48,
	EJackUMGMenuId__KeyConfigMenu  = 49,
	EJackUMGMenuId__SelectKetteiKeyMenu = 50,
	EJackUMGMenuId__SubMenuSettei  = 51,
	EJackUMGMenuId__JukeboxMenu    = 52,
	EJackUMGMenuId__MenuDebugMenu  = 53,
	EJackUMGMenuId__AllMenu        = 54,
	EJackUMGMenuId__MAX            = 55
};


// Enum JackGame.EJackUMGVoiceDramaMode
enum class EJackUMGVoiceDramaMode : uint8_t
{
	EJackUMGVoiceDramaMode__VoiceDramaSelect = 0,
	EJackUMGVoiceDramaMode__VoiceDramaMain = 1,
	EJackUMGVoiceDramaMode__VoiceDramaStaff = 2,
	EJackUMGVoiceDramaMode__VoiceDramaPafuPafu = 3,
	EJackUMGVoiceDramaMode__MAX    = 4
};


// Enum JackGame.EJackUMGCutSceneSkipEvent
enum class EJackUMGCutSceneSkipEvent : uint8_t
{
	EJackUMGCutSceneSkipEvent__None = 0,
	EJackUMGCutSceneSkipEvent__CutSceneSkip = 1,
	EJackUMGCutSceneSkipEvent__SwitchAutoFeed = 2,
	EJackUMGCutSceneSkipEvent__MAX = 3
};


// Enum JackGame.EJackRuraPurpose
enum class EJackRuraPurpose : uint8_t
{
	EJackRuraPurpose__Invalid      = 0,
	EJackRuraPurpose__Rura         = 1,
	EJackRuraPurpose__KazenoBousi  = 2,
	EJackRuraPurpose__ChimeraWing  = 3,
	EJackRuraPurpose__Riremito     = 4,
	EJackRuraPurpose__OmoideNoSuzu = 5,
	EJackRuraPurpose__MAX          = 6
};


// Enum JackGame.EJackCursorSaveScene
enum class EJackCursorSaveScene : uint8_t
{
	EJackCursorSaveScene__Field    = 0,
	EJackCursorSaveScene__Battle   = 1,
	EJackCursorSaveScene__Other    = 2,
	EJackCursorSaveScene__MAX      = 3
};


// Enum JackGame.EJackSpeed
enum class EJackSpeed : uint8_t
{
	EJackSpeed__None               = 0,
	EJackSpeed__SpecialSlow        = 1,
	EJackSpeed__Slowest            = 2,
	EJackSpeed__Slower             = 3,
	EJackSpeed__Slow               = 4,
	EJackSpeed__Normal             = 5,
	EJackSpeed__Fast               = 6,
	EJackSpeed__Faster             = 7,
	EJackSpeed__Fastest            = 8,
	EJackSpeed__MAX                = 9
};


// Enum JackGame.EJackUMGSyougouColor
enum class EJackUMGSyougouColor : uint8_t
{
	EJackUMGSyougouColor__Legend   = 0,
	EJackUMGSyougouColor__Platinum = 1,
	EJackUMGSyougouColor__Gold     = 2,
	EJackUMGSyougouColor__MAX      = 3
};


// Enum JackGame.EJackUMGPresetColor
enum class EJackUMGPresetColor : uint8_t
{
	EJackUMGPresetColor__NormalColor = 0,
	EJackUMGPresetColor__DisableColor = 1,
	EJackUMGPresetColor__MAX       = 2
};


// Enum JackGame.EJackUMGCutSceneSkipDialog
enum class EJackUMGCutSceneSkipDialog : uint8_t
{
	EJackUMGCutSceneSkipDialog__Hide = 0,
	EJackUMGCutSceneSkipDialog__Show = 1,
	EJackUMGCutSceneSkipDialog__AlwaysShow = 2,
	EJackUMGCutSceneSkipDialog__Close = 3,
	EJackUMGCutSceneSkipDialog__Title = 4,
	EJackUMGCutSceneSkipDialog__MAX = 5
};


// Enum JackGame.EJackUMGNorimonoGauge
enum class EJackUMGNorimonoGauge : uint8_t
{
	EJackUMGNorimonoGauge__Horse3  = 0,
	EJackUMGNorimonoGauge__Horse4  = 1,
	EJackUMGNorimonoGauge__Norimono = 2,
	EJackUMGNorimonoGauge__Norimono01 = 3,
	EJackUMGNorimonoGauge__Norimono02 = 4,
	EJackUMGNorimonoGauge__Norimono03 = 5,
	EJackUMGNorimonoGauge__Norimono04 = 6,
	EJackUMGNorimonoGauge__Norimono05 = 7,
	EJackUMGNorimonoGauge__Norimono06 = 8,
	EJackUMGNorimonoGauge__Norimono07 = 9,
	EJackUMGNorimonoGauge__Norimono_00 = 10,
	EJackUMGNorimonoGauge__Norimono_01 = 11,
	EJackUMGNorimonoGauge__Norimono_02 = 12,
	EJackUMGNorimonoGauge__Norimono_03 = 13,
	EJackUMGNorimonoGauge__MAX     = 14
};


// Enum JackGame.EJackWorldMapOpenReason
enum class EJackWorldMapOpenReason : uint8_t
{
	EJackWorldMapOpenReason__None  = 0,
	EJackWorldMapOpenReason__OpenMapButton = 1,
	EJackWorldMapOpenReason__WorldMapMenu = 2,
	EJackWorldMapOpenReason__UseDaijinamono = 3,
	EJackWorldMapOpenReason__JumonRura = 4,
	EJackWorldMapOpenReason__MapRura = 5,
	EJackWorldMapOpenReason__MAX   = 6
};


// Enum JackGame.EJackUMGNorimonoGaugeAction
enum class EJackUMGNorimonoGaugeAction : uint8_t
{
	EJackUMGNorimonoGaugeAction__Oriru_On = 0,
	EJackUMGNorimonoGaugeAction__Oriru_Off = 1,
	EJackUMGNorimonoGaugeAction__SpecialOn = 2,
	EJackUMGNorimonoGaugeAction__SpecialOff = 3,
	EJackUMGNorimonoGaugeAction__None = 4,
	EJackUMGNorimonoGaugeAction__MAX = 5
};


// Enum JackGame.EJackUMGHudRegion
enum class EJackUMGHudRegion : uint8_t
{
	EJackUMGHudRegion__Default     = 0,
	EJackUMGHudRegion__FullScreen  = 1,
	EJackUMGHudRegion__Menu        = 2,
	EJackUMGHudRegion__HudStatus   = 3,
	EJackUMGHudRegion__LocationTitle = 4,
	EJackUMGHudRegion__MAX         = 5
};


// Enum JackGame.EJackUMGMenuLayout
enum class EJackUMGMenuLayout : uint8_t
{
	EJackUMGMenuLayout__Default    = 0,
	EJackUMGMenuLayout__LeftTop    = 1,
	EJackUMGMenuLayout__RightTop   = 2,
	EJackUMGMenuLayout__CenterTop  = 3,
	EJackUMGMenuLayout__LeftBottom = 4,
	EJackUMGMenuLayout__RightBottom = 5,
	EJackUMGMenuLayout__CenterBottom = 6,
	EJackUMGMenuLayout__CenterCenter = 7,
	EJackUMGMenuLayout__LeftCenter = 8,
	EJackUMGMenuLayout__RightCenter = 9,
	EJackUMGMenuLayout__Zero       = 10,
	EJackUMGMenuLayout__MAX        = 11
};


// Enum JackGame.EJackUMGHudAnimationAction
enum class EJackUMGHudAnimationAction : uint8_t
{
	EJackUMGHudAnimationAction__Open = 0,
	EJackUMGHudAnimationAction__Close = 1,
	EJackUMGHudAnimationAction__AnimWait = 2,
	EJackUMGHudAnimationAction__AnimActiveStart = 3,
	EJackUMGHudAnimationAction__AnimActiveWait = 4,
	EJackUMGHudAnimationAction__AnimActiveEnd = 5,
	EJackUMGHudAnimationAction__AnimDead = 6,
	EJackUMGHudAnimationAction__AnimNoActiveWait = 7,
	EJackUMGHudAnimationAction__AnimActiveEndOnce = 8,
	EJackUMGHudAnimationAction__CloseNoAnimation = 9,
	EJackUMGHudAnimationAction__SuperMode = 10,
	EJackUMGHudAnimationAction__MAX = 11
};


// Enum JackGame.EJackUMGSaveingIndicator
enum class EJackUMGSaveingIndicator : uint8_t
{
	EJackUMGSaveingIndicator__ManualSave = 0,
	EJackUMGSaveingIndicator__AutoSave = 1,
	EJackUMGSaveingIndicator__FailedSave = 2,
	EJackUMGSaveingIndicator__FailedSaveVoiceDrama = 3,
	EJackUMGSaveingIndicator__MAX  = 4
};


// Enum JackGame.EJackUMGHorizontalMode
enum class EJackUMGHorizontalMode : uint8_t
{
	EJackUMGHorizontalMode__None   = 0,
	EJackUMGHorizontalMode__DisplayGamma = 1,
	EJackUMGHorizontalMode__VolumeBGM = 2,
	EJackUMGHorizontalMode__VolumeSE = 3,
	EJackUMGHorizontalMode__VolumeVoice = 4,
	EJackUMGHorizontalMode__ScreenPercentage = 5,
	EJackUMGHorizontalMode__ShadowQuality = 6,
	EJackUMGHorizontalMode__MAX    = 7
};


// Enum JackGame.EJackUMGHudInitQueued
enum class EJackUMGHudInitQueued : uint8_t
{
	EJackUMGHudInitQueued__Queued  = 0,
	EJackUMGHudInitQueued__NotQueued = 1,
	EJackUMGHudInitQueued__TokiWoUbau = 2,
	EJackUMGHudInitQueued__QueuedActive = 3,
	EJackUMGHudInitQueued__MAX     = 4
};


// Enum JackGame.EJackUMGHudPlateAnim
enum class EJackUMGHudPlateAnim : uint8_t
{
	EJackUMGHudPlateAnim__Start    = 0,
	EJackUMGHudPlateAnim__END      = 1,
	EJackUMGHudPlateAnim__Wait     = 2,
	EJackUMGHudPlateAnim__StartActive = 3,
	EJackUMGHudPlateAnim__EndActive = 4,
	EJackUMGHudPlateAnim__WaitActive = 5,
	EJackUMGHudPlateAnim__Dead     = 6,
	EJackUMGHudPlateAnim__EndActiveOnce = 7,
	EJackUMGHudPlateAnim__MAX      = 8
};


// Enum JackGame.EJackUMGHudStatusMode
enum class EJackUMGHudStatusMode : uint8_t
{
	EJackUMGHudStatusMode__Name    = 0,
	EJackUMGHudStatusMode__Hp      = 1,
	EJackUMGHudStatusMode__Mp      = 2,
	EJackUMGHudStatusMode__Level   = 3,
	EJackUMGHudStatusMode__MAX     = 4
};


// Enum JackGame.EJackUMGNamePlatform
enum class EJackUMGNamePlatform : uint8_t
{
	EJackUMGNamePlatform__PFSwitch = 0,
	EJackUMGNamePlatform__PFPs4    = 1,
	EJackUMGNamePlatform__PFWindows = 2,
	EJackUMGNamePlatform__PFOther  = 3,
	EJackUMGNamePlatform__MAX      = 4
};


// Enum JackGame.EJackVoiceDramaMode
enum class EJackVoiceDramaMode : uint8_t
{
	EJackVoiceDramaMode__Init      = 0,
	EJackVoiceDramaMode__Voice     = 1,
	EJackVoiceDramaMode__Subtitle  = 2,
	EJackVoiceDramaMode__Log       = 3,
	EJackVoiceDramaMode__FastForward = 4,
	EJackVoiceDramaMode__FastBackward = 5,
	EJackVoiceDramaMode__StaffRoll = 6,
	EJackVoiceDramaMode__MAX       = 7
};


// Enum JackGame.EJackVoiceDramaPausePurpose
enum class EJackVoiceDramaPausePurpose : uint8_t
{
	EJackVoiceDramaPausePurpose__Window = 0,
	EJackVoiceDramaPausePurpose__Wait = 1,
	EJackVoiceDramaPausePurpose__LogMode = 2,
	EJackVoiceDramaPausePurpose__MenuEnd = 3,
	EJackVoiceDramaPausePurpose__Pafupafu = 4,
	EJackVoiceDramaPausePurpose__MAX = 5
};


// Enum JackGame.EJackVoiceDramaEvent
enum class EJackVoiceDramaEvent : uint8_t
{
	EJackVoiceDramaEvent__PageEnd  = 0,
	EJackVoiceDramaEvent__LogPageUpdate = 1,
	EJackVoiceDramaEvent__FastForwardStart = 2,
	EJackVoiceDramaEvent__FastForwardEnd = 3,
	EJackVoiceDramaEvent__FastBackwardStart = 4,
	EJackVoiceDramaEvent__FastBackwardEnd = 5,
	EJackVoiceDramaEvent__TagStart = 6,
	EJackVoiceDramaEvent__TagAllEnd = 7,
	EJackVoiceDramaEvent__CaptionFadeOut = 8,
	EJackVoiceDramaEvent__CancelButtonChange = 9,
	EJackVoiceDramaEvent__MAX      = 10
};


// Enum JackGame.EJackVoiceDramaTagEvent
enum class EJackVoiceDramaTagEvent : uint8_t
{
	EJackVoiceDramaTagEvent__Wait  = 0,
	EJackVoiceDramaTagEvent__WaitTag = 1,
	EJackVoiceDramaTagEvent__BG    = 2,
	EJackVoiceDramaTagEvent__BGHide = 3,
	EJackVoiceDramaTagEvent__BGWait = 4,
	EJackVoiceDramaTagEvent__Image = 5,
	EJackVoiceDramaTagEvent__ImageHide = 6,
	EJackVoiceDramaTagEvent__ImageWait = 7,
	EJackVoiceDramaTagEvent__FadeOut = 8,
	EJackVoiceDramaTagEvent__FadeIn = 9,
	EJackVoiceDramaTagEvent__FadeWait = 10,
	EJackVoiceDramaTagEvent__BGMPlay = 11,
	EJackVoiceDramaTagEvent__BGMStop = 12,
	EJackVoiceDramaTagEvent__BGMWait = 13,
	EJackVoiceDramaTagEvent__EnvPlay = 14,
	EJackVoiceDramaTagEvent__EnvStop = 15,
	EJackVoiceDramaTagEvent__EnvWait = 16,
	EJackVoiceDramaTagEvent__VoicePlay = 17,
	EJackVoiceDramaTagEvent__VoiceWait = 18,
	EJackVoiceDramaTagEvent__SEPlay = 19,
	EJackVoiceDramaTagEvent__SEWait = 20,
	EJackVoiceDramaTagEvent__MEPlay = 21,
	EJackVoiceDramaTagEvent__Pafupafu = 22,
	EJackVoiceDramaTagEvent__StaffRoll = 23,
	EJackVoiceDramaTagEvent__MAX   = 24
};


// Enum JackGame.EJackVoiceDramaHDPafuPafuJoyConPower
enum class EJackVoiceDramaHDPafuPafuJoyConPower : uint8_t
{
	EJackVoiceDramaHDPafuPafuJoyConPower__Mild = 0,
	EJackVoiceDramaHDPafuPafuJoyConPower__Strength = 1,
	EJackVoiceDramaHDPafuPafuJoyConPower__MostStrongth = 2,
	EJackVoiceDramaHDPafuPafuJoyConPower__NumValues = 3,
	EJackVoiceDramaHDPafuPafuJoyConPower__EJackVoiceDramaHDPafuPafuJoyConPower_MAX = 4
};


// Enum JackGame.EJackVoiceDramaHDPafuPafuLeftRight
enum class EJackVoiceDramaHDPafuPafuLeftRight : uint8_t
{
	EJackVoiceDramaHDPafuPafuLeftRight__Left = 0,
	EJackVoiceDramaHDPafuPafuLeftRight__Right = 1,
	EJackVoiceDramaHDPafuPafuLeftRight__None = 2,
	EJackVoiceDramaHDPafuPafuLeftRight__EJackVoiceDramaHDPafuPafuLeftRight_MAX = 3
};


// Enum JackGame.EJackVoiceDramaHDPafuPafuVoiceTag
enum class EJackVoiceDramaHDPafuPafuVoiceTag : uint8_t
{
	EJackVoiceDramaHDPafuPafuVoiceTag__Start = 0,
	EJackVoiceDramaHDPafuPafuVoiceTag__PafuPafu = 1,
	EJackVoiceDramaHDPafuPafuVoiceTag__Knockout = 2,
	EJackVoiceDramaHDPafuPafuVoiceTag__Wait = 3,
	EJackVoiceDramaHDPafuPafuVoiceTag__EJackVoiceDramaHDPafuPafuVoiceTag_MAX = 4
};


// Enum JackGame.EJackVoiceDramaHDPafuPafuWhatRound
enum class EJackVoiceDramaHDPafuPafuWhatRound : uint8_t
{
	EJackVoiceDramaHDPafuPafuWhatRound__Round1 = 0,
	EJackVoiceDramaHDPafuPafuWhatRound__Round2 = 1,
	EJackVoiceDramaHDPafuPafuWhatRound__Round3 = 2,
	EJackVoiceDramaHDPafuPafuWhatRound__Round4 = 3,
	EJackVoiceDramaHDPafuPafuWhatRound__NumValues = 4,
	EJackVoiceDramaHDPafuPafuWhatRound__EJackVoiceDramaHDPafuPafuWhatRound_MAX = 5
};


// Enum JackGame.EJackVoiceDramaHDPafuPafuVoiceTagTutorial
enum class EJackVoiceDramaHDPafuPafuVoiceTagTutorial : uint8_t
{
	EJackVoiceDramaHDPafuPafuVoiceTagTutorial__Start = 0,
	EJackVoiceDramaHDPafuPafuVoiceTagTutorial__Knockout = 1,
	EJackVoiceDramaHDPafuPafuVoiceTagTutorial__Wait = 2,
	EJackVoiceDramaHDPafuPafuVoiceTagTutorial__EJackVoiceDramaHDPafuPafuVoiceTagTutorial_MAX = 3
};


// Enum JackGame.EJackFukubikiPayout
enum class EJackFukubikiPayout : uint8_t
{
	EJackFukubikiPayout__ThreeSunMarks = 0,
	EJackFukubikiPayout__ThreeStarMarks = 1,
	EJackFukubikiPayout__ThreeMoonMarks = 2,
	EJackFukubikiPayout__ThreeWaterMarks = 3,
	EJackFukubikiPayout__ThreeHeartMarks = 4,
	EJackFukubikiPayout__Losing    = 5,
	EJackFukubikiPayout__MAX       = 6
};


// Enum JackGame.EJackMessageOutputMode
enum class EJackMessageOutputMode : uint8_t
{
	EJackMessageOutputMode__Default = 0,
	EJackMessageOutputMode__FadeInLine = 1,
	EJackMessageOutputMode__FadeInPage = 2,
	EJackMessageOutputMode__MAX    = 3
};


// Enum JackGame.EJackUMGTextJustify
enum class EJackUMGTextJustify : uint8_t
{
	EJackUMGTextJustify__Left      = 0,
	EJackUMGTextJustify__Center    = 1,
	EJackUMGTextJustify__Right     = 2,
	EJackUMGTextJustify__FromCenter = 3,
	EJackUMGTextJustify__FromRight = 4,
	EJackUMGTextJustify__MAX       = 5
};


// Enum JackGame.EJackSerifuWindowType
enum class EJackSerifuWindowType : uint8_t
{
	EJackSerifuWindowType__SefiruWindow = 0,
	EJackSerifuWindowType__SimpleText = 1,
	EJackSerifuWindowType__TenNoKoe = 2,
	EJackSerifuWindowType__MovieMessage = 3,
	EJackSerifuWindowType__TokugiPanel = 4,
	EJackSerifuWindowType__MAX     = 5
};


// Enum JackGame.EJackEvaluateType
enum class EJackEvaluateType : uint8_t
{
	EJackEvaluateType__Equal       = 0,
	EJackEvaluateType__Big         = 1,
	EJackEvaluateType__Little      = 2,
	EJackEvaluateType__Up          = 3,
	EJackEvaluateType__Under       = 4,
	EJackEvaluateType__EJackEvaluateType_MAX = 5
};


// Enum JackGame.EJackActionMotionCompleteType
enum class EJackActionMotionCompleteType : uint8_t
{
	EJackActionMotionCompleteType__Playing = 0,
	EJackActionMotionCompleteType__ArrivalLoopSection = 1,
	EJackActionMotionCompleteType__PlayComplete = 2,
	EJackActionMotionCompleteType__MAX = 3
};


// Enum JackGame.EJackRandomCalcType
enum class EJackRandomCalcType : uint8_t
{
	EJackRandomCalcType__None      = 0,
	EJackRandomCalcType__Plus      = 1,
	EJackRandomCalcType__Minus     = 2,
	EJackRandomCalcType__PlusMinus = 3,
	EJackRandomCalcType__Rate      = 4,
	EJackRandomCalcType__MAX       = 5
};


// Enum JackGame.EJackActionEffectDirectionType
enum class EJackActionEffectDirectionType : uint8_t
{
	EJackActionEffectDirectionType__None = 0,
	EJackActionEffectDirectionType__KeepStart = 1,
	EJackActionEffectDirectionType__Velocity = 2,
	EJackActionEffectDirectionType__Attach = 3,
	EJackActionEffectDirectionType__MAX = 4
};


// Enum JackGame.EJackAttachTargetType
enum class EJackAttachTargetType : uint8_t
{
	EJackAttachTargetType__None    = 0,
	EJackAttachTargetType__World   = 1,
	EJackAttachTargetType__Actor   = 2,
	EJackAttachTargetType__MAX     = 3
};


// Enum JackGame.EJackActionComparison
enum class EJackActionComparison : uint8_t
{
	EJackActionComparison__None    = 0,
	EJackActionComparison__Equals  = 1,
	EJackActionComparison__NotEquals = 2,
	EJackActionComparison__GreaterThan = 3,
	EJackActionComparison__GreaterThanEquals = 4,
	EJackActionComparison__LessThan = 5,
	EJackActionComparison__LessThanEquals = 6,
	EJackActionComparison__EJackActionComparison_MAX = 7
};


// Enum JackGame.EJackActionModuleCreateType
enum class EJackActionModuleCreateType : uint8_t
{
	EJackActionModuleCreateType__None = 0,
	EJackActionModuleCreateType__Damage = 1,
	EJackActionModuleCreateType__OddEffect = 2,
	EJackActionModuleCreateType__Revive = 3,
	EJackActionModuleCreateType__Kyuusyuu = 4,
	EJackActionModuleCreateType__NakamaYobi = 5,
	EJackActionModuleCreateType__Nusumu = 6,
	EJackActionModuleCreateType__Other = 7,
	EJackActionModuleCreateType__MAX = 8
};


// Enum JackGame.EJackActionCalcOddEffectFlag
enum class EJackActionCalcOddEffectFlag : uint8_t
{
	EJackActionCalcOddEffectFlag__CalcScore = 0,
	EJackActionCalcOddEffectFlag__CriticalEnable = 1,
	EJackActionCalcOddEffectFlag__CriticalDisable = 2,
	EJackActionCalcOddEffectFlag__MAX = 3
};


// Enum JackGame.EJackActionCalcDamageFlag
enum class EJackActionCalcDamageFlag : uint8_t
{
	EJackActionCalcDamageFlag__CalcScore = 0,
	EJackActionCalcDamageFlag__CalcMantan = 1,
	EJackActionCalcDamageFlag__CriticalEnable = 2,
	EJackActionCalcDamageFlag__CriticalDisable = 3,
	EJackActionCalcDamageFlag__MissDisable = 4,
	EJackActionCalcDamageFlag__MikawasiDisable = 5,
	EJackActionCalcDamageFlag__TateGuardDisable = 6,
	EJackActionCalcDamageFlag__BukiGuardDisable = 7,
	EJackActionCalcDamageFlag__KanzenGuardDisable = 8,
	EJackActionCalcDamageFlag__KnockBackDisable = 9,
	EJackActionCalcDamageFlag__UkenagasiDisable = 10,
	EJackActionCalcDamageFlag__CounterDisable = 11,
	EJackActionCalcDamageFlag__KabauEnable = 12,
	EJackActionCalcDamageFlag__KabawareEnable = 13,
	EJackActionCalcDamageFlag__JumonHansyaEnable = 14,
	EJackActionCalcDamageFlag__DamageHosyou = 15,
	EJackActionCalcDamageFlag__MatchAttackEnable = 16,
	EJackActionCalcDamageFlag__MAX = 17
};


// Enum JackGame.EJackCalcActionFlag
enum class EJackCalcActionFlag : uint8_t
{
	EJackCalcActionFlag__NotUseMP  = 0,
	EJackCalcActionFlag__MAX       = 1
};


// Enum JackGame.EJackActionWaitType
enum class EJackActionWaitType : uint8_t
{
	EJackActionWaitType__Motion    = 0,
	EJackActionWaitType__TimeFromShot = 1,
	EJackActionWaitType__TimeFromHit = 2,
	EJackActionWaitType__ActionExecEnd = 3,
	EJackActionWaitType__MAX       = 4
};


// Enum JackGame.EJackActionCategory
enum class EJackActionCategory : uint8_t
{
	EJackActionCategory__None      = 0,
	EJackActionCategory__Kougeki   = 1,
	EJackActionCategory__Tokugi    = 2,
	EJackActionCategory__Jumon     = 3,
	EJackActionCategory__Item      = 4,
	EJackActionCategory__Renkei    = 5,
	EJackActionCategory__Special   = 6,
	EJackActionCategory__Nigeru    = 7,
	EJackActionCategory__Nusumu    = 8,
	EJackActionCategory__MAX       = 9
};


// Enum JackGame.EJackAirBubble
enum class EJackAirBubble : uint8_t
{
	EJackAirBubble__Small          = 0,
	EJackAirBubble__Large          = 1,
	EJackAirBubble__Side           = 2,
	EJackAirBubble__MAX            = 3
};


// Enum JackGame.EJackAirBubbleActivity
enum class EJackAirBubbleActivity : uint8_t
{
	EJackAirBubbleActivity__Neutral = 0,
	EJackAirBubbleActivity__Active = 1,
	EJackAirBubbleActivity__Deactive = 2,
	EJackAirBubbleActivity__MAX    = 3
};


// Enum JackGame.EJackAirBubbleControlPurpose
enum class EJackAirBubbleControlPurpose : uint8_t
{
	EJackAirBubbleControlPurpose__CutScene = 0,
	EJackAirBubbleControlPurpose__Internal = 1,
	EJackAirBubbleControlPurpose__MAX = 2
};


// Enum JackGame.EJackIgnoreAnimNotifyPurpose
enum class EJackIgnoreAnimNotifyPurpose : uint8_t
{
	EJackIgnoreAnimNotifyPurpose__WaterSurface = 0,
	EJackIgnoreAnimNotifyPurpose__LoadReduction = 1,
	EJackIgnoreAnimNotifyPurpose__UmaRace = 2,
	EJackIgnoreAnimNotifyPurpose__CharacterCapture = 3,
	EJackIgnoreAnimNotifyPurpose__BattleActionCamera = 4,
	EJackIgnoreAnimNotifyPurpose__DitherHide = 5,
	EJackIgnoreAnimNotifyPurpose__CategoryHidden = 6,
	EJackIgnoreAnimNotifyPurpose__BattleManager = 7,
	EJackIgnoreAnimNotifyPurpose__FollowingCharacter = 8,
	EJackIgnoreAnimNotifyPurpose__PhotoMode = 9,
	EJackIgnoreAnimNotifyPurpose__MAX = 10
};


// Enum JackGame.EJackWaiterDisablePurpose
enum class EJackWaiterDisablePurpose : uint8_t
{
	EJackWaiterDisablePurpose__DamageField = 0,
	EJackWaiterDisablePurpose__Dash = 1,
	EJackWaiterDisablePurpose__PhotoMode = 2,
	EJackWaiterDisablePurpose__HasProps = 3,
	EJackWaiterDisablePurpose__MAX = 4
};


// Enum JackGame.EJackNumberOfAttacks
enum class EJackNumberOfAttacks : uint8_t
{
	EJackNumberOfAttacks__Once     = 0,
	EJackNumberOfAttacks__OnceInLoop = 1,
	EJackNumberOfAttacks__Every    = 2,
	EJackNumberOfAttacks__MAX      = 3
};


// Enum JackGame.EJackCSArmType
enum class EJackCSArmType : uint8_t
{
	EJackCSArmType__Right          = 0,
	EJackCSArmType__Left           = 1,
	EJackCSArmType__MAX            = 2
};


// Enum JackGame.EJackBattleActionCameraGroundCheck
enum class EJackBattleActionCameraGroundCheck : uint8_t
{
	EJackBattleActionCameraGroundCheck__None = 0,
	EJackBattleActionCameraGroundCheck__StartFieldCheck = 1,
	EJackBattleActionCameraGroundCheck__PeriodicFrameCheck = 2,
	EJackBattleActionCameraGroundCheck__MAX = 3
};


// Enum JackGame.EJackBattleActionCameraLengthAdjustCategory
enum class EJackBattleActionCameraLengthAdjustCategory : uint8_t
{
	EJackBattleActionCameraLengthAdjustCategory__None = 0,
	EJackBattleActionCameraLengthAdjustCategory__Attacker = 1,
	EJackBattleActionCameraLengthAdjustCategory__Defender = 2,
	EJackBattleActionCameraLengthAdjustCategory__Larger = 3,
	EJackBattleActionCameraLengthAdjustCategory__Smaller = 4,
	EJackBattleActionCameraLengthAdjustCategory__AttackerMightLarger = 5,
	EJackBattleActionCameraLengthAdjustCategory__DefenderMightLarger = 6,
	EJackBattleActionCameraLengthAdjustCategory__AllMightLarger = 7,
	EJackBattleActionCameraLengthAdjustCategory__MAX = 8
};


// Enum JackGame.EJackBattleActionCameraTimingCategory
enum class EJackBattleActionCameraTimingCategory : uint8_t
{
	EJackBattleActionCameraTimingCategory__None = 0,
	EJackBattleActionCameraTimingCategory__CameraStart = 1,
	EJackBattleActionCameraTimingCategory__ActionShot = 2,
	EJackBattleActionCameraTimingCategory__ActionHit = 3,
	EJackBattleActionCameraTimingCategory__ActionHitComponent = 4,
	EJackBattleActionCameraTimingCategory__MAX = 5
};


// Enum JackGame.EJackBattleActionCameraHiddenCharacterCategory
enum class EJackBattleActionCameraHiddenCharacterCategory : uint8_t
{
	EJackBattleActionCameraHiddenCharacterCategory__None = 0,
	EJackBattleActionCameraHiddenCharacterCategory__Player = 1,
	EJackBattleActionCameraHiddenCharacterCategory__Monster = 2,
	EJackBattleActionCameraHiddenCharacterCategory__NotAttackerCharacters = 3,
	EJackBattleActionCameraHiddenCharacterCategory__NotDefenderCharacters = 4,
	EJackBattleActionCameraHiddenCharacterCategory__NotRenkeiAttackerA = 5,
	EJackBattleActionCameraHiddenCharacterCategory__NotRenkeiAttackerB = 6,
	EJackBattleActionCameraHiddenCharacterCategory__MAX = 7
};


// Enum JackGame.EJackBattleActionCameraEyeLocationCategory
enum class EJackBattleActionCameraEyeLocationCategory : uint8_t
{
	EJackBattleActionCameraEyeLocationCategory__Character = 0,
	EJackBattleActionCameraEyeLocationCategory__FieldCenter = 1,
	EJackBattleActionCameraEyeLocationCategory__Characker_RotationRelative = 2,
	EJackBattleActionCameraEyeLocationCategory__Characker_RotationRelative_ZeroPitch = 3,
	EJackBattleActionCameraEyeLocationCategory__MAX = 4
};


// Enum JackGame.EJackBattleActionCameraLoopCategory
enum class EJackBattleActionCameraLoopCategory : uint8_t
{
	EJackBattleActionCameraLoopCategory__Wait = 0,
	EJackBattleActionCameraLoopCategory__End = 1,
	EJackBattleActionCameraLoopCategory__Loop = 2,
	EJackBattleActionCameraLoopCategory__MAX = 3
};


// Enum JackGame.EJackBattleActionCameraPlayConditions
enum class EJackBattleActionCameraPlayConditions : uint8_t
{
	EJackBattleActionCameraPlayConditions__Time = 0,
	EJackBattleActionCameraPlayConditions__ActionShot = 1,
	EJackBattleActionCameraPlayConditions__MAX = 2
};


// Enum JackGame.EJackBattleActionCameraAtCategory
enum class EJackBattleActionCameraAtCategory : uint8_t
{
	EJackBattleActionCameraAtCategory__TriggerCharacter = 0,
	EJackBattleActionCameraAtCategory__TriggerCharacterPartner = 1,
	EJackBattleActionCameraAtCategory__TargetCharacter = 2,
	EJackBattleActionCameraAtCategory__TriggerMightCenter = 3,
	EJackBattleActionCameraAtCategory__EnemyMightCenter = 4,
	EJackBattleActionCameraAtCategory__CharactersCenter = 5,
	EJackBattleActionCameraAtCategory__BattleFieldCenter = 6,
	EJackBattleActionCameraAtCategory__TargetCharactersCenter = 7,
	EJackBattleActionCameraAtCategory__TargetCharactersCenter2 = 8,
	EJackBattleActionCameraAtCategory__MAX = 9
};


// Enum JackGame.EJackBattleActionCameraAttackerCategory
enum class EJackBattleActionCameraAttackerCategory : uint8_t
{
	EJackBattleActionCameraAttackerCategory__Player = 0,
	EJackBattleActionCameraAttackerCategory__Friend = 1,
	EJackBattleActionCameraAttackerCategory__Monster = 2,
	EJackBattleActionCameraAttackerCategory__Max = 3,
	EJackBattleActionCameraAttackerCategory__None = 4
};


// Enum JackGame.EJackBattleCommandAILayerType
enum class EJackBattleCommandAILayerType : uint8_t
{
	EJackBattleCommandAILayerType__Main = 0,
	EJackBattleCommandAILayerType__Sub = 1,
	EJackBattleCommandAILayerType__Konran = 2,
	EJackBattleCommandAILayerType__MAX = 3
};


// Enum JackGame.EJackBattleLockOnNotify
enum class EJackBattleLockOnNotify : uint8_t
{
	EJackBattleLockOnNotify__None  = 0,
	EJackBattleLockOnNotify__MAX   = 1
};


// Enum JackGame.EJackMonsterAlignmentSequenceEnum
enum class EJackMonsterAlignmentSequenceEnum : uint8_t
{
	EJackMonsterAlignmentSequenceEnum__MonsterAlignmentSequence_OneLine_Third = 0,
	EJackMonsterAlignmentSequenceEnum__MonsterAlignmentSequence_OneLine_Event = 1,
	EJackMonsterAlignmentSequenceEnum__MonsterAlignmentSequence_OneLine_Event2 = 2,
	EJackMonsterAlignmentSequenceEnum__MonsterAlignmentSequence_MAX = 3
};


// Enum JackGame.EJackBattleNigeruSequenceEventType
enum class EJackBattleNigeruSequenceEventType : uint8_t
{
	EJackBattleNigeruSequenceEventType__None = 0,
	EJackBattleNigeruSequenceEventType__PlayNigeruMessage = 1,
	EJackBattleNigeruSequenceEventType__PlayPostEffect = 2,
	EJackBattleNigeruSequenceEventType__PlayMawarikomaretaMessage = 3,
	EJackBattleNigeruSequenceEventType__End = 4,
	EJackBattleNigeruSequenceEventType__MAX = 5
};


// Enum JackGame.EJackBattleResultZenmetuEventType
enum class EJackBattleResultZenmetuEventType : uint8_t
{
	EJackBattleResultZenmetuEventType__None = 0,
	EJackBattleResultZenmetuEventType__PlayZenmetuMessage = 1,
	EJackBattleResultZenmetuEventType__StopZenmetuMessage = 2,
	EJackBattleResultZenmetuEventType__End = 3,
	EJackBattleResultZenmetuEventType__MAX = 4
};


// Enum JackGame.EJackBattleFukidasiPlaySec
enum class EJackBattleFukidasiPlaySec : uint8_t
{
	EJackBattleFukidasiPlaySec__None = 0,
	EJackBattleFukidasiPlaySec__Init = 1,
	EJackBattleFukidasiPlaySec__Start = 2,
	EJackBattleFukidasiPlaySec__Loop = 3,
	EJackBattleFukidasiPlaySec__OutAnimWait = 4,
	EJackBattleFukidasiPlaySec__End = 5,
	EJackBattleFukidasiPlaySec__MAX = 6
};


// Enum JackGame.EJackBattleFukidasiTextVoiceType
enum class EJackBattleFukidasiTextVoiceType : uint8_t
{
	EJackBattleFukidasiTextVoiceType__None = 0,
	EJackBattleFukidasiTextVoiceType__Yaruki = 1,
	EJackBattleFukidasiTextVoiceType__Tyuuikanki = 2,
	EJackBattleFukidasiTextVoiceType__Reisei = 3,
	EJackBattleFukidasiTextVoiceType__Aseri = 4,
	EJackBattleFukidasiTextVoiceType__Ikari = 5,
	EJackBattleFukidasiTextVoiceType__Kansya = 6,
	EJackBattleFukidasiTextVoiceType__Yorokobi = 7,
	EJackBattleFukidasiTextVoiceType__Konran = 8,
	EJackBattleFukidasiTextVoiceType__VoiceID = 9,
	EJackBattleFukidasiTextVoiceType__MAX = 10
};


// Enum JackGame.EJackBattleFukidasiTalkValueParamCalcType
enum class EJackBattleFukidasiTalkValueParamCalcType : uint8_t
{
	EJackBattleFukidasiTalkValueParamCalcType__Equal = 0,
	EJackBattleFukidasiTalkValueParamCalcType__High = 1,
	EJackBattleFukidasiTalkValueParamCalcType__Low = 2,
	EJackBattleFukidasiTalkValueParamCalcType__MAX = 3
};


// Enum JackGame.EJackBattleFukidasiTalkConditionPeriod
enum class EJackBattleFukidasiTalkConditionPeriod : uint8_t
{
	EJackBattleFukidasiTalkConditionPeriod__None = 0,
	EJackBattleFukidasiTalkConditionPeriod__TurnEnd = 1,
	EJackBattleFukidasiTalkConditionPeriod__RoundEnd = 2,
	EJackBattleFukidasiTalkConditionPeriod__BattleEnd = 3,
	EJackBattleFukidasiTalkConditionPeriod__NextFukidasi = 4,
	EJackBattleFukidasiTalkConditionPeriod__NextFukiTurnEnd = 5,
	EJackBattleFukidasiTalkConditionPeriod__OneFrame = 6,
	EJackBattleFukidasiTalkConditionPeriod__MAX = 7
};


// Enum JackGame.EJackBattleFukidasiCalcType
enum class EJackBattleFukidasiCalcType : uint8_t
{
	EJackBattleFukidasiCalcType__None = 0,
	EJackBattleFukidasiCalcType__And = 1,
	EJackBattleFukidasiCalcType__Or = 2,
	EJackBattleFukidasiCalcType__MAX = 3
};


// Enum JackGame.EJackBattleFukidasiSndCalcType
enum class EJackBattleFukidasiSndCalcType : uint8_t
{
	EJackBattleFukidasiSndCalcType__None = 0,
	EJackBattleFukidasiSndCalcType__Uniform = 1,
	EJackBattleFukidasiSndCalcType__Multi = 2,
	EJackBattleFukidasiSndCalcType__Sub = 3,
	EJackBattleFukidasiSndCalcType__MAX = 4
};


// Enum JackGame.EJackBattleFukidasiTalkTurn
enum class EJackBattleFukidasiTalkTurn : uint8_t
{
	EJackBattleFukidasiTalkTurn__None = 0,
	EJackBattleFukidasiTalkTurn__ActiveTurn = 1,
	EJackBattleFukidasiTalkTurn__NonActiveTurn = 2,
	EJackBattleFukidasiTalkTurn__MonsterTurn = 3,
	EJackBattleFukidasiTalkTurn__MAX = 4
};


// Enum JackGame.EJackBattleFukidasiUIType
enum class EJackBattleFukidasiUIType : uint8_t
{
	EJackBattleFukidasiUIType__None = 0,
	EJackBattleFukidasiUIType__Left = 1,
	EJackBattleFukidasiUIType__Right = 2,
	EJackBattleFukidasiUIType__MAX = 3
};


// Enum JackGame.EJackBattleFukidasiTalkTimming
enum class EJackBattleFukidasiTalkTimming : uint8_t
{
	EJackBattleFukidasiTalkTimming__None = 0,
	EJackBattleFukidasiTalkTimming__Init = 1,
	EJackBattleFukidasiTalkTimming__BattleStart = 2,
	EJackBattleFukidasiTalkTimming__TurnStart = 3,
	EJackBattleFukidasiTalkTimming__TurnOddEffect = 4,
	EJackBattleFukidasiTalkTimming__CommandInputStart = 5,
	EJackBattleFukidasiTalkTimming__CommandInput = 6,
	EJackBattleFukidasiTalkTimming__ActionStart = 7,
	EJackBattleFukidasiTalkTimming__ActionFinalHit = 8,
	EJackBattleFukidasiTalkTimming__ActionEnd = 9,
	EJackBattleFukidasiTalkTimming__IntActionStart = 10,
	EJackBattleFukidasiTalkTimming__IntActionEnd = 11,
	EJackBattleFukidasiTalkTimming__Sakusen = 12,
	EJackBattleFukidasiTalkTimming__NigeruFaild = 13,
	EJackBattleFukidasiTalkTimming__ResultLevelUp = 14,
	EJackBattleFukidasiTalkTimming__ResultItem = 15,
	EJackBattleFukidasiTalkTimming__BattleEnd = 16,
	EJackBattleFukidasiTalkTimming__AnimNotify = 17,
	EJackBattleFukidasiTalkTimming__MAX = 18
};


// Enum JackGame.EJackBattleFukidasiTextEnableType
enum class EJackBattleFukidasiTextEnableType : uint8_t
{
	EJackBattleFukidasiTextEnableType__None = 0,
	EJackBattleFukidasiTextEnableType__Approach = 1,
	EJackBattleFukidasiTextEnableType__Auto = 2,
	EJackBattleFukidasiTextEnableType__MAX = 3
};


// Enum JackGame.EJackBattleInterruptActionTiming
enum class EJackBattleInterruptActionTiming : uint8_t
{
	EJackBattleInterruptActionTiming__None = 0,
	EJackBattleInterruptActionTiming__BattleStart = 1,
	EJackBattleInterruptActionTiming__RoundStart = 2,
	EJackBattleInterruptActionTiming__TurnEnd = 3,
	EJackBattleInterruptActionTiming__RoundEnd = 4,
	EJackBattleInterruptActionTiming__MAX = 5
};


// Enum JackGame.EJackPrgCameraIDFlag
enum class EJackPrgCameraIDFlag : uint8_t
{
	EJackPrgCameraIDFlag__CasterOnly = 0,
	EJackPrgCameraIDFlag__TargetOnly = 1,
	EJackPrgCameraIDFlag__TargetOnly2 = 2,
	EJackPrgCameraIDFlag__BackOnly = 3,
	EJackPrgCameraIDFlag__GreenRect = 4,
	EJackPrgCameraIDFlag__Shrink   = 5,
	EJackPrgCameraIDFlag__Forward  = 6,
	EJackPrgCameraIDFlag__NoLow    = 7,
	EJackPrgCameraIDFlag__NoAnim   = 8,
	EJackPrgCameraIDFlag__Relocation = 9,
	EJackPrgCameraIDFlag__MAX      = 10
};


// Enum JackGame.EJackPrgCameraAvailType
enum class EJackPrgCameraAvailType : uint8_t
{
	EJackPrgCameraAvailType__None  = 0,
	EJackPrgCameraAvailType__NG    = 1,
	EJackPrgCameraAvailType__PushOut = 2,
	EJackPrgCameraAvailType__ScoreBad = 3,
	EJackPrgCameraAvailType__ScoreGood = 4,
	EJackPrgCameraAvailType__Priority = 5,
	EJackPrgCameraAvailType__MAX   = 6
};


// Enum JackGame.EJackPrgCameraScoreType
enum class EJackPrgCameraScoreType : uint8_t
{
	EJackPrgCameraScoreType__None  = 0,
	EJackPrgCameraScoreType__Overlap = 1,
	EJackPrgCameraScoreType__MarginH = 2,
	EJackPrgCameraScoreType__MarginW = 3,
	EJackPrgCameraScoreType__MarginAll = 4,
	EJackPrgCameraScoreType__TurnPCDist = 5,
	EJackPrgCameraScoreType__PreCamera = 6,
	EJackPrgCameraScoreType__MAX   = 7
};


// Enum JackGame.EJackPrgCameraCalcType
enum class EJackPrgCameraCalcType : uint8_t
{
	EJackPrgCameraCalcType__None   = 0,
	EJackPrgCameraCalcType__Front  = 1,
	EJackPrgCameraCalcType__Diagonal = 2,
	EJackPrgCameraCalcType__Bird   = 3,
	EJackPrgCameraCalcType__Socket = 4,
	EJackPrgCameraCalcType__MAX    = 5
};


// Enum JackGame.EJackBattleActionCameraBehavior
enum class EJackBattleActionCameraBehavior : uint8_t
{
	EJackBattleActionCameraBehavior__None = 0,
	EJackBattleActionCameraBehavior__AllAction = 1,
	EJackBattleActionCameraBehavior__AllTokugi = 2,
	EJackBattleActionCameraBehavior__MeireiAction = 3,
	EJackBattleActionCameraBehavior__MeireiTokugi = 4,
	EJackBattleActionCameraBehavior__MAX = 5
};


// Enum JackGame.EJackBattleHazukasiiNoroiCharacterType
enum class EJackBattleHazukasiiNoroiCharacterType : uint8_t
{
	EJackBattleHazukasiiNoroiCharacterType__None = 0,
	EJackBattleHazukasiiNoroiCharacterType__P001 = 1,
	EJackBattleHazukasiiNoroiCharacterType__P002 = 2,
	EJackBattleHazukasiiNoroiCharacterType__P002B = 3,
	EJackBattleHazukasiiNoroiCharacterType__P003 = 4,
	EJackBattleHazukasiiNoroiCharacterType__P004 = 5,
	EJackBattleHazukasiiNoroiCharacterType__P005 = 6,
	EJackBattleHazukasiiNoroiCharacterType__P006 = 7,
	EJackBattleHazukasiiNoroiCharacterType__P007 = 8,
	EJackBattleHazukasiiNoroiCharacterType__P008 = 9,
	EJackBattleHazukasiiNoroiCharacterType__MAX = 10
};


// Enum JackGame.EJackBattleActionSelectType
enum class EJackBattleActionSelectType : uint8_t
{
	EJackBattleActionSelectType__None = 0,
	EJackBattleActionSelectType__ListTop = 1,
	EJackBattleActionSelectType__Top60 = 2,
	EJackBattleActionSelectType__ListBottom = 3,
	EJackBattleActionSelectType__MAX = 4
};


// Enum JackGame.EJackBattleActionTargetType
enum class EJackBattleActionTargetType : uint8_t
{
	EJackBattleActionTargetType__Normal = 0,
	EJackBattleActionTargetType__Hate = 1,
	EJackBattleActionTargetType__HPLow = 2,
	EJackBattleActionTargetType__Random = 3,
	EJackBattleActionTargetType__MAX = 4
};


// Enum JackGame.EJackBattleMoreActionType
enum class EJackBattleMoreActionType : uint8_t
{
	EJackBattleMoreActionType__Once = 0,
	EJackBattleMoreActionType__Twice = 1,
	EJackBattleMoreActionType__ThreeTimes = 2,
	EJackBattleMoreActionType__Random = 3,
	EJackBattleMoreActionType__OnceTwiceRepeat = 4,
	EJackBattleMoreActionType__TwiceOnceRepeat = 5,
	EJackBattleMoreActionType__MAX = 6
};


// Enum JackGame.EJackBattleActionPatternType
enum class EJackBattleActionPatternType : uint8_t
{
	EJackBattleActionPatternType__None = 0,
	EJackBattleActionPatternType__Heiti = 1,
	EJackBattleActionPatternType__Gake = 2,
	EJackBattleActionPatternType__Saka = 3,
	EJackBattleActionPatternType__Kaidan = 4,
	EJackBattleActionPatternType__KaitenA = 5,
	EJackBattleActionPatternType__KaitenB = 6,
	EJackBattleActionPatternType__KaitenC = 7,
	EJackBattleActionPatternType__Manual = 8,
	EJackBattleActionPatternType__MAX = 9
};


// Enum JackGame.EJackBattleIgnoreFastModePurpose
enum class EJackBattleIgnoreFastModePurpose : uint8_t
{
	EJackBattleIgnoreFastModePurpose__MonsterAppear = 0,
	EJackBattleIgnoreFastModePurpose__MatineeRenkei = 1,
	EJackBattleIgnoreFastModePurpose__BattleResult = 2,
	EJackBattleIgnoreFastModePurpose__MAX = 3
};


// Enum JackGame.EJackBattleWeaponMontageKey
enum class EJackBattleWeaponMontageKey : uint8_t
{
	EJackBattleWeaponMontageKey__None = 0,
	EJackBattleWeaponMontageKey__Init = 1,
	EJackBattleWeaponMontageKey__Idle = 2,
	EJackBattleWeaponMontageKey__IdleSheathe = 3,
	EJackBattleWeaponMontageKey__BougyoStart = 4,
	EJackBattleWeaponMontageKey__BougyoIdle = 5,
	EJackBattleWeaponMontageKey__BougyoEnd = 6,
	EJackBattleWeaponMontageKey__Unsheathe = 7,
	EJackBattleWeaponMontageKey__Sheathe = 8,
	EJackBattleWeaponMontageKey__MAX = 9
};


// Enum JackGame.EJackBattleWeaponStateMachine
enum class EJackBattleWeaponStateMachine : uint8_t
{
	EJackBattleWeaponStateMachine__None = 0,
	EJackBattleWeaponStateMachine__Default = 1,
	EJackBattleWeaponStateMachine__Action = 2,
	EJackBattleWeaponStateMachine__MAX = 3
};


// Enum JackGame.EJackBattleWeaponNotify
enum class EJackBattleWeaponNotify : uint8_t
{
	EJackBattleWeaponNotify__None  = 0,
	EJackBattleWeaponNotify__Start = 1,
	EJackBattleWeaponNotify__Unsheathe = 2,
	EJackBattleWeaponNotify__Sheathe = 3,
	EJackBattleWeaponNotify__Idle  = 4,
	EJackBattleWeaponNotify__BougyoStart = 5,
	EJackBattleWeaponNotify__BougyoIdle = 6,
	EJackBattleWeaponNotify__MAX   = 7
};


// Enum JackGame.EJackCharacterMeshCollisionControlPurpose
enum class EJackCharacterMeshCollisionControlPurpose : uint8_t
{
	EJackCharacterMeshCollisionControlPurpose__BattleProjectile = 0,
	EJackCharacterMeshCollisionControlPurpose__MAX = 1
};


// Enum JackGame.EJackCharacterMeshControlChannel
enum class EJackCharacterMeshControlChannel : uint8_t
{
	EJackCharacterMeshControlChannel__Projectile = 0,
	EJackCharacterMeshControlChannel__MAX = 1
};


// Enum JackGame.EJackCustomMomevent
enum class EJackCustomMomevent : uint8_t
{
	EJackCustomMomevent__Blueprint = 0,
	EJackCustomMomevent__Free      = 1,
	EJackCustomMomevent__SimpleAutoNavigation = 2,
	EJackCustomMomevent__Disabled  = 3,
	EJackCustomMomevent__MAX       = 4
};


// Enum JackGame.EJackTokiNoKesinMotionState
enum class EJackTokiNoKesinMotionState : uint8_t
{
	EJackTokiNoKesinMotionState__Stand = 0,
	EJackTokiNoKesinMotionState__Sit = 1,
	EJackTokiNoKesinMotionState__Move = 2,
	EJackTokiNoKesinMotionState__MAX = 3
};


// Enum JackGame.EJackCutSceneFadeLayer
enum class EJackCutSceneFadeLayer : uint8_t
{
	EJackCutSceneFadeLayer__Normal = 0,
	EJackCutSceneFadeLayer__High   = 1,
	EJackCutSceneFadeLayer__EJackCutSceneFadeLayer_MAX = 2
};


// Enum JackGame.EJackFacialReferencedAnimSequence
enum class EJackFacialReferencedAnimSequence : uint8_t
{
	EJackFacialReferencedAnimSequence__Default = 0,
	EJackFacialReferencedAnimSequence__Additional = 1,
	EJackFacialReferencedAnimSequence__CutScene = 2,
	EJackFacialReferencedAnimSequence__CutSceneAdditional = 3,
	EJackFacialReferencedAnimSequence__MAX = 4
};


// Enum JackGame.EJackFacialAnimCategory
enum class EJackFacialAnimCategory : uint8_t
{
	EJackFacialAnimCategory__Upper = 0,
	EJackFacialAnimCategory__Lower = 1,
	EJackFacialAnimCategory__MAX   = 2
};


// Enum JackGame.EJackMonsterFollowerReactionMode
enum class EJackMonsterFollowerReactionMode : uint8_t
{
	EJackMonsterFollowerReactionMode__None = 0,
	EJackMonsterFollowerReactionMode__Follow = 1,
	EJackMonsterFollowerReactionMode__Synchronize = 2,
	EJackMonsterFollowerReactionMode__MAX = 3
};


// Enum JackGame.EJackMonsterFollowerFormation
enum class EJackMonsterFollowerFormation : uint8_t
{
	EJackMonsterFollowerFormation__Default = 0,
	EJackMonsterFollowerFormation__Line = 1,
	EJackMonsterFollowerFormation__MAX = 2
};


// Enum JackGame.EJackMonsterApproachAction
enum class EJackMonsterApproachAction : uint8_t
{
	EJackMonsterApproachAction__None = 0,
	EJackMonsterApproachAction__FindAndFieldAction = 1,
	EJackMonsterApproachAction__MAX = 2
};


// Enum JackGame.EJackMonsterReaction
enum class EJackMonsterReaction : uint8_t
{
	EJackMonsterReaction__None     = 0,
	EJackMonsterReaction__FindAndEscape = 1,
	EJackMonsterReaction__FeelDangerAndEscape = 2,
	EJackMonsterReaction__FindAndMeeting = 3,
	EJackMonsterReaction__FindAndChase = 4,
	EJackMonsterReaction__BehaviorLikeLeader = 5,
	EJackMonsterReaction__BehaviorLikeFollower = 6,
	EJackMonsterReaction__MAX      = 7
};


// Enum JackGame.EJackMonsterDepopBehavior
enum class EJackMonsterDepopBehavior : uint8_t
{
	EJackMonsterDepopBehavior__Default = 0,
	EJackMonsterDepopBehavior__ReturnToHome = 1,
	EJackMonsterDepopBehavior__GoToSpecifyPoint = 2,
	EJackMonsterDepopBehavior__MAX = 3
};


// Enum JackGame.EJackMonsterPatrolMovingMethod
enum class EJackMonsterPatrolMovingMethod : uint8_t
{
	EJackMonsterPatrolMovingMethod__Walk = 0,
	EJackMonsterPatrolMovingMethod__Run = 1,
	EJackMonsterPatrolMovingMethod__SmoothWalk = 2,
	EJackMonsterPatrolMovingMethod__SmoothRun = 3,
	EJackMonsterPatrolMovingMethod__MAX = 4
};


// Enum JackGame.EJackMonsterPatrolMode
enum class EJackMonsterPatrolMode : uint8_t
{
	EJackMonsterPatrolMode__None   = 0,
	EJackMonsterPatrolMode__OneShot = 1,
	EJackMonsterPatrolMode__OneShotAndDepop = 2,
	EJackMonsterPatrolMode__LoopReverse = 3,
	EJackMonsterPatrolMode__LoopRound = 4,
	EJackMonsterPatrolMode__MAX    = 5
};


// Enum JackGame.EJackMonsterPopCondition
enum class EJackMonsterPopCondition : uint8_t
{
	EJackMonsterPopCondition__Default = 0,
	EJackMonsterPopCondition__Sleep = 1,
	EJackMonsterPopCondition__GateKeeper = 2,
	EJackMonsterPopCondition__LieInWait = 3,
	EJackMonsterPopCondition__LieInWait_Sense = 4,
	EJackMonsterPopCondition__TakeOff = 5,
	EJackMonsterPopCondition__TakeOff_Sense = 6,
	EJackMonsterPopCondition__Mimic = 7,
	EJackMonsterPopCondition__Mimic_Sense = 8,
	EJackMonsterPopCondition__Await = 9,
	EJackMonsterPopCondition__Await_Sense = 10,
	EJackMonsterPopCondition__MAX  = 11
};


// Enum JackGame.EJackMonsterActiveScenario
enum class EJackMonsterActiveScenario : uint8_t
{
	EJackMonsterActiveScenario__Always = 0,
	EJackMonsterActiveScenario__Scenario_A = 1,
	EJackMonsterActiveScenario__Scenario_B = 2,
	EJackMonsterActiveScenario__Scenario_C = 3,
	EJackMonsterActiveScenario__Scenario_S = 4,
	EJackMonsterActiveScenario__MAX = 5
};


// Enum JackGame.EJackMonsterActiveWeather
enum class EJackMonsterActiveWeather : uint8_t
{
	EJackMonsterActiveWeather__None = 0,
	EJackMonsterActiveWeather__Fine = 1,
	EJackMonsterActiveWeather__Rain = 2,
	EJackMonsterActiveWeather__Snow = 3,
	EJackMonsterActiveWeather__All = 4,
	EJackMonsterActiveWeather__MAX = 5
};


// Enum JackGame.EJackZukanMotionEquippedShieldFlag
enum class EJackZukanMotionEquippedShieldFlag : uint8_t
{
	EJackZukanMotionEquippedShieldFlag__Ignore = 0,
	EJackZukanMotionEquippedShieldFlag__On = 1,
	EJackZukanMotionEquippedShieldFlag__Off = 2,
	EJackZukanMotionEquippedShieldFlag__MAX = 3
};


// Enum JackGame.EJackStaffRollEventType
enum class EJackStaffRollEventType : uint8_t
{
	EJackStaffRollEventType__None  = 0,
	EJackStaffRollEventType__Initialize = 1,
	EJackStaffRollEventType__ClearFontCache = 2,
	EJackStaffRollEventType__Fade  = 3,
	EJackStaffRollEventType__Background = 4,
	EJackStaffRollEventType__CenterText = 5,
	EJackStaffRollEventType__ScrollStart = 6,
	EJackStaffRollEventType__ScrollText = 7,
	EJackStaffRollEventType__FadeStart = 8,
	EJackStaffRollEventType__FadeText = 9,
	EJackStaffRollEventType__MAX   = 10
};


// Enum JackGame.EJackDebugMenuCategory
enum class EJackDebugMenuCategory : uint8_t
{
	EJackDebugMenuCategory__Game   = 0,
	EJackDebugMenuCategory__Scenario = 1,
	EJackDebugMenuCategory__Battle = 2,
	EJackDebugMenuCategory__Monster = 3,
	EJackDebugMenuCategory__Player = 4,
	EJackDebugMenuCategory__Camera = 5,
	EJackDebugMenuCategory__Item   = 6,
	EJackDebugMenuCategory__NPC    = 7,
	EJackDebugMenuCategory__Character = 8,
	EJackDebugMenuCategory__GameCharacter = 9,
	EJackDebugMenuCategory__Field  = 10,
	EJackDebugMenuCategory__CutScene = 11,
	EJackDebugMenuCategory__UI     = 12,
	EJackDebugMenuCategory__Sound  = 13,
	EJackDebugMenuCategory__MiniGame = 14,
	EJackDebugMenuCategory__Level  = 15,
	EJackDebugMenuCategory__Macro  = 16,
	EJackDebugMenuCategory__FlagDebugger = 17,
	EJackDebugMenuCategory__DisplayInfo = 18,
	EJackDebugMenuCategory__ItemPresent = 19,
	EJackDebugMenuCategory__RecipeBook = 20,
	EJackDebugMenuCategory__Medal  = 21,
	EJackDebugMenuCategory__Coin   = 22,
	EJackDebugMenuCategory__TextMacroReplace = 23,
	EJackDebugMenuCategory__Sibari = 24,
	EJackDebugMenuCategory__Fukkatunojumon = 25,
	EJackDebugMenuCategory__SQEXNGWord = 26,
	EJackDebugMenuCategory__SaveLoad = 27,
	EJackDebugMenuCategory__Save   = 28,
	EJackDebugMenuCategory__Load   = 29,
	EJackDebugMenuCategory__Profile = 30,
	EJackDebugMenuCategory__Debug  = 31,
	EJackDebugMenuCategory__TestMaps = 32,
	EJackDebugMenuCategory__System = 33,
	EJackDebugMenuCategory__TextureStreaming = 34,
	EJackDebugMenuCategory__Engine = 35,
	EJackDebugMenuCategory__Stat   = 36,
	EJackDebugMenuCategory__Show   = 37,
	EJackDebugMenuCategory__Cheat  = 38,
	EJackDebugMenuCategory__ShowDebug = 39,
	EJackDebugMenuCategory__Misc   = 40,
	EJackDebugMenuCategory__MAX    = 41
};


// Enum JackGame.EJackDisperisonLayer
enum class EJackDisperisonLayer : uint8_t
{
	EJackDisperisonLayer__Blueprint01 = 0,
	EJackDisperisonLayer__Blueprint02 = 1,
	EJackDisperisonLayer__Blueprint03 = 2,
	EJackDisperisonLayer__Ohter    = 3,
	EJackDisperisonLayer__MAX      = 4
};


// Enum JackGame.EJackHideCompoHiddenPurpose
enum class EJackHideCompoHiddenPurpose : uint8_t
{
	EJackHideCompoHiddenPurpose__CompoOff = 0,
	EJackHideCompoHiddenPurpose__Gimmick = 1,
	EJackHideCompoHiddenPurpose__BattleSystem = 2,
	EJackHideCompoHiddenPurpose__EquipmentSystem = 3,
	EJackHideCompoHiddenPurpose__WeaponSystem = 4,
	EJackHideCompoHiddenPurpose__CharacterSystem = 5,
	EJackHideCompoHiddenPurpose__Action = 6,
	EJackHideCompoHiddenPurpose__AnimNotify = 7,
	EJackHideCompoHiddenPurpose__AnimSM = 8,
	EJackHideCompoHiddenPurpose__Renkei = 9,
	EJackHideCompoHiddenPurpose__Result = 10,
	EJackHideCompoHiddenPurpose__VehicleRideV204 = 11,
	EJackHideCompoHiddenPurpose__MAX = 12
};


// Enum JackGame.EJackEquipmentHiddenPurpose
enum class EJackEquipmentHiddenPurpose : uint8_t
{
	EJackEquipmentHiddenPurpose__NPC = 0,
	EJackEquipmentHiddenPurpose__Battle = 1,
	EJackEquipmentHiddenPurpose__Renkei = 2,
	EJackEquipmentHiddenPurpose__CutScene = 3,
	EJackEquipmentHiddenPurpose__Vehicle = 4,
	EJackEquipmentHiddenPurpose__Camp = 5,
	EJackEquipmentHiddenPurpose__Character = 6,
	EJackEquipmentHiddenPurpose__AnimSM = 7,
	EJackEquipmentHiddenPurpose__MAX = 8
};


// Enum JackGame.EJackEyeLookAtControlPurpose
enum class EJackEyeLookAtControlPurpose : uint8_t
{
	EJackEyeLookAtControlPurpose__CutScene = 0,
	EJackEyeLookAtControlPurpose__MAX = 1
};


// Enum JackGame.EJackFacialControlLayer
enum class EJackFacialControlLayer : uint8_t
{
	EJackFacialControlLayer__Default = 0,
	EJackFacialControlLayer__AnimNotifyState = 1,
	EJackFacialControlLayer__TakeOverToIE = 2,
	EJackFacialControlLayer__AnimNotify = 3,
	EJackFacialControlLayer__IE    = 4,
	EJackFacialControlLayer__Renkei = 5,
	EJackFacialControlLayer__Battle = 6,
	EJackFacialControlLayer__CutScene = 7,
	EJackFacialControlLayer__CutSceneCaption = 8,
	EJackFacialControlLayer__MAX   = 9
};


// Enum JackGame.EJackRandomLipSyncMode
enum class EJackRandomLipSyncMode : uint8_t
{
	EJackRandomLipSyncMode__UseCurve = 0,
	EJackRandomLipSyncMode__Enabled = 1,
	EJackRandomLipSyncMode__Disabled = 2,
	EJackRandomLipSyncMode__MAX    = 3
};


// Enum JackGame.EJackRandomBlinkMode
enum class EJackRandomBlinkMode : uint8_t
{
	EJackRandomBlinkMode__UseCurve = 0,
	EJackRandomBlinkMode__Enabled  = 1,
	EJackRandomBlinkMode__Disabled = 2,
	EJackRandomBlinkMode__MAX      = 3
};


// Enum JackGame.EJackLowerFacialState
enum class EJackLowerFacialState : uint8_t
{
	EJackLowerFacialState__State000 = 0,
	EJackLowerFacialState__State001 = 1,
	EJackLowerFacialState__State002 = 2,
	EJackLowerFacialState__State003 = 3,
	EJackLowerFacialState__State004 = 4,
	EJackLowerFacialState__State005 = 5,
	EJackLowerFacialState__State006 = 6,
	EJackLowerFacialState__State007 = 7,
	EJackLowerFacialState__MAX     = 8
};


// Enum JackGame.EJackUpperFacialState
enum class EJackUpperFacialState : uint8_t
{
	EJackUpperFacialState__State000 = 0,
	EJackUpperFacialState__State001 = 1,
	EJackUpperFacialState__State002 = 2,
	EJackUpperFacialState__State003 = 3,
	EJackUpperFacialState__State004 = 4,
	EJackUpperFacialState__State005 = 5,
	EJackUpperFacialState__State006 = 6,
	EJackUpperFacialState__State007 = 7,
	EJackUpperFacialState__MAX     = 8
};


// Enum JackGame.EJackFacialAnimTransitionMode
enum class EJackFacialAnimTransitionMode : uint8_t
{
	EJackFacialAnimTransitionMode__NegativeToPositive = 0,
	EJackFacialAnimTransitionMode__PositiveToPositive = 1,
	EJackFacialAnimTransitionMode__PositiveToNegative = 2,
	EJackFacialAnimTransitionMode__MAX = 3
};


// Enum JackGame.EJackMaterialParameterControlMethod
enum class EJackMaterialParameterControlMethod : uint8_t
{
	EJackMaterialParameterControlMethod__NoCopy = 0,
	EJackMaterialParameterControlMethod__CopyMaterialInstanceParameters = 1,
	EJackMaterialParameterControlMethod__CopyParameterOverrides = 2,
	EJackMaterialParameterControlMethod__MAX = 3
};


// Enum JackGame.EJackEyeControl
enum class EJackEyeControl : uint8_t
{
	EJackEyeControl__Bone          = 0,
	EJackEyeControl__Texture       = 1,
	EJackEyeControl__MAX           = 2
};


// Enum JackGame.EJackFriendAnimation
enum class EJackFriendAnimation : uint8_t
{
	EJackFriendAnimation__PostFullBodySlot = 0,
	EJackFriendAnimation__PostBasePose = 1,
	EJackFriendAnimation__PostFootIK = 2,
	EJackFriendAnimation__PostArmIK = 3,
	EJackFriendAnimation__PostLookAt = 4,
	EJackFriendAnimation__PostFacial = 5,
	EJackFriendAnimation__PostHair = 6,
	EJackFriendAnimation__PostDynamics = 7,
	EJackFriendAnimation__FullAnimation = 8,
	EJackFriendAnimation__MAX      = 9
};


// Enum JackGame.EJackFukkatunojumonCategory
enum class EJackFukkatunojumonCategory : uint8_t
{
	EJackFukkatunojumonCategory__None = 0,
	EJackFukkatunojumonCategory__Scenario = 1,
	EJackFukkatunojumonCategory__CutScene = 2,
	EJackFukkatunojumonCategory__GameProgress = 3,
	EJackFukkatunojumonCategory__System = 4,
	EJackFukkatunojumonCategory__Guide = 5,
	EJackFukkatunojumonCategory__Gimmick = 6,
	EJackFukkatunojumonCategory__Quest = 7,
	EJackFukkatunojumonCategory__MapVisit = 8,
	EJackFukkatunojumonCategory__Minigame = 9,
	EJackFukkatunojumonCategory__Daijinamono = 10,
	EJackFukkatunojumonCategory__MapStart = 11,
	EJackFukkatunojumonCategory__PlayerName = 12,
	EJackFukkatunojumonCategory__Level = 13,
	EJackFukkatunojumonCategory__Exp = 14,
	EJackFukkatunojumonCategory__Motimono = 15,
	EJackFukkatunojumonCategory__Equip = 16,
	EJackFukkatunojumonCategory__SkillPanel = 17,
	EJackFukkatunojumonCategory__Action = 18,
	EJackFukkatunojumonCategory__FriendJoin = 19,
	EJackFukkatunojumonCategory__GuestNPCJoin = 20,
	EJackFukkatunojumonCategory__Coordinate = 21,
	EJackFukkatunojumonCategory__ScenarioProgress = 22,
	EJackFukkatunojumonCategory__Gold = 23,
	EJackFukkatunojumonCategory__Medal = 24,
	EJackFukkatunojumonCategory__Coin = 25,
	EJackFukkatunojumonCategory__BagCommon = 26,
	EJackFukkatunojumonCategory__BagEquip = 27,
	EJackFukkatunojumonCategory__RecipeBook = 28,
	EJackFukkatunojumonCategory__MonsterZukan = 29,
	EJackFukkatunojumonCategory__ItemZukan = 30,
	EJackFukkatunojumonCategory__Achievement = 31,
	EJackFukkatunojumonCategory__MAX = 32
};


// Enum JackGame.EJackFukkatunojumonSpecial
enum class EJackFukkatunojumonSpecial : uint8_t
{
	EJackFukkatunojumonSpecial__None = 0,
	EJackFukkatunojumonSpecial__Triple = 1,
	EJackFukkatunojumonSpecial__SecondLapEnding = 2,
	EJackFukkatunojumonSpecial__StoreOpen = 3,
	EJackFukkatunojumonSpecial__NewGamePlus = 4,
	EJackFukkatunojumonSpecial__EJackFukkatunojumonSpecial_MAX = 5
};


// Enum JackGame.EJackFusigiKaziGlowPattern
enum class EJackFusigiKaziGlowPattern : uint8_t
{
	EJackFusigiKaziGlowPattern__Normal = 0,
	EJackFusigiKaziGlowPattern__ChargeUp = 1,
	EJackFusigiKaziGlowPattern__ChargeDown = 2,
	EJackFusigiKaziGlowPattern__TypeMAX = 3,
	EJackFusigiKaziGlowPattern__Invalid = 4,
	EJackFusigiKaziGlowPattern__EJackFusigiKaziGlowPattern_MAX = 5
};


// Enum JackGame.EJackFusigiKaziMetalType
enum class EJackFusigiKaziMetalType : uint8_t
{
	EJackFusigiKaziMetalType__Default = 0,
	EJackFusigiKaziMetalType__Complete = 1,
	EJackFusigiKaziMetalType__OverForge = 2,
	EJackFusigiKaziMetalType__Forge = 3,
	EJackFusigiKaziMetalType__Power_2 = 4,
	EJackFusigiKaziMetalType__Power_0_5 = 5,
	EJackFusigiKaziMetalType__Power_0_501 = 6,
	EJackFusigiKaziMetalType__FireUp = 7,
	EJackFusigiKaziMetalType__FireDown = 8,
	EJackFusigiKaziMetalType__TypeMAX = 9,
	EJackFusigiKaziMetalType__Invalid = 10,
	EJackFusigiKaziMetalType__EJackFusigiKaziMetalType_MAX = 11
};


// Enum JackGame.EJackFusigiKaziGameActionCategory
enum class EJackFusigiKaziGameActionCategory : uint8_t
{
	EJackFusigiKaziGameActionCategory__Tataku = 0,
	EJackFusigiKaziGameActionCategory__Tokugi = 1,
	EJackFusigiKaziGameActionCategory__Kuwasiku = 2,
	EJackFusigiKaziGameActionCategory__Siageru = 3,
	EJackFusigiKaziGameActionCategory__Hissatu = 4,
	EJackFusigiKaziGameActionCategory__TypeMAX = 5,
	EJackFusigiKaziGameActionCategory__Invalid = 6,
	EJackFusigiKaziGameActionCategory__EJackFusigiKaziGameActionCategory_MAX = 7
};


// Enum JackGame.EJackUIKeyBindType
enum class EJackUIKeyBindType : uint8_t
{
	EJackUIKeyBindType__Unbind     = 0,
	EJackUIKeyBindType__DefaultMenuBind = 1,
	EJackUIKeyBindType__SakusenYoyakuMenuBind = 2,
	EJackUIKeyBindType__PhotoModeBind = 3,
	EJackUIKeyBindType__MAX        = 4
};


// Enum JackGame.EJackInteractiveActorComponentControlPurpose
enum class EJackInteractiveActorComponentControlPurpose : uint8_t
{
	EJackInteractiveActorComponentControlPurpose__Monster = 0,
	EJackInteractiveActorComponentControlPurpose__MAX = 1
};


// Enum JackGame.EJackUIDisplayLocation
enum class EJackUIDisplayLocation : uint8_t
{
	EJackUIDisplayLocation__Default = 0,
	EJackUIDisplayLocation__Fukidasi = 1,
	EJackUIDisplayLocation__NamePlate = 2,
	EJackUIDisplayLocation__EmotionIcon = 3,
	EJackUIDisplayLocation__FusigiKaziEffect = 4,
	EJackUIDisplayLocation__FusigiKaziTable = 5,
	EJackUIDisplayLocation__MAX    = 6
};


// Enum JackGame.EJackDlcDataUpdatePhase
enum class EJackDlcDataUpdatePhase : uint8_t
{
	EJackDlcDataUpdatePhase__None  = 0,
	EJackDlcDataUpdatePhase__Start = 1,
	EJackDlcDataUpdatePhase__Mount = 2,
	EJackDlcDataUpdatePhase__PackageCache = 3,
	EJackDlcDataUpdatePhase__Load  = 4,
	EJackDlcDataUpdatePhase__LoadtWait = 5,
	EJackDlcDataUpdatePhase__FlagUpdate = 6,
	EJackDlcDataUpdatePhase__End   = 7,
	EJackDlcDataUpdatePhase__MAX   = 8
};


// Enum JackGame.EJackLazyMessageQueueId
enum class EJackLazyMessageQueueId : uint8_t
{
	EJackLazyMessageQueueId__Quest = 0,
	EJackLazyMessageQueueId__Tokugi = 1,
	EJackLazyMessageQueueId__Tutorial = 2,
	EJackLazyMessageQueueId__PartyConditionOff = 3,
	EJackLazyMessageQueueId__MAX   = 4
};


// Enum JackGame.EJackLookAtControlBone
enum class EJackLookAtControlBone : uint8_t
{
	EJackLookAtControlBone__Spine1 = 0,
	EJackLookAtControlBone__Spine2 = 1,
	EJackLookAtControlBone__Neck   = 2,
	EJackLookAtControlBone__Head   = 3,
	EJackLookAtControlBone__MAX    = 4
};


// Enum JackGame.EJackMatineeFacialReferanceState
enum class EJackMatineeFacialReferanceState : uint8_t
{
	EJackMatineeFacialReferanceState__ReferenceRuntimeCurve = 0,
	EJackMatineeFacialReferanceState__ReferenceAnimationCurve = 1,
	EJackMatineeFacialReferanceState__ReferenceBoneSRT = 2,
	EJackMatineeFacialReferanceState__EJackMatineeFacialReferanceState_MAX = 3
};


// Enum JackGame.EJackMedal_Event
enum class EJackMedal_Event : uint8_t
{
	EJackMedal_Event__MedalStamp   = 0,
	EJackMedal_Event__MedalStampAndUnlockFourPage = 1,
	EJackMedal_Event__DontHaveMedal = 2,
	EJackMedal_Event__BranchOffice_FirstContact = 3,
	EJackMedal_Event__BranchOffice_FirstContact2 = 4,
	EJackMedal_Event__BranchOffice_Completed = 5,
	EJackMedal_Event__GirlsHighSchool_FirstContact = 6,
	EJackMedal_Event__GirlsHighSchool_FirstContact2 = 7,
	EJackMedal_Event__GirlsHighSchool_Completed = 8,
	EJackMedal_Event__GirlsHighSchool_Exchange = 9,
	EJackMedal_Event__MAX          = 10
};


// Enum JackGame.EJackMeosiSlotBarChanceAnimState
enum class EJackMeosiSlotBarChanceAnimState : uint8_t
{
	EJackMeosiSlotBarChanceAnimState__Idle = 0,
	EJackMeosiSlotBarChanceAnimState__In = 1,
	EJackMeosiSlotBarChanceAnimState__Wait = 2,
	EJackMeosiSlotBarChanceAnimState__Out = 3,
	EJackMeosiSlotBarChanceAnimState__MAX = 4
};


// Enum JackGame.EJackMeosiSlotTimeZone
enum class EJackMeosiSlotTimeZone : uint8_t
{
	EJackMeosiSlotTimeZone__Time_Daytime = 0,
	EJackMeosiSlotTimeZone__Time_Twilight = 1,
	EJackMeosiSlotTimeZone__Time_Night = 2,
	EJackMeosiSlotTimeZone__MAX    = 3
};


// Enum JackGame.EJackMeosiSlotDebugDraw
enum class EJackMeosiSlotDebugDraw : uint8_t
{
	EJackMeosiSlotDebugDraw__NONE  = 0,
	EJackMeosiSlotDebugDraw__HANDS = 1,
	EJackMeosiSlotDebugDraw__STATE = 2,
	EJackMeosiSlotDebugDraw__LOGS  = 3,
	EJackMeosiSlotDebugDraw__OTHERS = 4,
	EJackMeosiSlotDebugDraw__MAX   = 5
};


// Enum JackGame.EJackMeosiSlotBonusMonsterSetting
enum class EJackMeosiSlotBonusMonsterSetting : uint8_t
{
	EJackMeosiSlotBonusMonsterSetting__Setting1_BB = 0,
	EJackMeosiSlotBonusMonsterSetting__Setting1_SB = 1,
	EJackMeosiSlotBonusMonsterSetting__Setting2_BB = 2,
	EJackMeosiSlotBonusMonsterSetting__Setting2_SB = 3,
	EJackMeosiSlotBonusMonsterSetting__Setting3_BB = 4,
	EJackMeosiSlotBonusMonsterSetting__Setting3_SB = 5,
	EJackMeosiSlotBonusMonsterSetting__Setting4_BB = 6,
	EJackMeosiSlotBonusMonsterSetting__Setting4_SB = 7,
	EJackMeosiSlotBonusMonsterSetting__Setting5_BB = 8,
	EJackMeosiSlotBonusMonsterSetting__Setting5_SB = 9,
	EJackMeosiSlotBonusMonsterSetting__Setting6_BB = 10,
	EJackMeosiSlotBonusMonsterSetting__Setting6_SB = 11,
	EJackMeosiSlotBonusMonsterSetting__Setting7_BB = 12,
	EJackMeosiSlotBonusMonsterSetting__Setting7_SB = 13,
	EJackMeosiSlotBonusMonsterSetting__Setting_UraMode = 14,
	EJackMeosiSlotBonusMonsterSetting__MAX = 15
};


// Enum JackGame.EJackMeosiSlotMachineCondition
enum class EJackMeosiSlotMachineCondition : uint8_t
{
	EJackMeosiSlotMachineCondition__Level1 = 0,
	EJackMeosiSlotMachineCondition__Level2 = 1,
	EJackMeosiSlotMachineCondition__Level3 = 2,
	EJackMeosiSlotMachineCondition__Level4 = 3,
	EJackMeosiSlotMachineCondition__Level5 = 4,
	EJackMeosiSlotMachineCondition__MAX = 5
};


// Enum JackGame.EJackMeosiSlotBonusMonsterLevel
enum class EJackMeosiSlotBonusMonsterLevel : uint8_t
{
	EJackMeosiSlotBonusMonsterLevel__Level1 = 0,
	EJackMeosiSlotBonusMonsterLevel__Level2 = 1,
	EJackMeosiSlotBonusMonsterLevel__Level3 = 2,
	EJackMeosiSlotBonusMonsterLevel__Level4 = 3,
	EJackMeosiSlotBonusMonsterLevel__Level5 = 4,
	EJackMeosiSlotBonusMonsterLevel__MAX = 5
};


// Enum JackGame.EJackMeosiSlotBGM
enum class EJackMeosiSlotBGM : uint8_t
{
	EJackMeosiSlotBGM__Morning     = 0,
	EJackMeosiSlotBGM__Evening     = 1,
	EJackMeosiSlotBGM__Night       = 2,
	EJackMeosiSlotBGM__NormalBonusConfirm = 3,
	EJackMeosiSlotBGM__BounusGame  = 4,
	EJackMeosiSlotBGM__Result      = 5,
	EJackMeosiSlotBGM__VolcanoStage = 6,
	EJackMeosiSlotBGM__CastleStage = 7,
	EJackMeosiSlotBGM__WinDecide   = 8,
	EJackMeosiSlotBGM__ShimohuriChance = 9,
	EJackMeosiSlotBGM__MediumBossBattle = 10,
	EJackMeosiSlotBGM__BossBattle01 = 11,
	EJackMeosiSlotBGM__BossBattle02 = 12,
	EJackMeosiSlotBGM__BossBattle03 = 13,
	EJackMeosiSlotBGM__Nasubinara  = 14,
	EJackMeosiSlotBGM__Stock1      = 15,
	EJackMeosiSlotBGM__Stock2      = 16,
	EJackMeosiSlotBGM__Stock3      = 17,
	EJackMeosiSlotBGM__Stock4      = 18,
	EJackMeosiSlotBGM__Stock5      = 19,
	EJackMeosiSlotBGM__Stock6      = 20,
	EJackMeosiSlotBGM__Stock7      = 21,
	EJackMeosiSlotBGM__Stock8      = 22,
	EJackMeosiSlotBGM__Stock9      = 23,
	EJackMeosiSlotBGM__Stock10     = 24,
	EJackMeosiSlotBGM__Stock11     = 25,
	EJackMeosiSlotBGM__Stock12     = 26,
	EJackMeosiSlotBGM__Stock13     = 27,
	EJackMeosiSlotBGM__Stock14     = 28,
	EJackMeosiSlotBGM__Stock15     = 29,
	EJackMeosiSlotBGM__Union       = 30,
	EJackMeosiSlotBGM__SpecialTraning = 31,
	EJackMeosiSlotBGM__EJackMeosiSlotBGM_MAX = 32
};


// Enum JackGame.EJackMeosiSlotMachineGroup
enum class EJackMeosiSlotMachineGroup : uint8_t
{
	EJackMeosiSlotMachineGroup__ONE = 0,
	EJackMeosiSlotMachineGroup__TWO = 1,
	EJackMeosiSlotMachineGroup__THREE = 2,
	EJackMeosiSlotMachineGroup__FOUR = 3,
	EJackMeosiSlotMachineGroup__FIVE = 4,
	EJackMeosiSlotMachineGroup__SIX = 5,
	EJackMeosiSlotMachineGroup__SEVEN = 6,
	EJackMeosiSlotMachineGroup__EIGHT = 7,
	EJackMeosiSlotMachineGroup__NINE = 8,
	EJackMeosiSlotMachineGroup__TEN = 9,
	EJackMeosiSlotMachineGroup__ELEVEN = 10,
	EJackMeosiSlotMachineGroup__TWELVE = 11,
	EJackMeosiSlotMachineGroup__THIRTEEN = 12,
	EJackMeosiSlotMachineGroup__FOURTEEN = 13,
	EJackMeosiSlotMachineGroup__FIFTEEN = 14,
	EJackMeosiSlotMachineGroup__SIXTEEN = 15,
	EJackMeosiSlotMachineGroup__SEVENTEEN = 16,
	EJackMeosiSlotMachineGroup__EIGHTEEN = 17,
	EJackMeosiSlotMachineGroup__NINETEEN = 18,
	EJackMeosiSlotMachineGroup__TWENTY = 19,
	EJackMeosiSlotMachineGroup__MAX = 20
};


// Enum JackGame.EJackMeosiSlotDrakeeColor
enum class EJackMeosiSlotDrakeeColor : uint8_t
{
	EJackMeosiSlotDrakeeColor__BLACK = 0,
	EJackMeosiSlotDrakeeColor__GREEN = 1,
	EJackMeosiSlotDrakeeColor__RED = 2,
	EJackMeosiSlotDrakeeColor__MAX = 3
};


// Enum JackGame.EJackMeosiSlotDrakeeEffect
enum class EJackMeosiSlotDrakeeEffect : uint8_t
{
	EJackMeosiSlotDrakeeEffect__NOTHING = 0,
	EJackMeosiSlotDrakeeEffect__SINGLE = 1,
	EJackMeosiSlotDrakeeEffect__GUST = 2,
	EJackMeosiSlotDrakeeEffect__CALM = 3,
	EJackMeosiSlotDrakeeEffect__DOUBLE_A = 4,
	EJackMeosiSlotDrakeeEffect__DOUBLE_B = 5,
	EJackMeosiSlotDrakeeEffect__DOUBLE_C = 6,
	EJackMeosiSlotDrakeeEffect__TRIPPLE = 7,
	EJackMeosiSlotDrakeeEffect__SQUARE = 8,
	EJackMeosiSlotDrakeeEffect__DOGLEG = 9,
	EJackMeosiSlotDrakeeEffect__V_SHAPED = 10,
	EJackMeosiSlotDrakeeEffect__BACK_SLASH = 11,
	EJackMeosiSlotDrakeeEffect__MINUS = 12,
	EJackMeosiSlotDrakeeEffect__FLOCK = 13,
	EJackMeosiSlotDrakeeEffect__MAX = 14
};


// Enum JackGame.EJackMeosiSlotSoundEffect
enum class EJackMeosiSlotSoundEffect : uint8_t
{
	EJackMeosiSlotSoundEffect__DEFAULT = 0,
	EJackMeosiSlotSoundEffect__SPECIAL = 1,
	EJackMeosiSlotSoundEffect__SILENT = 2,
	EJackMeosiSlotSoundEffect__BONUS = 3,
	EJackMeosiSlotSoundEffect__MAX = 4
};


// Enum JackGame.EJackMeosiSlotBattleBackPattern
enum class EJackMeosiSlotBattleBackPattern : uint8_t
{
	EJackMeosiSlotBattleBackPattern__PAT_INVALID = 0,
	EJackMeosiSlotBattleBackPattern__PAT_RRRR = 1,
	EJackMeosiSlotBattleBackPattern__PAT_CCRR = 2,
	EJackMeosiSlotBattleBackPattern__PAT_CRRR = 3,
	EJackMeosiSlotBattleBackPattern__PAT_CBRR = 4,
	EJackMeosiSlotBattleBackPattern__PAT_CCBB = 5,
	EJackMeosiSlotBattleBackPattern__PAT_CRBB = 6,
	EJackMeosiSlotBattleBackPattern__PAT_CBBB = 7,
	EJackMeosiSlotBattleBackPattern__PAT_RRBB = 8,
	EJackMeosiSlotBattleBackPattern__PAT_RBRR = 9,
	EJackMeosiSlotBattleBackPattern__PAT_RBBB = 10,
	EJackMeosiSlotBattleBackPattern__PAT_BBBB = 11,
	EJackMeosiSlotBattleBackPattern__PAT_BRBB = 12,
	EJackMeosiSlotBattleBackPattern__MAX = 13
};


// Enum JackGame.EJackVowel
enum class EJackVowel : uint8_t
{
	EJackVowel__A                  = 0,
	EJackVowel__I                  = 1,
	EJackVowel__U                  = 2,
	EJackVowel__E                  = 3,
	EJackVowel__O                  = 4,
	EJackVowel__N                  = 5,
	EJackVowel__NA                 = 6,
	EJackVowel__XUA                = 7,
	EJackVowel__NU                 = 8,
	EJackVowel__SH                 = 9,
	EJackVowel__BMP                = 10,
	EJackVowel__MAX                = 11
};


// Enum JackGame.EJackMeosiSlotBarBackColor
enum class EJackMeosiSlotBarBackColor : uint8_t
{
	EJackMeosiSlotBarBackColor__BLUE = 0,
	EJackMeosiSlotBarBackColor__RED = 1,
	EJackMeosiSlotBarBackColor__GOLD = 2,
	EJackMeosiSlotBarBackColor__MEAT = 3,
	EJackMeosiSlotBarBackColor__MAX = 4
};


// Enum JackGame.EJackMeosiSlotCutinColor
enum class EJackMeosiSlotCutinColor : uint8_t
{
	EJackMeosiSlotCutinColor__WHITE = 0,
	EJackMeosiSlotCutinColor__BLUE = 1,
	EJackMeosiSlotCutinColor__RED  = 2,
	EJackMeosiSlotCutinColor__RAINBOW = 3,
	EJackMeosiSlotCutinColor__MAX  = 4
};


// Enum JackGame.EJackMeosiSlotFireLampColor
enum class EJackMeosiSlotFireLampColor : uint8_t
{
	EJackMeosiSlotFireLampColor__ORANGE = 0,
	EJackMeosiSlotFireLampColor__BLUE = 1,
	EJackMeosiSlotFireLampColor__RED = 2,
	EJackMeosiSlotFireLampColor__YELLOW = 3,
	EJackMeosiSlotFireLampColor__GREEN = 4,
	EJackMeosiSlotFireLampColor__LIGHT_BLUE = 5,
	EJackMeosiSlotFireLampColor__PURPLE = 6,
	EJackMeosiSlotFireLampColor__RAINBOW = 7,
	EJackMeosiSlotFireLampColor__WHITE = 8,
	EJackMeosiSlotFireLampColor__NONE = 9,
	EJackMeosiSlotFireLampColor__MAX = 10
};


// Enum JackGame.EJackMeosiSlotBattleResult
enum class EJackMeosiSlotBattleResult : uint8_t
{
	EJackMeosiSlotBattleResult__NONE = 0,
	EJackMeosiSlotBattleResult__WIN = 1,
	EJackMeosiSlotBattleResult__LOSE = 2,
	EJackMeosiSlotBattleResult__DRAW = 3,
	EJackMeosiSlotBattleResult__MAX = 4
};


// Enum JackGame.EJackMeosiSlotBattleSequence
enum class EJackMeosiSlotBattleSequence : uint8_t
{
	EJackMeosiSlotBattleSequence__DEFAULT = 0,
	EJackMeosiSlotBattleSequence__EFFECT_APPEARANCE_ENEMY = 1,
	EJackMeosiSlotBattleSequence__MAX = 2
};


// Enum JackGame.EJackMeosiSlotAttackEffect
enum class EJackMeosiSlotAttackEffect : uint8_t
{
	EJackMeosiSlotAttackEffect__NONE = 0,
	EJackMeosiSlotAttackEffect__MISS = 1,
	EJackMeosiSlotAttackEffect__SLASH = 2,
	EJackMeosiSlotAttackEffect__SLASH_CRITICAL = 3,
	EJackMeosiSlotAttackEffect__STRIKE = 4,
	EJackMeosiSlotAttackEffect__STRIKE_CRITICAL = 5,
	EJackMeosiSlotAttackEffect__MAGIC_WEAK = 6,
	EJackMeosiSlotAttackEffect__MAGIC_STRONG = 7,
	EJackMeosiSlotAttackEffect__MAX = 8
};


// Enum JackGame.EJackMeosiSlotAttackClass
enum class EJackMeosiSlotAttackClass : uint8_t
{
	EJackMeosiSlotAttackClass__PHYSICAL = 0,
	EJackMeosiSlotAttackClass__MAGICAL = 1,
	EJackMeosiSlotAttackClass__MAX = 2
};


// Enum JackGame.EJackMeosiSlotBattleReaction
enum class EJackMeosiSlotBattleReaction : uint8_t
{
	EJackMeosiSlotBattleReaction__NONE = 0,
	EJackMeosiSlotBattleReaction__AVOID = 1,
	EJackMeosiSlotBattleReaction__DAMAGE = 2,
	EJackMeosiSlotBattleReaction__MAX = 3
};


// Enum JackGame.EJackMeosiSlotBattleAction
enum class EJackMeosiSlotBattleAction : uint8_t
{
	EJackMeosiSlotBattleAction__NONE = 0,
	EJackMeosiSlotBattleAction__ATTACK = 1,
	EJackMeosiSlotBattleAction__ESCAPE = 2,
	EJackMeosiSlotBattleAction__MAX = 3
};


// Enum JackGame.EJackMeosiSlotBattleActor
enum class EJackMeosiSlotBattleActor : uint8_t
{
	EJackMeosiSlotBattleActor__PARTY = 0,
	EJackMeosiSlotBattleActor__ENEMY = 1,
	EJackMeosiSlotBattleActor__MAX = 2
};


// Enum JackGame.EJackMeosiSlotMonsterBehavior
enum class EJackMeosiSlotMonsterBehavior : uint8_t
{
	EJackMeosiSlotMonsterBehavior__ATTACK_MISS = 0,
	EJackMeosiSlotMonsterBehavior__ATTACK_WEAK = 1,
	EJackMeosiSlotMonsterBehavior__ATTACK_STRONG = 2,
	EJackMeosiSlotMonsterBehavior__ATTACK_MOST_STRONG = 3,
	EJackMeosiSlotMonsterBehavior__MAX = 4
};


// Enum JackGame.EJackMeosiSlotMonsterBehaviorPattern
enum class EJackMeosiSlotMonsterBehaviorPattern : uint8_t
{
	EJackMeosiSlotMonsterBehaviorPattern__FLAT = 0,
	EJackMeosiSlotMonsterBehaviorPattern__SLOPE = 1,
	EJackMeosiSlotMonsterBehaviorPattern__CLIFF = 2,
	EJackMeosiSlotMonsterBehaviorPattern__MAX = 3
};


// Enum JackGame.EJackMeosiSlotMonsterSize
enum class EJackMeosiSlotMonsterSize : uint8_t
{
	EJackMeosiSlotMonsterSize__S   = 0,
	EJackMeosiSlotMonsterSize__M   = 1,
	EJackMeosiSlotMonsterSize__L   = 2,
	EJackMeosiSlotMonsterSize__MAX = 3
};


// Enum JackGame.EJackMeosiSlotBattleBack
enum class EJackMeosiSlotBattleBack : uint8_t
{
	EJackMeosiSlotBattleBack__PARTY_BLUE = 0,
	EJackMeosiSlotBattleBack__ENEMY_RED = 1,
	EJackMeosiSlotBattleBack__GO_BACK = 2,
	EJackMeosiSlotBattleBack__CENTER = 3,
	EJackMeosiSlotBattleBack__MAX  = 4
};


// Enum JackGame.EJackMeosiSlotMonsterID
enum class EJackMeosiSlotMonsterID : uint8_t
{
	EJackMeosiSlotMonsterID__IdSlime = 0,
	EJackMeosiSlotMonsterID__IdDrackey = 1,
	EJackMeosiSlotMonsterID__IdMomonjya = 2,
	EJackMeosiSlotMonsterID__IdMocoky = 3,
	EJackMeosiSlotMonsterID__IdTombrelo = 4,
	EJackMeosiSlotMonsterID__IdKarakuriEgg = 5,
	EJackMeosiSlotMonsterID__IdChimera = 6,
	EJackMeosiSlotMonsterID__IdRottenCadaver = 7,
	EJackMeosiSlotMonsterID__IdBeeRider = 8,
	EJackMeosiSlotMonsterID__IdGolem = 9,
	EJackMeosiSlotMonsterID__IdWanderArmor = 10,
	EJackMeosiSlotMonsterID__IdTorol = 11,
	EJackMeosiSlotMonsterID__IdWyburnDog = 12,
	EJackMeosiSlotMonsterID__IdKillerPanther = 13,
	EJackMeosiSlotMonsterID__IdDemonPriest = 14,
	EJackMeosiSlotMonsterID__IdKillerMachine = 15,
	EJackMeosiSlotMonsterID__IdDragonPhD = 16,
	EJackMeosiSlotMonsterID__IdUncleHorn = 17,
	EJackMeosiSlotMonsterID__IdGigantes = 18,
	EJackMeosiSlotMonsterID__IdGreatDragon = 19,
	EJackMeosiSlotMonsterID__IdKillerMajinga = 20,
	EJackMeosiSlotMonsterID__IdDemonClub = 21,
	EJackMeosiSlotMonsterID__IdPurgatoryPegasus = 22,
	EJackMeosiSlotMonsterID__IdMimic = 23,
	EJackMeosiSlotMonsterID__IdLiquidMetalSlime = 24,
	EJackMeosiSlotMonsterID__IdGoldenSlime = 25,
	EJackMeosiSlotMonsterID__IdGoldMan = 26,
	EJackMeosiSlotMonsterID__IdDragon = 27,
	EJackMeosiSlotMonsterID__IdSkyDragon = 28,
	EJackMeosiSlotMonsterID__IdDragonGaia = 29,
	EJackMeosiSlotMonsterID__IdBonusbi = 30,
	EJackMeosiSlotMonsterID__IdUnionSlime = 31,
	EJackMeosiSlotMonsterID__IdPeachSlime = 32,
	EJackMeosiSlotMonsterID__IdMetalSlime = 33,
	EJackMeosiSlotMonsterID__IdKingSlime = 34,
	EJackMeosiSlotMonsterID__IdQueenSlime = 35,
	EJackMeosiSlotMonsterID__IdMetalKing = 36,
	EJackMeosiSlotMonsterID__MAX   = 37
};


// Enum JackGame.EJackMeosiSlotOrb
enum class EJackMeosiSlotOrb : uint8_t
{
	EJackMeosiSlotOrb__BLUE        = 0,
	EJackMeosiSlotOrb__GREEN       = 1,
	EJackMeosiSlotOrb__RED         = 2,
	EJackMeosiSlotOrb__SILVER      = 3,
	EJackMeosiSlotOrb__YELLOW      = 4,
	EJackMeosiSlotOrb__PURPLE      = 5,
	EJackMeosiSlotOrb__MAX         = 6
};


// Enum JackGame.EJackMeosiSlotFlavorItemRank
enum class EJackMeosiSlotFlavorItemRank : uint8_t
{
	EJackMeosiSlotFlavorItemRank__ONE = 0,
	EJackMeosiSlotFlavorItemRank__TWO = 1,
	EJackMeosiSlotFlavorItemRank__THREE = 2,
	EJackMeosiSlotFlavorItemRank__FOUR = 3,
	EJackMeosiSlotFlavorItemRank__FIVE = 4,
	EJackMeosiSlotFlavorItemRank__MAX = 5
};


// Enum JackGame.EJackMeosiSlotItemKind
enum class EJackMeosiSlotItemKind : uint8_t
{
	EJackMeosiSlotItemKind__NONE   = 0,
	EJackMeosiSlotItemKind__PLANT  = 1,
	EJackMeosiSlotItemKind__ORE    = 2,
	EJackMeosiSlotItemKind__HIDE   = 3,
	EJackMeosiSlotItemKind__MAX    = 4
};


// Enum JackGame.EJackMeosiSlotBalloon
enum class EJackMeosiSlotBalloon : uint8_t
{
	EJackMeosiSlotBalloon__WHITE   = 0,
	EJackMeosiSlotBalloon__BLUE    = 1,
	EJackMeosiSlotBalloon__YELLOW  = 2,
	EJackMeosiSlotBalloon__GREEN   = 3,
	EJackMeosiSlotBalloon__RED     = 4,
	EJackMeosiSlotBalloon__RAINBOW = 5,
	EJackMeosiSlotBalloon__MAX     = 6
};


// Enum JackGame.EJackMeosiSlotTreasureBox
enum class EJackMeosiSlotTreasureBox : uint8_t
{
	EJackMeosiSlotTreasureBox__POT = 0,
	EJackMeosiSlotTreasureBox__WOOD = 1,
	EJackMeosiSlotTreasureBox__RED = 2,
	EJackMeosiSlotTreasureBox__BLACK = 3,
	EJackMeosiSlotTreasureBox__GOLD = 4,
	EJackMeosiSlotTreasureBox__MAX = 5
};


// Enum JackGame.EJackMeosiSlotItemSpec
enum class EJackMeosiSlotItemSpec : uint8_t
{
	EJackMeosiSlotItemSpec__None   = 0,
	EJackMeosiSlotItemSpec__GreenOrb = 1,
	EJackMeosiSlotItemSpec__SilverOrb = 2,
	EJackMeosiSlotItemSpec__RedOrb = 3,
	EJackMeosiSlotItemSpec__YellowOrb = 4,
	EJackMeosiSlotItemSpec__BlueOrb = 5,
	EJackMeosiSlotItemSpec__PurpleOrb = 6,
	EJackMeosiSlotItemSpec__Feed   = 7,
	EJackMeosiSlotItemSpec__RuraStone = 8,
	EJackMeosiSlotItemSpec__FecesOfHorses = 9,
	EJackMeosiSlotItemSpec__FecesOfCattle = 10,
	EJackMeosiSlotItemSpec__BeastSkin = 11,
	EJackMeosiSlotItemSpec__CopperOre = 12,
	EJackMeosiSlotItemSpec__HempYarn = 13,
	EJackMeosiSlotItemSpec__WeightStone = 14,
	EJackMeosiSlotItemSpec__BushyFur = 15,
	EJackMeosiSlotItemSpec__SoftBranches = 16,
	EJackMeosiSlotItemSpec__IronOre = 17,
	EJackMeosiSlotItemSpec__CottonGrass = 18,
	EJackMeosiSlotItemSpec__Goald  = 19,
	EJackMeosiSlotItemSpec__DragonSkin = 20,
	EJackMeosiSlotItemSpec__GoldBullion = 21,
	EJackMeosiSlotItemSpec__MagicTree = 22,
	EJackMeosiSlotItemSpec__Platibum = 23,
	EJackMeosiSlotItemSpec__ShiningGrass = 24,
	EJackMeosiSlotItemSpec__MythicalSkin = 25,
	EJackMeosiSlotItemSpec__HeavyMetal = 26,
	EJackMeosiSlotItemSpec__DragonTreeBranch = 27,
	EJackMeosiSlotItemSpec__MonsterSkin = 28,
	EJackMeosiSlotItemSpec__BeautifulBranch = 29,
	EJackMeosiSlotItemSpec__SilkeGrass = 30,
	EJackMeosiSlotItemSpec__E456Confirm = 31,
	EJackMeosiSlotItemSpec__E56Confirm = 32,
	EJackMeosiSlotItemSpec__E6Confirm = 33,
	EJackMeosiSlotItemSpec__EvenConfirm = 34,
	EJackMeosiSlotItemSpec__OddConfirm = 35,
	EJackMeosiSlotItemSpec__Miss   = 36,
	EJackMeosiSlotItemSpec__Relpaly = 37,
	EJackMeosiSlotItemSpec__Plum   = 38,
	EJackMeosiSlotItemSpec__Watermelon = 39,
	EJackMeosiSlotItemSpec__Cherry = 40,
	EJackMeosiSlotItemSpec__Chance = 41,
	EJackMeosiSlotItemSpec__Bonus  = 42,
	EJackMeosiSlotItemSpec__Union  = 43,
	EJackMeosiSlotItemSpec__VeryHot = 44,
	EJackMeosiSlotItemSpec__ChanceHint = 45,
	EJackMeosiSlotItemSpec__SpTraining = 46,
	EJackMeosiSlotItemSpec__SpeedSeed = 47,
	EJackMeosiSlotItemSpec__MiracleSeed = 48,
	EJackMeosiSlotItemSpec__MAX    = 49
};


// Enum JackGame.EJackMeosiSlotItem
enum class EJackMeosiSlotItem : uint8_t
{
	EJackMeosiSlotItem__NONE       = 0,
	EJackMeosiSlotItem__ORB        = 1,
	EJackMeosiSlotItem__FEED       = 2,
	EJackMeosiSlotItem__MIMIC      = 3,
	EJackMeosiSlotItem__FLAVOR     = 4,
	EJackMeosiSlotItem__KEY        = 5,
	EJackMeosiSlotItem__HINTHAND   = 6,
	EJackMeosiSlotItem__HINTSETTING = 7,
	EJackMeosiSlotItem__HINTEFFECT = 8,
	EJackMeosiSlotItem__TRAINING   = 9,
	EJackMeosiSlotItem__MAX        = 10
};


// Enum JackGame.EJackMeosiSlotMonsterRank
enum class EJackMeosiSlotMonsterRank : uint8_t
{
	EJackMeosiSlotMonsterRank__F   = 0,
	EJackMeosiSlotMonsterRank__E   = 1,
	EJackMeosiSlotMonsterRank__D   = 2,
	EJackMeosiSlotMonsterRank__C   = 3,
	EJackMeosiSlotMonsterRank__B   = 4,
	EJackMeosiSlotMonsterRank__A   = 5,
	EJackMeosiSlotMonsterRank__S   = 6,
	EJackMeosiSlotMonsterRank__SS  = 7,
	EJackMeosiSlotMonsterRank__SSS = 8,
	EJackMeosiSlotMonsterRank__MAX = 9
};


// Enum JackGame.EJackMeosiSlotKeySeType
enum class EJackMeosiSlotKeySeType : uint8_t
{
	EJackMeosiSlotKeySeType__KeySe_None = 0,
	EJackMeosiSlotKeySeType__KeySe_Lever_SP = 1,
	EJackMeosiSlotKeySeType__KeySe_All_SP = 2,
	EJackMeosiSlotKeySeType__KeySe_Lever_Delay = 3,
	EJackMeosiSlotKeySeType__KeySe_All_Delay = 4,
	EJackMeosiSlotKeySeType__KeySe_Lever_Delay_SP = 5,
	EJackMeosiSlotKeySeType__KeySe_All_Delay_SP = 6,
	EJackMeosiSlotKeySeType__MAX   = 7
};


// Enum JackGame.EJackMeosiSlotEffectKeyType
enum class EJackMeosiSlotEffectKeyType : uint8_t
{
	EJackMeosiSlotEffectKeyType__KeyType_None = 0,
	EJackMeosiSlotEffectKeyType__KeyType_Lever = 1,
	EJackMeosiSlotEffectKeyType__KeyType_FirstStop = 2,
	EJackMeosiSlotEffectKeyType__KeyType_SecondStop = 3,
	EJackMeosiSlotEffectKeyType__KeyType_ThirdStop = 4,
	EJackMeosiSlotEffectKeyType__MAX = 5
};


// Enum JackGame.EJackMeosiSlotEffect
enum class EJackMeosiSlotEffect : uint8_t
{
	EJackMeosiSlotEffect__NONE     = 0,
	EJackMeosiSlotEffect__REEL_LIGHT_OFF = 1,
	EJackMeosiSlotEffect__FIRE_LAMP = 2,
	EJackMeosiSlotEffect__DOOR_EMISSION = 3,
	EJackMeosiSlotEffect__PSEUDO_CONTINUATION = 4,
	EJackMeosiSlotEffect__CHANCE_CUTIN_DEF = 5,
	EJackMeosiSlotEffect__FLASH    = 6,
	EJackMeosiSlotEffect__DRAKEE   = 7,
	EJackMeosiSlotEffect__FRAME_LAMP = 8,
	EJackMeosiSlotEffect__FRAME_FIRE_LAMP = 9,
	EJackMeosiSlotEffect__MAX      = 10
};


// Enum JackGame.EJackMeosiSlotDirectImpact
enum class EJackMeosiSlotDirectImpact : uint8_t
{
	EJackMeosiSlotDirectImpact__FromBattle = 0,
	EJackMeosiSlotDirectImpact__FromNormal = 1,
	EJackMeosiSlotDirectImpact__FromTBox = 2,
	EJackMeosiSlotDirectImpact__FromYakumono = 3,
	EJackMeosiSlotDirectImpact__ToChallenge = 4,
	EJackMeosiSlotDirectImpact__ToMAX = 5,
	EJackMeosiSlotDirectImpact__EJackMeosiSlotDirectImpact_MAX = 6
};


// Enum JackGame.EJackMeosiSlotContEvent
enum class EJackMeosiSlotContEvent : uint8_t
{
	EJackMeosiSlotContEvent__ContToBonus = 0,
	EJackMeosiSlotContEvent__ContToChallenge = 1,
	EJackMeosiSlotContEvent__ContToNormal = 2,
	EJackMeosiSlotContEvent__ContToMAX = 3,
	EJackMeosiSlotContEvent__EJackMeosiSlotContEvent_MAX = 4
};


// Enum JackGame.EJackMeosiSlotScenarioBranch
enum class EJackMeosiSlotScenarioBranch : uint8_t
{
	EJackMeosiSlotScenarioBranch__NORMAL = 0,
	EJackMeosiSlotScenarioBranch__STOCKED_NORMAL = 1,
	EJackMeosiSlotScenarioBranch__TRAINING = 2,
	EJackMeosiSlotScenarioBranch__NO_USE = 3,
	EJackMeosiSlotScenarioBranch__STOCKED_BATTLE = 4,
	EJackMeosiSlotScenarioBranch__BATTLE = 5,
	EJackMeosiSlotScenarioBranch__STOCKED_BONUS_GAME = 6,
	EJackMeosiSlotScenarioBranch__BONUS_GAME = 7,
	EJackMeosiSlotScenarioBranch__NO_USE01 = 8,
	EJackMeosiSlotScenarioBranch__NO_USE02 = 9,
	EJackMeosiSlotScenarioBranch__FAKE_TRAINING = 10,
	EJackMeosiSlotScenarioBranch__CEILING = 11,
	EJackMeosiSlotScenarioBranch__MAX = 12
};


// Enum JackGame.EJackMeosiSlotScenarioTBoxItem
enum class EJackMeosiSlotScenarioTBoxItem : uint8_t
{
	EJackMeosiSlotScenarioTBoxItem__ItemNone = 0,
	EJackMeosiSlotScenarioTBoxItem__ItemFeed = 1,
	EJackMeosiSlotScenarioTBoxItem__ItemOrb = 2,
	EJackMeosiSlotScenarioTBoxItem__ItemHintHand = 3,
	EJackMeosiSlotScenarioTBoxItem__ItemHintSetting = 4,
	EJackMeosiSlotScenarioTBoxItem__ItemBonusStone = 5,
	EJackMeosiSlotScenarioTBoxItem__ItemOther = 6,
	EJackMeosiSlotScenarioTBoxItem__ItemHintEffect = 7,
	EJackMeosiSlotScenarioTBoxItem__ItemSpTraining = 8,
	EJackMeosiSlotScenarioTBoxItem__ItemLottery = 9,
	EJackMeosiSlotScenarioTBoxItem__ItemMimic = 10,
	EJackMeosiSlotScenarioTBoxItem__ItemMAX = 11,
	EJackMeosiSlotScenarioTBoxItem__EJackMeosiSlotScenarioTBoxItem_MAX = 12
};


// Enum JackGame.EJackMeosiSlotSpTrainingButton
enum class EJackMeosiSlotSpTrainingButton : uint8_t
{
	EJackMeosiSlotSpTrainingButton__SptButton_None = 0,
	EJackMeosiSlotSpTrainingButton__SptButton_Normal = 1,
	EJackMeosiSlotSpTrainingButton__SptButton_Big = 2,
	EJackMeosiSlotSpTrainingButton__SptButton_Slime = 3,
	EJackMeosiSlotSpTrainingButton__MAX = 4
};


// Enum JackGame.EJackMeosiSlotSpTrainingAct
enum class EJackMeosiSlotSpTrainingAct : uint8_t
{
	EJackMeosiSlotSpTrainingAct__SptAct_None = 0,
	EJackMeosiSlotSpTrainingAct__SptAct_Fake = 1,
	EJackMeosiSlotSpTrainingAct__SptAct_Speed = 2,
	EJackMeosiSlotSpTrainingAct__SptAct_Miracle = 3,
	EJackMeosiSlotSpTrainingAct__SptAct_Dash = 4,
	EJackMeosiSlotSpTrainingAct__SptAct_BlueDoor = 5,
	EJackMeosiSlotSpTrainingAct__SptAct_RedDoor = 6,
	EJackMeosiSlotSpTrainingAct__SptAct_Cont = 7,
	EJackMeosiSlotSpTrainingAct__MAX = 8
};


// Enum JackGame.EJackMeosiSlotSpTrainingAuraColor
enum class EJackMeosiSlotSpTrainingAuraColor : uint8_t
{
	EJackMeosiSlotSpTrainingAuraColor__SptAura_None = 0,
	EJackMeosiSlotSpTrainingAuraColor__SptAura_White = 1,
	EJackMeosiSlotSpTrainingAuraColor__SptAura_Blue = 2,
	EJackMeosiSlotSpTrainingAuraColor__SptAura_Green = 3,
	EJackMeosiSlotSpTrainingAuraColor__SptAura_Red = 4,
	EJackMeosiSlotSpTrainingAuraColor__SptAura_Rainbow = 5,
	EJackMeosiSlotSpTrainingAuraColor__MAX = 6
};


// Enum JackGame.EJackMeosiSlotSpTrainingGameState
enum class EJackMeosiSlotSpTrainingGameState : uint8_t
{
	EJackMeosiSlotSpTrainingGameState__SptGameSt_None = 0,
	EJackMeosiSlotSpTrainingGameState__SptGameSt_Normal = 1,
	EJackMeosiSlotSpTrainingGameState__SptGameSt_Cont = 2,
	EJackMeosiSlotSpTrainingGameState__SptGameSt_PreLast = 3,
	EJackMeosiSlotSpTrainingGameState__SptGameSt_End = 4,
	EJackMeosiSlotSpTrainingGameState__MAX = 5
};


// Enum JackGame.EJackMeosiSlotUnionGameResult
enum class EJackMeosiSlotUnionGameResult : uint8_t
{
	EJackMeosiSlotUnionGameResult__Result_Cont = 0,
	EJackMeosiSlotUnionGameResult__Result_End = 1,
	EJackMeosiSlotUnionGameResult__Result_Succeed = 2,
	EJackMeosiSlotUnionGameResult__Result_Failure = 3,
	EJackMeosiSlotUnionGameResult__MAX = 4
};


// Enum JackGame.EJackMeosiSlotEvent
enum class EJackMeosiSlotEvent : uint8_t
{
	EJackMeosiSlotEvent__NONE      = 0,
	EJackMeosiSlotEvent__BATTLE_DEFAULT = 1,
	EJackMeosiSlotEvent__BATTLE_MID_BOSS = 2,
	EJackMeosiSlotEvent__BATTLE_BOSS = 3,
	EJackMeosiSlotEvent__RECRUIT   = 4,
	EJackMeosiSlotEvent__TREASURE_BOX_DISCOVERY = 5,
	EJackMeosiSlotEvent__CHANCE_CUTIN_STEP_UP = 6,
	EJackMeosiSlotEvent__SHIMOFURI_CHANCE = 7,
	EJackMeosiSlotEvent__UNION_CHALLENGE = 8,
	EJackMeosiSlotEvent__SPECIAL_TRAINING = 9,
	EJackMeosiSlotEvent__BAR_CHANCE = 10,
	EJackMeosiSlotEvent__CHANCE_SLIME = 11,
	EJackMeosiSlotEvent__TREASURE_BOX_RETRY = 12,
	EJackMeosiSlotEvent__DRAKEE    = 13,
	EJackMeosiSlotEvent__MAX       = 14
};


// Enum JackGame.EJackMeosiSlotUnionScenarioBranch
enum class EJackMeosiSlotUnionScenarioBranch : uint8_t
{
	EJackMeosiSlotUnionScenarioBranch__Branch = 0,
	EJackMeosiSlotUnionScenarioBranch__Branch01 = 1,
	EJackMeosiSlotUnionScenarioBranch__Branch02 = 2,
	EJackMeosiSlotUnionScenarioBranch__Branch03 = 3,
	EJackMeosiSlotUnionScenarioBranch__Branch04 = 4,
	EJackMeosiSlotUnionScenarioBranch__Branch05 = 5,
	EJackMeosiSlotUnionScenarioBranch__Branch06 = 6,
	EJackMeosiSlotUnionScenarioBranch__Branch07 = 7,
	EJackMeosiSlotUnionScenarioBranch__Branch08 = 8,
	EJackMeosiSlotUnionScenarioBranch__Branch09 = 9,
	EJackMeosiSlotUnionScenarioBranch__Branch10 = 10,
	EJackMeosiSlotUnionScenarioBranch__Branch11 = 11,
	EJackMeosiSlotUnionScenarioBranch__Branch12 = 12,
	EJackMeosiSlotUnionScenarioBranch__Branch13 = 13,
	EJackMeosiSlotUnionScenarioBranch__Branch14 = 14,
	EJackMeosiSlotUnionScenarioBranch__Branch15 = 15,
	EJackMeosiSlotUnionScenarioBranch__Branch16 = 16,
	EJackMeosiSlotUnionScenarioBranch__Branch17 = 17,
	EJackMeosiSlotUnionScenarioBranch__Branch18 = 18,
	EJackMeosiSlotUnionScenarioBranch__Branch19 = 19,
	EJackMeosiSlotUnionScenarioBranch__MAX = 20
};


// Enum JackGame.EJackMeosiSlotUnionScenarioID
enum class EJackMeosiSlotUnionScenarioID : uint8_t
{
	EJackMeosiSlotUnionScenarioID__Special = 0,
	EJackMeosiSlotUnionScenarioID__Succ2G = 1,
	EJackMeosiSlotUnionScenarioID__Succ2G01 = 2,
	EJackMeosiSlotUnionScenarioID__Succ2G02 = 3,
	EJackMeosiSlotUnionScenarioID__Cont3G = 4,
	EJackMeosiSlotUnionScenarioID__Cont3G01 = 5,
	EJackMeosiSlotUnionScenarioID__Cont3G02 = 6,
	EJackMeosiSlotUnionScenarioID__Cont3G03 = 7,
	EJackMeosiSlotUnionScenarioID__Cont3G04 = 8,
	EJackMeosiSlotUnionScenarioID__Cont3G05 = 9,
	EJackMeosiSlotUnionScenarioID__Cont3G06 = 10,
	EJackMeosiSlotUnionScenarioID__MAX = 11
};


// Enum JackGame.EJackMeosiSlotScenarioHazureKind
enum class EJackMeosiSlotScenarioHazureKind : uint8_t
{
	EJackMeosiSlotScenarioHazureKind__Kind_Moving = 0,
	EJackMeosiSlotScenarioHazureKind__Kind_Fake = 1,
	EJackMeosiSlotScenarioHazureKind__Kind_EmptyTBox = 2,
	EJackMeosiSlotScenarioHazureKind__MAX = 3
};


// Enum JackGame.EJackMeosiSlotScenarioTBoxOpenTiming
enum class EJackMeosiSlotScenarioTBoxOpenTiming : uint8_t
{
	EJackMeosiSlotScenarioTBoxOpenTiming__Timing_Default = 0,
	EJackMeosiSlotScenarioTBoxOpenTiming__Timing_SecondStop = 1,
	EJackMeosiSlotScenarioTBoxOpenTiming__Timing_ThirdStop = 2,
	EJackMeosiSlotScenarioTBoxOpenTiming__Timing_NextDefault = 3,
	EJackMeosiSlotScenarioTBoxOpenTiming__Timing_NextSecondStop = 4,
	EJackMeosiSlotScenarioTBoxOpenTiming__Timing_NextThirdStop = 5,
	EJackMeosiSlotScenarioTBoxOpenTiming__MAX = 6
};


// Enum JackGame.EJackMeosiSlotUnionSlime
enum class EJackMeosiSlotUnionSlime : uint8_t
{
	EJackMeosiSlotUnionSlime__Slime = 0,
	EJackMeosiSlotUnionSlime__Slime01 = 1,
	EJackMeosiSlotUnionSlime__Slime02 = 2,
	EJackMeosiSlotUnionSlime__None = 3,
	EJackMeosiSlotUnionSlime__MAX  = 4
};


// Enum JackGame.EJackMeosiSlotScenarioTBoxKind
enum class EJackMeosiSlotScenarioTBoxKind : uint8_t
{
	EJackMeosiSlotScenarioTBoxKind__Kind_None = 0,
	EJackMeosiSlotScenarioTBoxKind__Kind_HintHand = 1,
	EJackMeosiSlotScenarioTBoxKind__Kind_HintSetting = 2,
	EJackMeosiSlotScenarioTBoxKind__Kind_Orb = 3,
	EJackMeosiSlotScenarioTBoxKind__Kind_Orb_Low = 4,
	EJackMeosiSlotScenarioTBoxKind__Kind_Orb_High = 5,
	EJackMeosiSlotScenarioTBoxKind__Kind_Feed = 6,
	EJackMeosiSlotScenarioTBoxKind__Kind_Feed_Low = 7,
	EJackMeosiSlotScenarioTBoxKind__Kind_Feed_High = 8,
	EJackMeosiSlotScenarioTBoxKind__Kind_Lottery = 9,
	EJackMeosiSlotScenarioTBoxKind__Kind_Mimic = 10,
	EJackMeosiSlotScenarioTBoxKind__MAX = 11
};


// Enum JackGame.EJackMeosiSlotScenarioMamonoKind
enum class EJackMeosiSlotScenarioMamonoKind : uint8_t
{
	EJackMeosiSlotScenarioMamonoKind__Kind_None = 0,
	EJackMeosiSlotScenarioMamonoKind__Kind_Default = 1,
	EJackMeosiSlotScenarioMamonoKind__Kind_Default01 = 2,
	EJackMeosiSlotScenarioMamonoKind__Kind_Default02 = 3,
	EJackMeosiSlotScenarioMamonoKind__Kind_Default03 = 4,
	EJackMeosiSlotScenarioMamonoKind__Kind_StepUp = 5,
	EJackMeosiSlotScenarioMamonoKind__MAX = 6
};


// Enum JackGame.EJackMeosiSlotScenarioSubAct
enum class EJackMeosiSlotScenarioSubAct : uint8_t
{
	EJackMeosiSlotScenarioSubAct__SubAct_None = 0,
	EJackMeosiSlotScenarioSubAct__SubAct_Random_01 = 1,
	EJackMeosiSlotScenarioSubAct__SubAct_Random_02 = 2,
	EJackMeosiSlotScenarioSubAct__SubAct_Random_03 = 3,
	EJackMeosiSlotScenarioSubAct__SubAct_Random_04 = 4,
	EJackMeosiSlotScenarioSubAct__SubAct_Drakee_01 = 5,
	EJackMeosiSlotScenarioSubAct__SubAct_Drakee_02 = 6,
	EJackMeosiSlotScenarioSubAct__SubAct_CutIn = 7,
	EJackMeosiSlotScenarioSubAct__SubAct_CutInStepUp = 8,
	EJackMeosiSlotScenarioSubAct__SubAct_Yakumono = 9,
	EJackMeosiSlotScenarioSubAct__SubAct_TurnOffReel = 10,
	EJackMeosiSlotScenarioSubAct__SubAct_FireLamp = 11,
	EJackMeosiSlotScenarioSubAct__SubAct_FrameLamp_00 = 12,
	EJackMeosiSlotScenarioSubAct__SubAct_FrameLamp_01 = 13,
	EJackMeosiSlotScenarioSubAct__SubAct_FrameLamp_02 = 14,
	EJackMeosiSlotScenarioSubAct__SubAct_FrameLamp_03 = 15,
	EJackMeosiSlotScenarioSubAct__SubAct_FrameFire_00 = 16,
	EJackMeosiSlotScenarioSubAct__SubAct_FrameFire_01 = 17,
	EJackMeosiSlotScenarioSubAct__SubAct_FrameFire_02 = 18,
	EJackMeosiSlotScenarioSubAct__SubAct_FrameFire_03 = 19,
	EJackMeosiSlotScenarioSubAct__SubAct_FrameFire_04 = 20,
	EJackMeosiSlotScenarioSubAct__MAX = 21
};


// Enum JackGame.EJackMeosiSlotScenarioActNo
enum class EJackMeosiSlotScenarioActNo : uint8_t
{
	EJackMeosiSlotScenarioActNo__ActNo_None = 0,
	EJackMeosiSlotScenarioActNo__ActNo_End = 1,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono_01 = 2,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono_02 = 3,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono_03 = 4,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono_04 = 5,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono_05 = 6,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono_06 = 7,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono_07 = 8,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono_08 = 9,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono_09 = 10,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono = 11,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono01 = 12,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono02 = 13,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono03 = 14,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono04 = 15,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono05 = 16,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono06 = 17,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono07 = 18,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono08 = 19,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono09 = 20,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono10 = 21,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono11 = 22,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono12 = 23,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono13 = 24,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono14 = 25,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono15 = 26,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono16 = 27,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono17 = 28,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono18 = 29,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono19 = 30,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono20 = 31,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono21 = 32,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono22 = 33,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono23 = 34,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono24 = 35,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono25 = 36,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono26 = 37,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono27 = 38,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono28 = 39,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono29 = 40,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono30 = 41,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono31 = 42,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono32 = 43,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono33 = 44,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono34 = 45,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono35 = 46,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono36 = 47,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono37 = 48,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono38 = 49,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono39 = 50,
	EJackMeosiSlotScenarioActNo__ActNo_Mamono40 = 51,
	EJackMeosiSlotScenarioActNo__ActNo_TBox_01 = 52,
	EJackMeosiSlotScenarioActNo__ActNo_TBox_02 = 53,
	EJackMeosiSlotScenarioActNo__ActNo_TBox_03 = 54,
	EJackMeosiSlotScenarioActNo__ActNo_TBox_04 = 55,
	EJackMeosiSlotScenarioActNo__ActNo_TBox_05 = 56,
	EJackMeosiSlotScenarioActNo__ActNo_TBox_06 = 57,
	EJackMeosiSlotScenarioActNo__ActNo_TBox_07 = 58,
	EJackMeosiSlotScenarioActNo__ActNo_TBox_08 = 59,
	EJackMeosiSlotScenarioActNo__ActNo_TBox_09 = 60,
	EJackMeosiSlotScenarioActNo__ActNo_TBox = 61,
	EJackMeosiSlotScenarioActNo__ActNo_TBox01 = 62,
	EJackMeosiSlotScenarioActNo__ActNo_TBox02 = 63,
	EJackMeosiSlotScenarioActNo__ActNo_TBox03 = 64,
	EJackMeosiSlotScenarioActNo__ActNo_TBox04 = 65,
	EJackMeosiSlotScenarioActNo__ActNo_TBox05 = 66,
	EJackMeosiSlotScenarioActNo__ActNo_TBox06 = 67,
	EJackMeosiSlotScenarioActNo__ActNo_TBox07 = 68,
	EJackMeosiSlotScenarioActNo__ActNo_TBox08 = 69,
	EJackMeosiSlotScenarioActNo__ActNo_TBox09 = 70,
	EJackMeosiSlotScenarioActNo__ActNo_TBox10 = 71,
	EJackMeosiSlotScenarioActNo__ActNo_TBox11 = 72,
	EJackMeosiSlotScenarioActNo__ActNo_TBox12 = 73,
	EJackMeosiSlotScenarioActNo__ActNo_TBox13 = 74,
	EJackMeosiSlotScenarioActNo__ActNo_TBox14 = 75,
	EJackMeosiSlotScenarioActNo__ActNo_TBox15 = 76,
	EJackMeosiSlotScenarioActNo__ActNo_TBox16 = 77,
	EJackMeosiSlotScenarioActNo__ActNo_TBox17 = 78,
	EJackMeosiSlotScenarioActNo__ActNo_TBox18 = 79,
	EJackMeosiSlotScenarioActNo__ActNo_TBox19 = 80,
	EJackMeosiSlotScenarioActNo__ActNo_TBox20 = 81,
	EJackMeosiSlotScenarioActNo__ActNo_TBox21 = 82,
	EJackMeosiSlotScenarioActNo__ActNo_TBox22 = 83,
	EJackMeosiSlotScenarioActNo__ActNo_TBox23 = 84,
	EJackMeosiSlotScenarioActNo__ActNo_TBox24 = 85,
	EJackMeosiSlotScenarioActNo__ActNo_TBox25 = 86,
	EJackMeosiSlotScenarioActNo__ActNo_TBox26 = 87,
	EJackMeosiSlotScenarioActNo__ActNo_TBox27 = 88,
	EJackMeosiSlotScenarioActNo__ActNo_TBox28 = 89,
	EJackMeosiSlotScenarioActNo__ActNo_TBox29 = 90,
	EJackMeosiSlotScenarioActNo__ActNo_TBox30 = 91,
	EJackMeosiSlotScenarioActNo__ActNo_TBox31 = 92,
	EJackMeosiSlotScenarioActNo__ActNo_TBox32 = 93,
	EJackMeosiSlotScenarioActNo__ActNo_TBox33 = 94,
	EJackMeosiSlotScenarioActNo__ActNo_TBox34 = 95,
	EJackMeosiSlotScenarioActNo__ActNo_TBox35 = 96,
	EJackMeosiSlotScenarioActNo__ActNo_TBox36 = 97,
	EJackMeosiSlotScenarioActNo__ActNo_TBox37 = 98,
	EJackMeosiSlotScenarioActNo__ActNo_TBox38 = 99,
	EJackMeosiSlotScenarioActNo__ActNo_TBox39 = 100,
	EJackMeosiSlotScenarioActNo__ActNo_TBox40 = 101,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure_01 = 102,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure_02 = 103,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure_03 = 104,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure_04 = 105,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure_05 = 106,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure_06 = 107,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure_07 = 108,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure_08 = 109,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure_09 = 110,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure = 111,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure01 = 112,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure02 = 113,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure03 = 114,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure04 = 115,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure05 = 116,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure06 = 117,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure07 = 118,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure08 = 119,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure09 = 120,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure10 = 121,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure11 = 122,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure12 = 123,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure13 = 124,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure14 = 125,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure15 = 126,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure16 = 127,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure17 = 128,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure18 = 129,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure19 = 130,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure20 = 131,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure21 = 132,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure22 = 133,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure23 = 134,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure24 = 135,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure25 = 136,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure26 = 137,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure27 = 138,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure28 = 139,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure29 = 140,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure30 = 141,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure31 = 142,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure32 = 143,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure33 = 144,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure34 = 145,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure35 = 146,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure36 = 147,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure37 = 148,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure38 = 149,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure39 = 150,
	EJackMeosiSlotScenarioActNo__ActNo_Hazure40 = 151,
	EJackMeosiSlotScenarioActNo__ActNo_Random_01 = 152,
	EJackMeosiSlotScenarioActNo__ActNo_Random_02 = 153,
	EJackMeosiSlotScenarioActNo__ActNo_Random_03 = 154,
	EJackMeosiSlotScenarioActNo__ActNo_Random_04 = 155,
	EJackMeosiSlotScenarioActNo__ActNo_Random_05 = 156,
	EJackMeosiSlotScenarioActNo__ActNo_Random_06 = 157,
	EJackMeosiSlotScenarioActNo__ActNo_Random_07 = 158,
	EJackMeosiSlotScenarioActNo__ActNo_Random_08 = 159,
	EJackMeosiSlotScenarioActNo__ActNo_Random_09 = 160,
	EJackMeosiSlotScenarioActNo__ActNo_Random = 161,
	EJackMeosiSlotScenarioActNo__ActNo_Random01 = 162,
	EJackMeosiSlotScenarioActNo__ActNo_Random02 = 163,
	EJackMeosiSlotScenarioActNo__ActNo_Random03 = 164,
	EJackMeosiSlotScenarioActNo__ActNo_Random04 = 165,
	EJackMeosiSlotScenarioActNo__ActNo_Random05 = 166,
	EJackMeosiSlotScenarioActNo__ActNo_Random06 = 167,
	EJackMeosiSlotScenarioActNo__ActNo_Random07 = 168,
	EJackMeosiSlotScenarioActNo__ActNo_Random08 = 169,
	EJackMeosiSlotScenarioActNo__ActNo_Random09 = 170,
	EJackMeosiSlotScenarioActNo__ActNo_Random10 = 171,
	EJackMeosiSlotScenarioActNo__ActNo_Random11 = 172,
	EJackMeosiSlotScenarioActNo__ActNo_Random12 = 173,
	EJackMeosiSlotScenarioActNo__ActNo_Random13 = 174,
	EJackMeosiSlotScenarioActNo__ActNo_Random14 = 175,
	EJackMeosiSlotScenarioActNo__ActNo_Random15 = 176,
	EJackMeosiSlotScenarioActNo__ActNo_Random16 = 177,
	EJackMeosiSlotScenarioActNo__ActNo_Random17 = 178,
	EJackMeosiSlotScenarioActNo__ActNo_Random18 = 179,
	EJackMeosiSlotScenarioActNo__ActNo_Random19 = 180,
	EJackMeosiSlotScenarioActNo__ActNo_Random20 = 181,
	EJackMeosiSlotScenarioActNo__ActNo_Random21 = 182,
	EJackMeosiSlotScenarioActNo__ActNo_Random22 = 183,
	EJackMeosiSlotScenarioActNo__ActNo_Random23 = 184,
	EJackMeosiSlotScenarioActNo__ActNo_Random24 = 185,
	EJackMeosiSlotScenarioActNo__ActNo_Random25 = 186,
	EJackMeosiSlotScenarioActNo__ActNo_Random26 = 187,
	EJackMeosiSlotScenarioActNo__ActNo_Random27 = 188,
	EJackMeosiSlotScenarioActNo__ActNo_Random28 = 189,
	EJackMeosiSlotScenarioActNo__ActNo_Random29 = 190,
	EJackMeosiSlotScenarioActNo__ActNo_Random30 = 191,
	EJackMeosiSlotScenarioActNo__ActNo_Random31 = 192,
	EJackMeosiSlotScenarioActNo__ActNo_Random32 = 193,
	EJackMeosiSlotScenarioActNo__ActNo_Random33 = 194,
	EJackMeosiSlotScenarioActNo__ActNo_Random34 = 195,
	EJackMeosiSlotScenarioActNo__ActNo_Random35 = 196,
	EJackMeosiSlotScenarioActNo__ActNo_Random36 = 197,
	EJackMeosiSlotScenarioActNo__ActNo_Random37 = 198,
	EJackMeosiSlotScenarioActNo__ActNo_Random38 = 199,
	EJackMeosiSlotScenarioActNo__ActNo_Random39 = 200,
	EJackMeosiSlotScenarioActNo__ActNo_Random40 = 201,
	EJackMeosiSlotScenarioActNo__ActNo_Slime_01 = 202,
	EJackMeosiSlotScenarioActNo__ActNo_Slime_02 = 203,
	EJackMeosiSlotScenarioActNo__ActNo_Slime_03 = 204,
	EJackMeosiSlotScenarioActNo__ActNo_Slime_04 = 205,
	EJackMeosiSlotScenarioActNo__ActNo_Slime_05 = 206,
	EJackMeosiSlotScenarioActNo__ActNo_Slime_06 = 207,
	EJackMeosiSlotScenarioActNo__ActNo_Slime_07 = 208,
	EJackMeosiSlotScenarioActNo__ActNo_Slime_08 = 209,
	EJackMeosiSlotScenarioActNo__ActNo_Slime_09 = 210,
	EJackMeosiSlotScenarioActNo__ActNo_Slime = 211,
	EJackMeosiSlotScenarioActNo__ActNo_Slime01 = 212,
	EJackMeosiSlotScenarioActNo__ActNo_Slime02 = 213,
	EJackMeosiSlotScenarioActNo__ActNo_Slime03 = 214,
	EJackMeosiSlotScenarioActNo__ActNo_Slime04 = 215,
	EJackMeosiSlotScenarioActNo__ActNo_Slime05 = 216,
	EJackMeosiSlotScenarioActNo__ActNo_Slime06 = 217,
	EJackMeosiSlotScenarioActNo__ActNo_Slime07 = 218,
	EJackMeosiSlotScenarioActNo__ActNo_Slime08 = 219,
	EJackMeosiSlotScenarioActNo__ActNo_Slime09 = 220,
	EJackMeosiSlotScenarioActNo__ActNo_Slime10 = 221,
	EJackMeosiSlotScenarioActNo__ActNo_Slime11 = 222,
	EJackMeosiSlotScenarioActNo__ActNo_Slime12 = 223,
	EJackMeosiSlotScenarioActNo__ActNo_Slime13 = 224,
	EJackMeosiSlotScenarioActNo__ActNo_Slime14 = 225,
	EJackMeosiSlotScenarioActNo__ActNo_Slime15 = 226,
	EJackMeosiSlotScenarioActNo__ActNo_Slime16 = 227,
	EJackMeosiSlotScenarioActNo__ActNo_Slime17 = 228,
	EJackMeosiSlotScenarioActNo__ActNo_Slime18 = 229,
	EJackMeosiSlotScenarioActNo__ActNo_Slime19 = 230,
	EJackMeosiSlotScenarioActNo__ActNo_Slime20 = 231,
	EJackMeosiSlotScenarioActNo__ActNo_Slime21 = 232,
	EJackMeosiSlotScenarioActNo__ActNo_Slime22 = 233,
	EJackMeosiSlotScenarioActNo__ActNo_Slime23 = 234,
	EJackMeosiSlotScenarioActNo__ActNo_Slime24 = 235,
	EJackMeosiSlotScenarioActNo__ActNo_Slime25 = 236,
	EJackMeosiSlotScenarioActNo__ActNo_Slime26 = 237,
	EJackMeosiSlotScenarioActNo__ActNo_Slime27 = 238,
	EJackMeosiSlotScenarioActNo__ActNo_Slime28 = 239,
	EJackMeosiSlotScenarioActNo__ActNo_Slime29 = 240,
	EJackMeosiSlotScenarioActNo__ActNo_Slime30 = 241,
	EJackMeosiSlotScenarioActNo__ActNo_Slime31 = 242,
	EJackMeosiSlotScenarioActNo__ActNo_Slime32 = 243,
	EJackMeosiSlotScenarioActNo__ActNo_Slime33 = 244,
	EJackMeosiSlotScenarioActNo__ActNo_Slime34 = 245,
	EJackMeosiSlotScenarioActNo__ActNo_Slime35 = 246,
	EJackMeosiSlotScenarioActNo__ActNo_Slime36 = 247,
	EJackMeosiSlotScenarioActNo__ActNo_Slime37 = 248,
	EJackMeosiSlotScenarioActNo__ActNo_Slime38 = 249,
	EJackMeosiSlotScenarioActNo__ActNo_Slime39 = 250,
	EJackMeosiSlotScenarioActNo__ActNo_Slime40 = 251,
	EJackMeosiSlotScenarioActNo__MAX = 252
};


// Enum JackGame.EJackMeosiSlotParadiseModeType
enum class EJackMeosiSlotParadiseModeType : uint8_t
{
	EJackMeosiSlotParadiseModeType__Type_A = 0,
	EJackMeosiSlotParadiseModeType__Type_B = 1,
	EJackMeosiSlotParadiseModeType__Type_C = 2,
	EJackMeosiSlotParadiseModeType__MAX = 3
};


// Enum JackGame.EJackMeosiSlotScenarioSPTraining
enum class EJackMeosiSlotScenarioSPTraining : uint8_t
{
	EJackMeosiSlotScenarioSPTraining__Training_False = 0,
	EJackMeosiSlotScenarioSPTraining__Training_True = 1,
	EJackMeosiSlotScenarioSPTraining__MAX = 2
};


// Enum JackGame.EJackMeosiSlotScenarioHint
enum class EJackMeosiSlotScenarioHint : uint8_t
{
	EJackMeosiSlotScenarioHint__Hint_None = 0,
	EJackMeosiSlotScenarioHint__Hint_Hazure = 1,
	EJackMeosiSlotScenarioHint__Hint_Chance = 2,
	EJackMeosiSlotScenarioHint__Hint_Hot = 3,
	EJackMeosiSlotScenarioHint__Hint_Expansion = 4,
	EJackMeosiSlotScenarioHint__Hint_Training = 5,
	EJackMeosiSlotScenarioHint__Hint_Bonus = 6,
	EJackMeosiSlotScenarioHint__Hint_Stock = 7,
	EJackMeosiSlotScenarioHint__Hint_Reach = 8,
	EJackMeosiSlotScenarioHint__Hint_Reach_Chance = 9,
	EJackMeosiSlotScenarioHint__Hint_Reach_Hot = 10,
	EJackMeosiSlotScenarioHint__Hint_Reach_Stock = 11,
	EJackMeosiSlotScenarioHint__MAX = 12
};


// Enum JackGame.EJackMeosiSlotScenarioStage
enum class EJackMeosiSlotScenarioStage : uint8_t
{
	EJackMeosiSlotScenarioStage__Stage_None = 0,
	EJackMeosiSlotScenarioStage__Stage_Daytime = 1,
	EJackMeosiSlotScenarioStage__Stage_Twilight = 2,
	EJackMeosiSlotScenarioStage__Stage_Night = 3,
	EJackMeosiSlotScenarioStage__Stage_Union = 4,
	EJackMeosiSlotScenarioStage__Stage_SP_Traning = 5,
	EJackMeosiSlotScenarioStage__Stage_BonusFixing = 6,
	EJackMeosiSlotScenarioStage__MAX = 7
};


// Enum JackGame.EJackMeosiSlotScenarioActType
enum class EJackMeosiSlotScenarioActType : uint8_t
{
	EJackMeosiSlotScenarioActType__Act_None = 0,
	EJackMeosiSlotScenarioActType__Act_Mamono = 1,
	EJackMeosiSlotScenarioActType__Act_TBox = 2,
	EJackMeosiSlotScenarioActType__Act_Hazure = 3,
	EJackMeosiSlotScenarioActType__Act_Random = 4,
	EJackMeosiSlotScenarioActType__Act_Slime = 5,
	EJackMeosiSlotScenarioActType__Act_ChanceZone = 6,
	EJackMeosiSlotScenarioActType__Act_ChanceZone01 = 7,
	EJackMeosiSlotScenarioActType__Act_BonusGame = 8,
	EJackMeosiSlotScenarioActType__Act_BossBattle = 9,
	EJackMeosiSlotScenarioActType__Act_Shimofuri = 10,
	EJackMeosiSlotScenarioActType__Act_LongFreeze = 11,
	EJackMeosiSlotScenarioActType__MAX = 12
};


// Enum JackGame.EJackMeosiSlotScenarioLotteryResult
enum class EJackMeosiSlotScenarioLotteryResult : uint8_t
{
	EJackMeosiSlotScenarioLotteryResult__Lottery_None = 0,
	EJackMeosiSlotScenarioLotteryResult__Lottery_Succeed = 1,
	EJackMeosiSlotScenarioLotteryResult__Lottery_ErrPat = 2,
	EJackMeosiSlotScenarioLotteryResult__MAX = 3
};


// Enum JackGame.EJackMeosiSlotScenarioState
enum class EJackMeosiSlotScenarioState : uint8_t
{
	EJackMeosiSlotScenarioState__State_None = 0,
	EJackMeosiSlotScenarioState__State_Normal = 1,
	EJackMeosiSlotScenarioState__State_ZakoBattle = 2,
	EJackMeosiSlotScenarioState__State_SpTBox = 3,
	EJackMeosiSlotScenarioState__State_UnionChallenge = 4,
	EJackMeosiSlotScenarioState__State_SpTraining = 5,
	EJackMeosiSlotScenarioState__State_BonusFixing = 6,
	EJackMeosiSlotScenarioState__State_BossBattle = 7,
	EJackMeosiSlotScenarioState__State_Shimofuri = 8,
	EJackMeosiSlotScenarioState__State_LongFreeze = 9,
	EJackMeosiSlotScenarioState__State_Recruit = 10,
	EJackMeosiSlotScenarioState__MAX = 11
};


// Enum JackGame.EJackMeosiSlotHsHand
enum class EJackMeosiSlotHsHand : uint8_t
{
	EJackMeosiSlotHsHand__MISS_WEAK = 0,
	EJackMeosiSlotHsHand__MISS_STRONG = 1,
	EJackMeosiSlotHsHand__REPLAY_WEAK = 2,
	EJackMeosiSlotHsHand__REPLAY_STRONG = 3,
	EJackMeosiSlotHsHand__PLUM_WEAK = 4,
	EJackMeosiSlotHsHand__PLUM_STRONG = 5,
	EJackMeosiSlotHsHand__WATERMELON_WEAK = 6,
	EJackMeosiSlotHsHand__WATERMELON_STRONG = 7,
	EJackMeosiSlotHsHand__WATERMELON_CENTER = 8,
	EJackMeosiSlotHsHand__CHERRY_WEAK = 9,
	EJackMeosiSlotHsHand__CHERRY_STRONG = 10,
	EJackMeosiSlotHsHand__CHERRY_TRIPLE = 11,
	EJackMeosiSlotHsHand__CHERRY_CENTER = 12,
	EJackMeosiSlotHsHand__BELL_WEAK = 13,
	EJackMeosiSlotHsHand__BELL_STRONG = 14,
	EJackMeosiSlotHsHand__CHANCE_CHALLEGE = 15,
	EJackMeosiSlotHsHand__CHANCE_DIRECT_WEAK = 16,
	EJackMeosiSlotHsHand__CHANCE_DIRECT_STRONG = 17,
	EJackMeosiSlotHsHand__CHANCE_WEAK = 18,
	EJackMeosiSlotHsHand__CHANCE_STRONG = 19,
	EJackMeosiSlotHsHand__CHANCE_SPOT_WEAK = 20,
	EJackMeosiSlotHsHand__CHANCE_SPOT_STRONG = 21,
	EJackMeosiSlotHsHand__REACH_WEAK = 22,
	EJackMeosiSlotHsHand__REACH_STRONG = 23,
	EJackMeosiSlotHsHand__BIG_BONUS = 24,
	EJackMeosiSlotHsHand__SPECIAL_BONUS = 25,
	EJackMeosiSlotHsHand__LONG_FREEZE = 26,
	EJackMeosiSlotHsHand__BREAK_REPLAY = 27,
	EJackMeosiSlotHsHand__BAR_WEAK = 28,
	EJackMeosiSlotHsHand__BAR_STRONG = 29,
	EJackMeosiSlotHsHand__TYPE_MAX = 30,
	EJackMeosiSlotHsHand__GAMES_PARADISE = 31,
	EJackMeosiSlotHsHand__PARADISE_MODE = 32,
	EJackMeosiSlotHsHand__EJackMeosiSlotHsHand_MAX = 33
};


// Enum JackGame.EJackMeosiSlotHand
enum class EJackMeosiSlotHand : uint8_t
{
	EJackMeosiSlotHand__MISS       = 0,
	EJackMeosiSlotHand__REPLAY     = 1,
	EJackMeosiSlotHand__PLUM_WEAK  = 2,
	EJackMeosiSlotHand__PLUM_STRONG = 3,
	EJackMeosiSlotHand__WATERMELON_WEAK = 4,
	EJackMeosiSlotHand__WATERMELON_STRONG = 5,
	EJackMeosiSlotHand__CHERRY_WEAK = 6,
	EJackMeosiSlotHand__CHERRY_STRONG = 7,
	EJackMeosiSlotHand__CHERRY_TRIPLE = 8,
	EJackMeosiSlotHand__CHERRY_CENTER = 9,
	EJackMeosiSlotHand__BEL        = 10,
	EJackMeosiSlotHand__CHANCE_WEAK = 11,
	EJackMeosiSlotHand__CHANCE_STRONG = 12,
	EJackMeosiSlotHand__CHANCE_MOST_STRONG = 13,
	EJackMeosiSlotHand__CHANCE_SPOT_WEAK = 14,
	EJackMeosiSlotHand__CHANCE_SPOT_STRONG = 15,
	EJackMeosiSlotHand__REACH      = 16,
	EJackMeosiSlotHand__BIG_BONUS  = 17,
	EJackMeosiSlotHand__SPECIAL_BONUS = 18,
	EJackMeosiSlotHand__MAX        = 19
};


// Enum JackGame.EJackMeosiSlotReelPattern
enum class EJackMeosiSlotReelPattern : uint8_t
{
	EJackMeosiSlotReelPattern__Exclusion = 0,
	EJackMeosiSlotReelPattern__NoHand_W = 1,
	EJackMeosiSlotReelPattern__NoHand_S = 2,
	EJackMeosiSlotReelPattern__Chance_W = 3,
	EJackMeosiSlotReelPattern__Chance_S = 4,
	EJackMeosiSlotReelPattern__Reach_W = 5,
	EJackMeosiSlotReelPattern__Reach_S = 6,
	EJackMeosiSlotReelPattern__BreakReplay = 7,
	EJackMeosiSlotReelPattern__Replay_W = 8,
	EJackMeosiSlotReelPattern__Replay_S = 9,
	EJackMeosiSlotReelPattern__Plum_W = 10,
	EJackMeosiSlotReelPattern__Plum_S = 11,
	EJackMeosiSlotReelPattern__Wmelon_W = 12,
	EJackMeosiSlotReelPattern__Wmelon_S = 13,
	EJackMeosiSlotReelPattern__Wmelon_C = 14,
	EJackMeosiSlotReelPattern__SingleCherry = 15,
	EJackMeosiSlotReelPattern__DoubleCherry = 16,
	EJackMeosiSlotReelPattern__TripleCherry = 17,
	EJackMeosiSlotReelPattern__CenterCherry = 18,
	EJackMeosiSlotReelPattern__Bell_W = 19,
	EJackMeosiSlotReelPattern__Bell_S = 20,
	EJackMeosiSlotReelPattern__Meat_W = 21,
	EJackMeosiSlotReelPattern__Meat_S = 22,
	EJackMeosiSlotReelPattern__Bonus = 23,
	EJackMeosiSlotReelPattern__SpecialBonus = 24,
	EJackMeosiSlotReelPattern__Bar_W = 25,
	EJackMeosiSlotReelPattern__Bar_S = 26,
	EJackMeosiSlotReelPattern__Exclusion_P = 27,
	EJackMeosiSlotReelPattern__NoHand_W_P = 28,
	EJackMeosiSlotReelPattern__NoHand_S_P = 29,
	EJackMeosiSlotReelPattern__Chance_W_P = 30,
	EJackMeosiSlotReelPattern__Chance_S_P = 31,
	EJackMeosiSlotReelPattern__Reach_W_P = 32,
	EJackMeosiSlotReelPattern__Reach_S_P = 33,
	EJackMeosiSlotReelPattern__BreakReplay_P = 34,
	EJackMeosiSlotReelPattern__Replay_W_P = 35,
	EJackMeosiSlotReelPattern__Replay_S_P = 36,
	EJackMeosiSlotReelPattern__Plum_W_P = 37,
	EJackMeosiSlotReelPattern__Plum_S_P = 38,
	EJackMeosiSlotReelPattern__Wmelon_W_P = 39,
	EJackMeosiSlotReelPattern__Wmelon_S_P = 40,
	EJackMeosiSlotReelPattern__Wmelon_C_P = 41,
	EJackMeosiSlotReelPattern__SingleCherry_P = 42,
	EJackMeosiSlotReelPattern__DoubleCherry_P = 43,
	EJackMeosiSlotReelPattern__TripleCherry_P = 44,
	EJackMeosiSlotReelPattern__CenterCherry_P = 45,
	EJackMeosiSlotReelPattern__Bell_W_P = 46,
	EJackMeosiSlotReelPattern__Bell_S_P = 47,
	EJackMeosiSlotReelPattern__Meat_W_P = 48,
	EJackMeosiSlotReelPattern__Meat_S_P = 49,
	EJackMeosiSlotReelPattern__Bonus_P = 50,
	EJackMeosiSlotReelPattern__SpecialBonus_P = 51,
	EJackMeosiSlotReelPattern__Bar_W_P = 52,
	EJackMeosiSlotReelPattern__Bar_S_P = 53,
	EJackMeosiSlotReelPattern__Exclusion_TP = 54,
	EJackMeosiSlotReelPattern__NoHand_W_TP = 55,
	EJackMeosiSlotReelPattern__NoHand_S_TP = 56,
	EJackMeosiSlotReelPattern__Chance_W_TP = 57,
	EJackMeosiSlotReelPattern__Chance_S_TP = 58,
	EJackMeosiSlotReelPattern__Reach_W_TP = 59,
	EJackMeosiSlotReelPattern__Reach_S_TP = 60,
	EJackMeosiSlotReelPattern__BreakReplay_TP = 61,
	EJackMeosiSlotReelPattern__Replay_W_TP = 62,
	EJackMeosiSlotReelPattern__Replay_S_TP = 63,
	EJackMeosiSlotReelPattern__Plum_W_TP = 64,
	EJackMeosiSlotReelPattern__Plum_S_TP = 65,
	EJackMeosiSlotReelPattern__Wmelon_W_TP = 66,
	EJackMeosiSlotReelPattern__Wmelon_S_TP = 67,
	EJackMeosiSlotReelPattern__Wmelon_C_TP = 68,
	EJackMeosiSlotReelPattern__SingleCherry_TP = 69,
	EJackMeosiSlotReelPattern__DoubleCherry_TP = 70,
	EJackMeosiSlotReelPattern__TripleCherry_TP = 71,
	EJackMeosiSlotReelPattern__CenterCherry_TP = 72,
	EJackMeosiSlotReelPattern__Bell_W_TP = 73,
	EJackMeosiSlotReelPattern__Bell_S_TP = 74,
	EJackMeosiSlotReelPattern__Meat_W_TP = 75,
	EJackMeosiSlotReelPattern__Meat_S_TP = 76,
	EJackMeosiSlotReelPattern__Bonus_TP = 77,
	EJackMeosiSlotReelPattern__SpecialBonus_TP = 78,
	EJackMeosiSlotReelPattern__Bar_W_TP = 79,
	EJackMeosiSlotReelPattern__Bar_S_TP = 80,
	EJackMeosiSlotReelPattern__MAX = 81
};


// Enum JackGame.EJackMeosiSlotReelBrightness
enum class EJackMeosiSlotReelBrightness : uint8_t
{
	EJackMeosiSlotReelBrightness__Dark = 0,
	EJackMeosiSlotReelBrightness__Dim = 1,
	EJackMeosiSlotReelBrightness__Mid = 2,
	EJackMeosiSlotReelBrightness__Lightlight = 3,
	EJackMeosiSlotReelBrightness__Bright = 4,
	EJackMeosiSlotReelBrightness__MAX = 5
};


// Enum JackGame.EJackMeosiSlotReelLamp
enum class EJackMeosiSlotReelLamp : uint8_t
{
	EJackMeosiSlotReelLamp__Neutral = 0,
	EJackMeosiSlotReelLamp__Normal = 1,
	EJackMeosiSlotReelLamp__LongFreeze = 2,
	EJackMeosiSlotReelLamp__Bell   = 3,
	EJackMeosiSlotReelLamp__Shimofuri = 4,
	EJackMeosiSlotReelLamp__Putoff = 5,
	EJackMeosiSlotReelLamp__Puton  = 6,
	EJackMeosiSlotReelLamp__BreakReplay = 7,
	EJackMeosiSlotReelLamp__MAX    = 8
};


// Enum JackGame.EJackMeosiSlotPicture
enum class EJackMeosiSlotPicture : uint8_t
{
	EJackMeosiSlotPicture__BEL     = 0,
	EJackMeosiSlotPicture__REPLAY  = 1,
	EJackMeosiSlotPicture__BAR     = 2,
	EJackMeosiSlotPicture__CHERRRY = 3,
	EJackMeosiSlotPicture__WATERMELON = 4,
	EJackMeosiSlotPicture__PLUM    = 5,
	EJackMeosiSlotPicture__BLANK   = 6,
	EJackMeosiSlotPicture__CHANCE  = 7,
	EJackMeosiSlotPicture__SEVEN   = 8,
	EJackMeosiSlotPicture__MAX     = 9
};


// Enum JackGame.EJackMeosiSlotReelStopTimes
enum class EJackMeosiSlotReelStopTimes : uint8_t
{
	EJackMeosiSlotReelStopTimes__FIRST = 0,
	EJackMeosiSlotReelStopTimes__SECOND = 1,
	EJackMeosiSlotReelStopTimes__THIRD = 2,
	EJackMeosiSlotReelStopTimes__MAX = 3
};


// Enum JackGame.EJackMeosiSlotInternalProbabilityStatus
enum class EJackMeosiSlotInternalProbabilityStatus : uint8_t
{
	EJackMeosiSlotInternalProbabilityStatus__DEFAULT = 0,
	EJackMeosiSlotInternalProbabilityStatus__HIGH = 1,
	EJackMeosiSlotInternalProbabilityStatus__HEAVEN = 2,
	EJackMeosiSlotInternalProbabilityStatus__MAX = 3
};


// Enum JackGame.EJackMeosiSlotStageMode
enum class EJackMeosiSlotStageMode : uint8_t
{
	EJackMeosiSlotStageMode__NORMAL = 0,
	EJackMeosiSlotStageMode__CHANCE_ZONE = 1,
	EJackMeosiSlotStageMode__CHANCE_ZONE01 = 2,
	EJackMeosiSlotStageMode__BONUS_FIXING = 3,
	EJackMeosiSlotStageMode__BONUS_GAME = 4,
	EJackMeosiSlotStageMode__SP_BONUS_GAME = 5,
	EJackMeosiSlotStageMode__BOSS_BATTLE = 6,
	EJackMeosiSlotStageMode__BONUS_CONTINUE = 7,
	EJackMeosiSlotStageMode__MAX   = 8
};


// Enum JackGame.EJackMeosiSlotStageState
enum class EJackMeosiSlotStageState : uint8_t
{
	EJackMeosiSlotStageState__NORMAL_NORMAL = 0,
	EJackMeosiSlotStageState__NORMAL_BONUS = 1,
	EJackMeosiSlotStageState__NORMAL_BONUS_SUCCESS = 2,
	EJackMeosiSlotStageState__NORMAL_BONUS_DIRECT = 3,
	EJackMeosiSlotStageState__CHANCE_ZONE_NORMAL = 4,
	EJackMeosiSlotStageState__CHANCE_ZONE_INTRODUCTION = 5,
	EJackMeosiSlotStageState__CHANCE_ZONE_BATTLE = 6,
	EJackMeosiSlotStageState__CHANCE_ZONE_COMEBACK = 7,
	EJackMeosiSlotStageState__CHANCE_ZONE_WIN = 8,
	EJackMeosiSlotStageState__NORMAL_BATTLE_RESULT = 9,
	EJackMeosiSlotStageState__NORMAL_RESULT_COMEBACK = 10,
	EJackMeosiSlotStageState__STATE_INVALID = 11,
	EJackMeosiSlotStageState__MAX  = 12
};


// Enum JackGame.EJackMeosiSlotStage
enum class EJackMeosiSlotStage : uint8_t
{
	EJackMeosiSlotStage__DEFAULT   = 0,
	EJackMeosiSlotStage__CHANCE_ZONE = 1,
	EJackMeosiSlotStage__CHANCE_ZONE01 = 2,
	EJackMeosiSlotStage__SPECIAL_TRAINING = 3,
	EJackMeosiSlotStage__MAX       = 4
};


// Enum JackGame.EJackMeosiSlotSettingValue
enum class EJackMeosiSlotSettingValue : uint8_t
{
	EJackMeosiSlotSettingValue__ONE = 0,
	EJackMeosiSlotSettingValue__TWO = 1,
	EJackMeosiSlotSettingValue__THREE = 2,
	EJackMeosiSlotSettingValue__FOUR = 3,
	EJackMeosiSlotSettingValue__FIVE = 4,
	EJackMeosiSlotSettingValue__SIX = 5,
	EJackMeosiSlotSettingValue__SEVEN = 6,
	EJackMeosiSlotSettingValue__MAX = 7
};


// Enum JackGame.EJackMeosiSlotReel
enum class EJackMeosiSlotReel : uint8_t
{
	EJackMeosiSlotReel__LEFT       = 0,
	EJackMeosiSlotReel__CENTER     = 1,
	EJackMeosiSlotReel__RIGHT      = 2,
	EJackMeosiSlotReel__MAX        = 3
};


// Enum JackGame.EJackMiniGameDebugValueRange
enum class EJackMiniGameDebugValueRange : uint8_t
{
	EJackMiniGameDebugValueRange__None = 0,
	EJackMiniGameDebugValueRange__Lower = 1,
	EJackMiniGameDebugValueRange__Upper = 2,
	EJackMiniGameDebugValueRange__Max = 3
};


// Enum JackGame.EJackMiniGameJackPotNPCState
enum class EJackMiniGameJackPotNPCState : uint8_t
{
	EJackMiniGameJackPotNPCState__Initialize = 0,
	EJackMiniGameJackPotNPCState__JackPotLottey = 1,
	EJackMiniGameJackPotNPCState__JackPotNoLottey = 2,
	EJackMiniGameJackPotNPCState__Max = 3
};


// Enum JackGame.EJackMiniGameJackPotMachine
enum class EJackMiniGameJackPotMachine : uint8_t
{
	EJackMiniGameJackPotMachine__Roulette = 0,
	EJackMiniGameJackPotMachine__Slot = 1,
	EJackMiniGameJackPotMachine__Max = 2
};


// Enum JackGame.EJackMiniGameJackPotState
enum class EJackMiniGameJackPotState : uint8_t
{
	EJackMiniGameJackPotState__Normal = 0,
	EJackMiniGameJackPotState__EasyHit = 1,
	EJackMiniGameJackPotState__VeryEasyHit = 2,
	EJackMiniGameJackPotState__Max = 3
};


// Enum JackGame.EJackMiniGameKind
enum class EJackMiniGameKind : uint8_t
{
	EJackMiniGameKind__None        = 0,
	EJackMiniGameKind__Slot        = 1,
	EJackMiniGameKind__Roulette    = 2,
	EJackMiniGameKind__Poker       = 3,
	EJackMiniGameKind__MeosiSlot   = 4,
	EJackMiniGameKind__Max         = 5
};


// Enum JackGame.EJackMiniGameJackPotLevel
enum class EJackMiniGameJackPotLevel : uint8_t
{
	EJackMiniGameJackPotLevel__Level1 = 0,
	EJackMiniGameJackPotLevel__Level2 = 1,
	EJackMiniGameJackPotLevel__Level3 = 2,
	EJackMiniGameJackPotLevel__Level4 = 3,
	EJackMiniGameJackPotLevel__Level5 = 4,
	EJackMiniGameJackPotLevel__Max = 5
};


// Enum JackGame.EJackMiniGameJackPot
enum class EJackMiniGameJackPot : uint8_t
{
	EJackMiniGameJackPot__Grotta   = 0,
	EJackMiniGameJackPot__Soltico  = 1,
	EJackMiniGameJackPot__Max      = 2
};


// Enum JackGame.EJackMiniGameMeosiSlotPoint
enum class EJackMiniGameMeosiSlotPoint : uint8_t
{
	EJackMiniGameMeosiSlotPoint__Grotta = 0,
	EJackMiniGameMeosiSlotPoint__Grotta_Second = 1,
	EJackMiniGameMeosiSlotPoint__Soltico = 2,
	EJackMiniGameMeosiSlotPoint__Max = 3
};


// Enum JackGame.EJackMiniGamePoker
enum class EJackMiniGamePoker : uint8_t
{
	EJackMiniGamePoker__POKER_GAME_RESULT_NONE = 0,
	EJackMiniGamePoker__POKER_GAME_RESULT_HIGH_CARD = 1,
	EJackMiniGamePoker__POKER_GAME_RESULT_ONE_PAIR = 2,
	EJackMiniGamePoker__POKER_GAME_RESULT_TWO_PAIR = 3,
	EJackMiniGamePoker__POKER_GAME_RESULT_THREE_CARD = 4,
	EJackMiniGamePoker__POKER_GAME_RESULT_STRAIGHT = 5,
	EJackMiniGamePoker__POKER_GAME_RESULT_FLUSH = 6,
	EJackMiniGamePoker__POKER_GAME_RESULT_FULL_HOUSE = 7,
	EJackMiniGamePoker__POKER_GAME_RESULT_FOUR_CARD = 8,
	EJackMiniGamePoker__POKER_GAME_RESULT_STRAIGHT_FLUSH = 9,
	EJackMiniGamePoker__POKER_GAME_RESULT_FIVE_CARD = 10,
	EJackMiniGamePoker__POKER_GAME_RESULT_ROYAL_FLUSH = 11,
	EJackMiniGamePoker__POKER_GAME_RESULT_ROYAL_FLUSH_SPADE = 12,
	EJackMiniGamePoker__POKER_GAME_RESULT_DOUBLEUP_LOSE = 13,
	EJackMiniGamePoker__POKER_GAME_RESULT_DOUBLEUP_EVEN = 14,
	EJackMiniGamePoker__POKER_GAME_RESULT_DOUBLEUP_WIN = 15,
	EJackMiniGamePoker__POKER_GAME_RESULT_DOUBLEUP_TREASURECARD = 16,
	EJackMiniGamePoker__POKER_GAME_RESULT_UNABLE_BET = 17,
	EJackMiniGamePoker__POKER_GAME_RESULT_ENUM_MAX = 18,
	EJackMiniGamePoker__POKER_GAME_RESULT_FORCE_FOUR = 19,
	EJackMiniGamePoker__POKER_GAME_RESULT_MAX = 20
};


// Enum JackGame.EJackPokerSign
enum class EJackPokerSign : uint8_t
{
	EJackPokerSign__POSITIVE       = 0,
	EJackPokerSign__NEGATIVE       = 1,
	EJackPokerSign__MAX            = 2
};


// Enum JackGame.EJackPokerTreasureBox
enum class EJackPokerTreasureBox : uint8_t
{
	EJackPokerTreasureBox__NONE    = 0,
	EJackPokerTreasureBox__RED     = 1,
	EJackPokerTreasureBox__BLACK   = 2,
	EJackPokerTreasureBox__GOLD    = 3,
	EJackPokerTreasureBox__MAX     = 4
};


// Enum JackGame.EJackPokerCardNumber
enum class EJackPokerCardNumber : uint8_t
{
	EJackPokerCardNumber__TWO      = 0,
	EJackPokerCardNumber__THREE    = 1,
	EJackPokerCardNumber__FOUR     = 2,
	EJackPokerCardNumber__FIVE     = 3,
	EJackPokerCardNumber__SIX      = 4,
	EJackPokerCardNumber__SEVEN    = 5,
	EJackPokerCardNumber__EIGHT    = 6,
	EJackPokerCardNumber__NINE     = 7,
	EJackPokerCardNumber__TEN      = 8,
	EJackPokerCardNumber__JACK     = 9,
	EJackPokerCardNumber__QUEEN    = 10,
	EJackPokerCardNumber__KING     = 11,
	EJackPokerCardNumber__ACE      = 12,
	EJackPokerCardNumber__JOKER    = 13,
	EJackPokerCardNumber__MAX      = 14
};


// Enum JackGame.EJackPokerHand
enum class EJackPokerHand : uint8_t
{
	EJackPokerHand__ROYAL_STRAIGHT_FLUSH_SPADE = 0,
	EJackPokerHand__ROYAL_STRAIGHT_FLUSH = 1,
	EJackPokerHand__FIVE_CARD      = 2,
	EJackPokerHand__STRAIGHT_FLUSH = 3,
	EJackPokerHand__FOUR_CARD      = 4,
	EJackPokerHand__FULL_HOUSE     = 5,
	EJackPokerHand__FLUSH          = 6,
	EJackPokerHand__STRAIGHT       = 7,
	EJackPokerHand__THREE_CARD     = 8,
	EJackPokerHand__TWO_PAIR       = 9,
	EJackPokerHand__NONE           = 10,
	EJackPokerHand__MAX            = 11
};


// Enum JackGame.EJackPokerBetUnit
enum class EJackPokerBetUnit : uint8_t
{
	EJackPokerBetUnit__ONE         = 0,
	EJackPokerBetUnit__TEN         = 1,
	EJackPokerBetUnit__HUNDRED     = 2,
	EJackPokerBetUnit__MAX         = 3
};


// Enum JackGame.EJackPokerWidgetID
enum class EJackPokerWidgetID : uint8_t
{
	EJackPokerWidgetID__PokerResultBase = 0,
	EJackPokerWidgetID__PokerResult = 1,
	EJackPokerWidgetID__MAX        = 2
};


// Enum JackGame.EJackMiniGameRouletteGameState
enum class EJackMiniGameRouletteGameState : uint8_t
{
	EJackMiniGameRouletteGameState__Init = 0,
	EJackMiniGameRouletteGameState__Game = 1,
	EJackMiniGameRouletteGameState__EndDemo = 2,
	EJackMiniGameRouletteGameState__JackPotDemo = 3,
	EJackMiniGameRouletteGameState__Finished = 4,
	EJackMiniGameRouletteGameState__End = 5,
	EJackMiniGameRouletteGameState__MAX = 6
};


// Enum JackGame.EJackMiniGameTask
enum class EJackMiniGameTask : uint8_t
{
	EJackMiniGameTask__Init        = 0,
	EJackMiniGameTask__Wait        = 1,
	EJackMiniGameTask__StartWait   = 2,
	EJackMiniGameTask__Begin       = 3,
	EJackMiniGameTask__Update      = 4,
	EJackMiniGameTask__End         = 5,
	EJackMiniGameTask__MAX         = 6
};


// Enum JackGame.EJackModeType
enum class EJackModeType : uint8_t
{
	EJackModeType__Mode2D          = 0,
	EJackModeType__Mode3D          = 1,
	EJackModeType__MAX             = 2
};


// Enum JackGame.EJackMonsterMovingPathMethod
enum class EJackMonsterMovingPathMethod : uint8_t
{
	EJackMonsterMovingPathMethod__Default = 0,
	EJackMonsterMovingPathMethod__CourseCurve = 1,
	EJackMonsterMovingPathMethod__SplinePath = 2,
	EJackMonsterMovingPathMethod__MAX = 3
};


// Enum JackGame.EJackMonsterMovingMode
enum class EJackMonsterMovingMode : uint8_t
{
	EJackMonsterMovingMode__Default = 0,
	EJackMonsterMovingMode__Run    = 1,
	EJackMonsterMovingMode__BackWalk = 2,
	EJackMonsterMovingMode__FieldRun = 3,
	EJackMonsterMovingMode__MAX    = 4
};


// Enum JackGame.EJackDebugCommandForMonster
enum class EJackDebugCommandForMonster : uint8_t
{
	EJackDebugCommandForMonster__Encount = 0,
	EJackDebugCommandForMonster__Attack = 1,
	EJackDebugCommandForMonster__Appeal = 2,
	EJackDebugCommandForMonster__Avoid = 3,
	EJackDebugCommandForMonster__Damage = 4,
	EJackDebugCommandForMonster__Sleep = 5,
	EJackDebugCommandForMonster__Paralysis = 6,
	EJackDebugCommandForMonster__Korobi = 7,
	EJackDebugCommandForMonster__Laugh = 8,
	EJackDebugCommandForMonster__MontagePlay = 9,
	EJackDebugCommandForMonster__Dead = 10,
	EJackDebugCommandForMonster__RecoverToIdle = 11,
	EJackDebugCommandForMonster__LieInWait = 12,
	EJackDebugCommandForMonster__Raid = 13,
	EJackDebugCommandForMonster__Advent = 14,
	EJackDebugCommandForMonster__Retreat = 15,
	EJackDebugCommandForMonster__Rove = 16,
	EJackDebugCommandForMonster__Deactive = 17,
	EJackDebugCommandForMonster__SpecialMove = 18,
	EJackDebugCommandForMonster__ToIdle = 19,
	EJackDebugCommandForMonster__MAX = 20
};


// Enum JackGame.EJackMonsterAttitudeControlSetting
enum class EJackMonsterAttitudeControlSetting : uint8_t
{
	EJackMonsterAttitudeControlSetting__Always = 0,
	EJackMonsterAttitudeControlSetting__FieldOnly = 1,
	EJackMonsterAttitudeControlSetting__BattleOnly = 2,
	EJackMonsterAttitudeControlSetting__MAX = 3
};


// Enum JackGame.EJackPopDistanceEvaluation
enum class EJackPopDistanceEvaluation : uint8_t
{
	EJackPopDistanceEvaluation__None = 0,
	EJackPopDistanceEvaluation__Pop = 1,
	EJackPopDistanceEvaluation__Active = 2,
	EJackPopDistanceEvaluation__Visible = 3,
	EJackPopDistanceEvaluation__EJackPopDistanceEvaluation_MAX = 4
};


// Enum JackGame.EJackMusicBGMVolumeType
enum class EJackMusicBGMVolumeType : uint8_t
{
	EJackMusicBGMVolumeType__JP3DGoldVolume = 0,
	EJackMusicBGMVolumeType__JP3DOrcheVolume = 1,
	EJackMusicBGMVolumeType__NE3DGoldVolume = 2,
	EJackMusicBGMVolumeType__NE3DOrcheVolume = 3,
	EJackMusicBGMVolumeType__EJackMusicBGMVolumeType_MAX = 4
};


// Enum JackGame.EJackMusicContextState
enum class EJackMusicContextState : uint8_t
{
	EJackMusicContextState__Initial = 0,
	EJackMusicContextState__LoadingAsset = 1,
	EJackMusicContextState__ReadyToStart = 2,
	EJackMusicContextState__Pregap = 3,
	EJackMusicContextState__Playing = 4,
	EJackMusicContextState__StopFadeOut = 5,
	EJackMusicContextState__Postgap = 6,
	EJackMusicContextState__Stopped = 7,
	EJackMusicContextState__EJackMusicContextState_MAX = 8
};


// Enum JackGame.EJackOddEffectFacialFlag
enum class EJackOddEffectFacialFlag : uint8_t
{
	EJackOddEffectFacialFlag__InvalidLookAt = 0,
	EJackOddEffectFacialFlag__MAX  = 1
};


// Enum JackGame.EJackOddEffectMotionFlag
enum class EJackOddEffectMotionFlag : uint8_t
{
	EJackOddEffectMotionFlag__InvalidWeaponDisplay = 0,
	EJackOddEffectMotionFlag__InvalidLookAt = 1,
	EJackOddEffectMotionFlag__InvalidOddEffectFacial = 2,
	EJackOddEffectMotionFlag__EndSectionSkipEnable = 3,
	EJackOddEffectMotionFlag__MAX  = 4
};


// Enum JackGame.EJackOddEffectConditionType
enum class EJackOddEffectConditionType : uint8_t
{
	EJackOddEffectConditionType__None = 0,
	EJackOddEffectConditionType__Good = 1,
	EJackOddEffectConditionType__Bad = 2,
	EJackOddEffectConditionType__MAX = 3
};


// Enum JackGame.EJackOddEffectVoiceCategory
enum class EJackOddEffectVoiceCategory : uint8_t
{
	EJackOddEffectVoiceCategory__None = 0,
	EJackOddEffectVoiceCategory__Set = 1,
	EJackOddEffectVoiceCategory__Clear = 2,
	EJackOddEffectVoiceCategory__MAX = 3
};


// Enum JackGame.EJackOddEffectEffectCategory
enum class EJackOddEffectEffectCategory : uint8_t
{
	EJackOddEffectEffectCategory__None = 0,
	EJackOddEffectEffectCategory__Set = 1,
	EJackOddEffectEffectCategory__Invoke = 2,
	EJackOddEffectEffectCategory__Clear = 3,
	EJackOddEffectEffectCategory__MAX = 4
};


// Enum JackGame.EJackOddEffectTextType
enum class EJackOddEffectTextType : uint8_t
{
	EJackOddEffectTextType__None   = 0,
	EJackOddEffectTextType__OddEffectName = 1,
	EJackOddEffectTextType__OddEffectSetumei = 2,
	EJackOddEffectTextType__SetSuccess = 3,
	EJackOddEffectTextType__SetFail = 4,
	EJackOddEffectTextType__SetFail_Overlap = 5,
	EJackOddEffectTextType__Clear  = 6,
	EJackOddEffectTextType__Invoke = 7,
	EJackOddEffectTextType__MAX    = 8
};


// Enum JackGame.EJackOddEffectApply
enum class EJackOddEffectApply : uint8_t
{
	EJackOddEffectApply__None      = 0,
	EJackOddEffectApply__ParamAdd  = 1,
	EJackOddEffectApply__ParamSet  = 2,
	EJackOddEffectApply__ParamSetPer = 3,
	EJackOddEffectApply__Dot       = 4,
	EJackOddEffectApply__MAX       = 5
};


// Enum JackGame.EJackOddEffectInvokeTiming
enum class EJackOddEffectInvokeTiming : uint8_t
{
	EJackOddEffectInvokeTiming__None = 0,
	EJackOddEffectInvokeTiming__BattleStart = 1,
	EJackOddEffectInvokeTiming__Kougeki = 2,
	EJackOddEffectInvokeTiming__KougekiMetal = 3,
	EJackOddEffectInvokeTiming__KougekiHikou = 4,
	EJackOddEffectInvokeTiming__Damage = 5,
	EJackOddEffectInvokeTiming__MAX = 6
};


// Enum JackGame.EJackOddEffectSlideRank
enum class EJackOddEffectSlideRank : uint8_t
{
	EJackOddEffectSlideRank__Minus2 = 0,
	EJackOddEffectSlideRank__Minus1 = 1,
	EJackOddEffectSlideRank__Zero  = 2,
	EJackOddEffectSlideRank__Plus1 = 3,
	EJackOddEffectSlideRank__Plus2 = 4,
	EJackOddEffectSlideRank__MAX   = 5
};


// Enum JackGame.EJackOddEffectOverwriteResultType
enum class EJackOddEffectOverwriteResultType : uint8_t
{
	EJackOddEffectOverwriteResultType__None = 0,
	EJackOddEffectOverwriteResultType__Invalid = 1,
	EJackOddEffectOverwriteResultType__New = 2,
	EJackOddEffectOverwriteResultType__Overwrite = 3,
	EJackOddEffectOverwriteResultType__DepthUp = 4,
	EJackOddEffectOverwriteResultType__DepthUpInvalid = 5,
	EJackOddEffectOverwriteResultType__Limit = 6,
	EJackOddEffectOverwriteResultType__MAX = 7
};


// Enum JackGame.EJackOddEffectCalcParameterType
enum class EJackOddEffectCalcParameterType : uint8_t
{
	EJackOddEffectCalcParameterType__InvokeParameter_01 = 0,
	EJackOddEffectCalcParameterType__InvokeParameter_02 = 1,
	EJackOddEffectCalcParameterType__ReferenceParam = 2,
	EJackOddEffectCalcParameterType__MAX = 3
};


// Enum JackGame.EJackOddEffectCalcType
enum class EJackOddEffectCalcType : uint8_t
{
	EJackOddEffectCalcType__None   = 0,
	EJackOddEffectCalcType__Add    = 1,
	EJackOddEffectCalcType__Overwrite = 2,
	EJackOddEffectCalcType__ForceOverwrite = 3,
	EJackOddEffectCalcType__Slide  = 4,
	EJackOddEffectCalcType__MAX    = 5
};


// Enum JackGame.EJackOddEffectOverwriteType
enum class EJackOddEffectOverwriteType : uint8_t
{
	EJackOddEffectOverwriteType__None = 0,
	EJackOddEffectOverwriteType__NotOverwrite = 1,
	EJackOddEffectOverwriteType__Overwrite = 2,
	EJackOddEffectOverwriteType__ForceOverwrite = 3,
	EJackOddEffectOverwriteType__Depth = 4,
	EJackOddEffectOverwriteType__MAX = 5
};


// Enum JackGame.EJackOddEffectClearReasonType
enum class EJackOddEffectClearReasonType : uint8_t
{
	EJackOddEffectClearReasonType__None = 0,
	EJackOddEffectClearReasonType__SetOddEffect = 1,
	EJackOddEffectClearReasonType__BattleEnd = 2,
	EJackOddEffectClearReasonType__MAX = 3
};


// Enum JackGame.EJackOddEffectReasonType
enum class EJackOddEffectReasonType : uint8_t
{
	EJackOddEffectReasonType__None = 0,
	EJackOddEffectReasonType__Debug = 1,
	EJackOddEffectReasonType__Action = 2,
	EJackOddEffectReasonType__ActionTemp = 3,
	EJackOddEffectReasonType__BattleStart = 4,
	EJackOddEffectReasonType__BattleSystem = 5,
	EJackOddEffectReasonType__WeaponR = 6,
	EJackOddEffectReasonType__WeaponL = 7,
	EJackOddEffectReasonType__Equipment = 8,
	EJackOddEffectReasonType__Blueprint = 9,
	EJackOddEffectReasonType__Share = 10,
	EJackOddEffectReasonType__Slide = 11,
	EJackOddEffectReasonType__Damage = 12,
	EJackOddEffectReasonType__Passive = 13,
	EJackOddEffectReasonType__PassiveTokugi = 14,
	EJackOddEffectReasonType__MAX  = 15
};


// Enum JackGame.EJackOddEffectCategoryType
enum class EJackOddEffectCategoryType : uint8_t
{
	EJackOddEffectCategoryType__None = 0,
	EJackOddEffectCategoryType__Sibou = 1,
	EJackOddEffectCategoryType__Nemuri = 2,
	EJackOddEffectCategoryType__Genwaku = 3,
	EJackOddEffectCategoryType__Mahi = 4,
	EJackOddEffectCategoryType__Doku = 5,
	EJackOddEffectCategoryType__Konran = 6,
	EJackOddEffectCategoryType__Miryou = 7,
	EJackOddEffectCategoryType__Noroi = 8,
	EJackOddEffectCategoryType__Fuuin = 9,
	EJackOddEffectCategoryType__Yasumi = 10,
	EJackOddEffectCategoryType__HazukasiiNoroi = 11,
	EJackOddEffectCategoryType__KougekiryokuHenka = 12,
	EJackOddEffectCategoryType__SyubiryokuHenka = 13,
	EJackOddEffectCategoryType__SubayasaHenka = 14,
	EJackOddEffectCategoryType__KiyousaHenka = 15,
	EJackOddEffectCategoryType__KougekiJumonHenka = 16,
	EJackOddEffectCategoryType__KaifukuJumonHenka = 17,
	EJackOddEffectCategoryType__JumonTaiseiHenka = 18,
	EJackOddEffectCategoryType__TateGuardHasseiHenka = 19,
	EJackOddEffectCategoryType__BukiGuardHasseiHenka = 20,
	EJackOddEffectCategoryType__MikawasiHenka = 21,
	EJackOddEffectCategoryType__MitoresaseHenka = 22,
	EJackOddEffectCategoryType__BreathHenka = 23,
	EJackOddEffectCategoryType__KaisinHenka = 24,
	EJackOddEffectCategoryType__BousouHenka = 25,
	EJackOddEffectCategoryType__OddEffectTaiseiHenka = 26,
	EJackOddEffectCategoryType__HonooTaiseiHenka = 27,
	EJackOddEffectCategoryType__KooriTaiseiHenka = 28,
	EJackOddEffectCategoryType__KazeTaiseiHenka = 29,
	EJackOddEffectCategoryType__KaminariTaiseiHenka = 30,
	EJackOddEffectCategoryType__TutiTaiseiHenka = 31,
	EJackOddEffectCategoryType__YamiTaiseiHenka = 32,
	EJackOddEffectCategoryType__HikariTaiseiHenka = 33,
	EJackOddEffectCategoryType__KyuusyuuTaiseiHenka = 34,
	EJackOddEffectCategoryType__ElementalTaiseiHenka = 35,
	EJackOddEffectCategoryType__Zone = 36,
	EJackOddEffectCategoryType__OddEffectMukou = 37,
	EJackOddEffectCategoryType__IkinokoriSeijo = 38,
	EJackOddEffectCategoryType__IkinokoriMegami = 39,
	EJackOddEffectCategoryType__AutoZaoriku = 40,
	EJackOddEffectCategoryType__AutoZaorikuBunny = 41,
	EJackOddEffectCategoryType__AutoHPKaifuku = 42,
	EJackOddEffectCategoryType__AutoMPKaifuku = 43,
	EJackOddEffectCategoryType__Senritu = 44,
	EJackOddEffectCategoryType__JumonHansya = 45,
	EJackOddEffectCategoryType__JumonMukou = 46,
	EJackOddEffectCategoryType__Asutoron = 47,
	EJackOddEffectCategoryType__DamageKanzenGuard = 48,
	EJackOddEffectCategoryType__ButuriKanzenGuard = 49,
	EJackOddEffectCategoryType__KaisinKanzenGuard = 50,
	EJackOddEffectCategoryType__DamageKeigen = 51,
	EJackOddEffectCategoryType__KougekiHPKaifuku = 52,
	EJackOddEffectCategoryType__KougekiMPKaifuku = 53,
	EJackOddEffectCategoryType__KougekiMPKyuusyuu = 54,
	EJackOddEffectCategoryType__RaceTokkouMPKyuusyuu = 55,
	EJackOddEffectCategoryType__MPSyouhiZero = 56,
	EJackOddEffectCategoryType__MPSyouhiZouka = 57,
	EJackOddEffectCategoryType__Counter = 58,
	EJackOddEffectCategoryType__GuardCounter = 59,
	EJackOddEffectCategoryType__ImmediatelyCounter = 60,
	EJackOddEffectCategoryType__Nioudati = 61,
	EJackOddEffectCategoryType__Kabau = 62,
	EJackOddEffectCategoryType__Kabawareru = 63,
	EJackOddEffectCategoryType__KabauCounter = 64,
	EJackOddEffectCategoryType__Ukenagasi = 65,
	EJackOddEffectCategoryType__AcrobatStar = 66,
	EJackOddEffectCategoryType__CharaKyoukaRenkei = 67,
	EJackOddEffectCategoryType__GenteiTokugi = 68,
	EJackOddEffectCategoryType__AttackJousyou = 69,
	EJackOddEffectCategoryType__Fuzai = 70,
	EJackOddEffectCategoryType__KaifukuKoukaGyakuten = 71,
	EJackOddEffectCategoryType__Zibaria = 72,
	EJackOddEffectCategoryType__ActionLearn = 73,
	EJackOddEffectCategoryType__Yamabiko = 74,
	EJackOddEffectCategoryType__NusumuUp = 75,
	EJackOddEffectCategoryType__JoutaihenkaUp = 76,
	EJackOddEffectCategoryType__DokuTaiseiHenka = 77,
	EJackOddEffectCategoryType__NemuriTaiseiHenka = 78,
	EJackOddEffectCategoryType__KonranTaiseiHenka = 79,
	EJackOddEffectCategoryType__MahiTaiseiHenka = 80,
	EJackOddEffectCategoryType__SokusiTaiseiHenka = 81,
	EJackOddEffectCategoryType__MiryouTaiseiHenka = 82,
	EJackOddEffectCategoryType__GenwakuTaiseiHenka = 83,
	EJackOddEffectCategoryType__NoroiTaiseiHenka = 84,
	EJackOddEffectCategoryType__MitoreruTaiseiHenka = 85,
	EJackOddEffectCategoryType__FuuinJumonTaiseiHenka = 86,
	EJackOddEffectCategoryType__FuuinTokugiTaiseiHenka = 87,
	EJackOddEffectCategoryType__YasumiObieTaiseiHenka = 88,
	EJackOddEffectCategoryType__YasumiKorobiTaiseiHenka = 89,
	EJackOddEffectCategoryType__YasumiPafupafuTaiseiHenka = 90,
	EJackOddEffectCategoryType__YasumiWaraiTaiseiHenka = 91,
	EJackOddEffectCategoryType__YasumiOdoriTaiseiHenka = 92,
	EJackOddEffectCategoryType__KougekiryokuDownTaiseiHenka = 93,
	EJackOddEffectCategoryType__SyubiryokuDownTaiseiHenka = 94,
	EJackOddEffectCategoryType__SubayasaDownTaiseiHenka = 95,
	EJackOddEffectCategoryType__KougekiJumonDownTaiseiHenka = 96,
	EJackOddEffectCategoryType__KaifukuJumonDownTaiseiHenka = 97,
	EJackOddEffectCategoryType__JumonSyubiDownTaiseiHenka = 98,
	EJackOddEffectCategoryType__ZokuseiDownTaiseiHenka = 99,
	EJackOddEffectCategoryType__TaiseiDownTaiseiHenka = 100,
	EJackOddEffectCategoryType__BadTaiseiHenka = 101,
	EJackOddEffectCategoryType__PreemptiveAttackUp = 102,
	EJackOddEffectCategoryType__HateHenka = 103,
	EJackOddEffectCategoryType__DropUp = 104,
	EJackOddEffectCategoryType__GoldUp = 105,
	EJackOddEffectCategoryType__ExpUp = 106,
	EJackOddEffectCategoryType__DropConfirm = 107,
	EJackOddEffectCategoryType__TuikaDamage = 108,
	EJackOddEffectCategoryType__FixCritical = 109,
	EJackOddEffectCategoryType__Bougyo = 110,
	EJackOddEffectCategoryType__Bunsin = 111,
	EJackOddEffectCategoryType__BiriBiriBarrier = 112,
	EJackOddEffectCategoryType__MAX = 113
};


// Enum JackGame.EJackClosePairingType
enum class EJackClosePairingType : uint8_t
{
	EJackClosePairingType__RemoveUserType = 0,
	EJackClosePairingType__RemoveControllerType = 1,
	EJackClosePairingType__MAX     = 2
};


// Enum JackGame.EJackPairingPhase
enum class EJackPairingPhase : uint8_t
{
	EJackPairingPhase__None        = 0,
	EJackPairingPhase__WaitPairingEvent = 1,
	EJackPairingPhase__RemoveController = 2,
	EJackPairingPhase__ChangedUser = 3,
	EJackPairingPhase__RestartGameFade = 4,
	EJackPairingPhase__RemovedXUser = 5,
	EJackPairingPhase__MAX         = 6
};


// Enum JackGame.EJackPhotoModeEmoteAnim
enum class EJackPhotoModeEmoteAnim : uint8_t
{
	EJackPhotoModeEmoteAnim__Emote_Wave = 0,
	EJackPhotoModeEmoteAnim__Emote_Greeting = 1,
	EJackPhotoModeEmoteAnim__Emote_Clap = 2,
	EJackPhotoModeEmoteAnim__Emote_Dance = 3,
	EJackPhotoModeEmoteAnim__Emote_LevelUp = 4,
	EJackPhotoModeEmoteAnim__Emote_Provoke = 5,
	EJackPhotoModeEmoteAnim__Emote_Joy = 6,
	EJackPhotoModeEmoteAnim__Emote_Angry = 7,
	EJackPhotoModeEmoteAnim__Emote_Cry = 8,
	EJackPhotoModeEmoteAnim__Emote_Point = 9,
	EJackPhotoModeEmoteAnim__Emote_Panic = 10,
	EJackPhotoModeEmoteAnim__Emote_Pose = 11,
	EJackPhotoModeEmoteAnim__Emote_Default = 12,
	EJackPhotoModeEmoteAnim__Emote_ExceptDefault = 13,
	EJackPhotoModeEmoteAnim__Emote_All = 14,
	EJackPhotoModeEmoteAnim__MAX   = 15
};


// Enum JackGame.EJackPlayerAnimInstanceStateMachineState
enum class EJackPlayerAnimInstanceStateMachineState : uint8_t
{
	EJackPlayerAnimInstanceStateMachineState__Unknown = 0,
	EJackPlayerAnimInstanceStateMachineState__ShootBowgun = 1,
	EJackPlayerAnimInstanceStateMachineState__EndShootBowgun = 2,
	EJackPlayerAnimInstanceStateMachineState__MAX = 3
};


// Enum JackGame.EJackPokerDoubleUpResult
enum class EJackPokerDoubleUpResult : uint8_t
{
	EJackPokerDoubleUpResult__WIN  = 0,
	EJackPokerDoubleUpResult__DRAW = 1,
	EJackPokerDoubleUpResult__LOSE = 2,
	EJackPokerDoubleUpResult__MAX  = 3
};


// Enum JackGame.EJackPlayerAnimBaseStateMachineMode
enum class EJackPlayerAnimBaseStateMachineMode : uint8_t
{
	EJackPlayerAnimBaseStateMachineMode__Default = 0,
	EJackPlayerAnimBaseStateMachineMode__Battle = 1,
	EJackPlayerAnimBaseStateMachineMode__Bowgun = 2,
	EJackPlayerAnimBaseStateMachineMode__MAX = 3
};


// Enum JackGame.EJackCameraLightControlPurpose
enum class EJackCameraLightControlPurpose : uint8_t
{
	EJackCameraLightControlPurpose__MiniGame = 0,
	EJackCameraLightControlPurpose__CutScene = 1,
	EJackCameraLightControlPurpose__Debug = 2,
	EJackCameraLightControlPurpose__MAX = 3
};


// Enum JackGame.EJackPropHiddenPurpose
enum class EJackPropHiddenPurpose : uint8_t
{
	EJackPropHiddenPurpose__Engine = 0,
	EJackPropHiddenPurpose__Owner  = 1,
	EJackPropHiddenPurpose__AnimNotify = 2,
	EJackPropHiddenPurpose__Matinee = 3,
	EJackPropHiddenPurpose__Battle = 4,
	EJackPropHiddenPurpose__Blueprint = 5,
	EJackPropHiddenPurpose__FieldAction = 6,
	EJackPropHiddenPurpose__PhotoMode = 7,
	EJackPropHiddenPurpose__AnimNotifyState = 8,
	EJackPropHiddenPurpose__MAX    = 9
};


// Enum JackGame.EJackRenkeiEndCamera
enum class EJackRenkeiEndCamera : uint8_t
{
	EJackRenkeiEndCamera__None     = 0,
	EJackRenkeiEndCamera__AutoFree = 1,
	EJackRenkeiEndCamera__Auto     = 2,
	EJackRenkeiEndCamera__MAX      = 3
};


// Enum JackGame.EJackRigidBodyControlPurpose
enum class EJackRigidBodyControlPurpose : uint8_t
{
	EJackRigidBodyControlPurpose__CutScene = 0,
	EJackRigidBodyControlPurpose__LOD = 1,
	EJackRigidBodyControlPurpose__MAX = 2
};


// Enum JackGame.EJackMiniGameRouletteBallState
enum class EJackMiniGameRouletteBallState : uint8_t
{
	EJackMiniGameRouletteBallState__Init = 0,
	EJackMiniGameRouletteBallState__UpdateAnimation = 1,
	EJackMiniGameRouletteBallState__Finished = 2,
	EJackMiniGameRouletteBallState__PocketInUpdate = 3,
	EJackMiniGameRouletteBallState__EndDemo = 4,
	EJackMiniGameRouletteBallState__End = 5,
	EJackMiniGameRouletteBallState__Max = 6
};


// Enum JackGame.EJackMiniGameRouletteAgingType
enum class EJackMiniGameRouletteAgingType : uint8_t
{
	EJackMiniGameRouletteAgingType__None = 0,
	EJackMiniGameRouletteAgingType__Random = 1,
	EJackMiniGameRouletteAgingType__Random10 = 2,
	EJackMiniGameRouletteAgingType__OneX36 = 3,
	EJackMiniGameRouletteAgingType__OneX3601 = 4,
	EJackMiniGameRouletteAgingType__Random_Num = 5,
	EJackMiniGameRouletteAgingType__OneX36_Num = 6,
	EJackMiniGameRouletteAgingType__MAX = 7
};


// Enum JackGame.EJackMiniGameRouletteTreasureCoin
enum class EJackMiniGameRouletteTreasureCoin : uint8_t
{
	EJackMiniGameRouletteTreasureCoin__Type01 = 0,
	EJackMiniGameRouletteTreasureCoin__Type02 = 1,
	EJackMiniGameRouletteTreasureCoin__Type03 = 2,
	EJackMiniGameRouletteTreasureCoin__Type04 = 3,
	EJackMiniGameRouletteTreasureCoin__MAX = 4
};


// Enum JackGame.EJackMiniGameRouletteEffect
enum class EJackMiniGameRouletteEffect : uint8_t
{
	EJackMiniGameRouletteEffect__None = 0,
	EJackMiniGameRouletteEffect__JackPot = 1,
	EJackMiniGameRouletteEffect__NearJackPot = 2,
	EJackMiniGameRouletteEffect__Other = 3,
	EJackMiniGameRouletteEffect__Max = 4
};


// Enum JackGame.EJackSlotLottey
enum class EJackSlotLottey : uint8_t
{
	EJackSlotLottey__None          = 0,
	EJackSlotLottey__Enable        = 1,
	EJackSlotLottey__Disable       = 2,
	EJackSlotLottey__EJackSlotLottey_MAX = 3
};


// Enum JackGame.EJackSoftBodyControlPurpose
enum class EJackSoftBodyControlPurpose : uint8_t
{
	EJackSoftBodyControlPurpose__CutScene = 0,
	EJackSoftBodyControlPurpose__LOD = 1,
	EJackSoftBodyControlPurpose__AnimationCurve = 2,
	EJackSoftBodyControlPurpose__MAX = 3
};


// Enum JackGame.EJackStoreResult
enum class EJackStoreResult : uint8_t
{
	EJackStoreResult__None         = 0,
	EJackStoreResult__OK           = 1,
	EJackStoreResult__Cancel       = 2,
	EJackStoreResult__Purchased    = 3,
	EJackStoreResult__Error        = 4,
	EJackStoreResult__EJackStoreResult_MAX = 5
};


// Enum JackGame.EJackNetworkCheckResult
enum class EJackNetworkCheckResult : uint8_t
{
	EJackNetworkCheckResult__None  = 0,
	EJackNetworkCheckResult__Checking = 1,
	EJackNetworkCheckResult__Login = 2,
	EJackNetworkCheckResult__Logout = 3,
	EJackNetworkCheckResult__NotFound = 4,
	EJackNetworkCheckResult__Failures = 5,
	EJackNetworkCheckResult__EJackNetworkCheckResult_MAX = 6
};


// Enum JackGame.EJackDLCIndex
enum class EJackDLCIndex : uint8_t
{
	EJackDLCIndex__VoiceDrama      = 0,
	EJackDLCIndex__MultiVoice      = 1,
	EJackDLCIndex__PresentItem_00  = 2,
	EJackDLCIndex__PresentItem_01  = 3,
	EJackDLCIndex__PresentItem_02  = 4,
	EJackDLCIndex__PresentItem_03  = 5,
	EJackDLCIndex__PresentItem_04  = 6,
	EJackDLCIndex__PresentItem_05  = 7,
	EJackDLCIndex__PresentItem_06  = 8,
	EJackDLCIndex__PresentItem_07  = 9,
	EJackDLCIndex__PresentItem_08  = 10,
	EJackDLCIndex__PresentItem_09  = 11,
	EJackDLCIndex__PresentItem     = 12,
	EJackDLCIndex__PresentItem01   = 13,
	EJackDLCIndex__PresentItem02   = 14,
	EJackDLCIndex__PresentItem03   = 15,
	EJackDLCIndex__PresentItem04   = 16,
	EJackDLCIndex__PresentItem05   = 17,
	EJackDLCIndex__PresentItem06   = 18,
	EJackDLCIndex__PresentItem07   = 19,
	EJackDLCIndex__PresentItem08   = 20,
	EJackDLCIndex__PresentItem09   = 21,
	EJackDLCIndex__MAX             = 22
};


// Enum JackGame.EJackDebugSettingInfoType
enum class EJackDebugSettingInfoType : uint8_t
{
	EJackDebugSettingInfoType__Debug_Enable = 0,
	EJackDebugSettingInfoType__Debug_LongerStringFlag = 1,
	EJackDebugSettingInfoType__Debug_Gender = 2,
	EJackDebugSettingInfoType__Debug_PlrNounFlag = 3,
	EJackDebugSettingInfoType__Debug_ProNounFlag = 4,
	EJackDebugSettingInfoType__Debug_VowelFlag = 5,
	EJackDebugSettingInfoType__Debug_LastIsSFlag = 6,
	EJackDebugSettingInfoType__Debug_SingleFlag = 7,
	EJackDebugSettingInfoType__Debug_SoloFlag = 8,
	EJackDebugSettingInfoType__Debug_ListFlag = 9,
	EJackDebugSettingInfoType__Debug_Patchim = 10,
	EJackDebugSettingInfoType__Debug_Num = 11,
	EJackDebugSettingInfoType__Debug_MAX = 12
};


// Enum JackGame.EJackErrorType
enum class EJackErrorType : uint8_t
{
	EJackErrorType__Error_None     = 0,
	EJackErrorType__Error_MacroDef = 1,
	EJackErrorType__Error_MacroEnd = 2,
	EJackErrorType__Error_MacroArgEnd = 3,
	EJackErrorType__Error_MacroArgNum = 4,
	EJackErrorType__Error_TagName  = 5,
	EJackErrorType__Error_TagEnd   = 6,
	EJackErrorType__Error_HangStart = 7,
	EJackErrorType__Error_HangEnd  = 8,
	EJackErrorType__Error_HangTying = 9,
	EJackErrorType__Error_Num      = 10,
	EJackErrorType__Error_MAX      = 11
};


// Enum JackGame.EJackKeyWordType
enum class EJackKeyWordType : uint8_t
{
	EJackKeyWordType__KeyWord_None = 0,
	EJackKeyWordType__KeyWord_Str  = 1,
	EJackKeyWordType__KeyWord_Tag  = 2,
	EJackKeyWordType__KeyWord_Macro = 3,
	EJackKeyWordType__KeyWord_MAX  = 4
};


// Enum JackGame.EJackTimeDilationMode
enum class EJackTimeDilationMode : uint8_t
{
	EJackTimeDilationMode__Multiply = 0,
	EJackTimeDilationMode__Minimum = 1,
	EJackTimeDilationMode__Maximum = 2,
	EJackTimeDilationMode__MAX     = 3
};


// Enum JackGame.EJackCameraSetteiKeyActionType
enum class EJackCameraSetteiKeyActionType : uint8_t
{
	EJackCameraSetteiKeyActionType__None = 0,
	EJackCameraSetteiKeyActionType__Neutral = 1,
	EJackCameraSetteiKeyActionType__Up = 2,
	EJackCameraSetteiKeyActionType__Right = 3,
	EJackCameraSetteiKeyActionType__Down = 4,
	EJackCameraSetteiKeyActionType__Left = 5,
	EJackCameraSetteiKeyActionType__NotDisp = 6,
	EJackCameraSetteiKeyActionType__MAX = 7
};


// Enum JackGame.EJackTenseiOperationType
enum class EJackTenseiOperationType : uint8_t
{
	EJackTenseiOperationType__None = 0,
	EJackTenseiOperationType__FriendJoin = 1,
	EJackTenseiOperationType__Action = 2,
	EJackTenseiOperationType__Item = 3,
	EJackTenseiOperationType__RecipeBook = 4,
	EJackTenseiOperationType__UmaRace = 5,
	EJackTenseiOperationType__MAX  = 6
};


// Enum JackGame.EJackPatchimType
enum class EJackPatchimType : uint8_t
{
	EJackPatchimType__No           = 0,
	EJackPatchimType__Yes          = 1,
	EJackPatchimType__Rieul        = 2,
	EJackPatchimType__MAX          = 3
};


// Enum JackGame.EJackGermanCaseType
enum class EJackGermanCaseType : uint8_t
{
	EJackGermanCaseType__Case      = 0,
	EJackGermanCaseType__Case01    = 1,
	EJackGermanCaseType__Case02    = 2,
	EJackGermanCaseType__Case03    = 3,
	EJackGermanCaseType__Case_MAX  = 4
};


// Enum JackGame.EJackGermanRatingType
enum class EJackGermanRatingType : uint8_t
{
	EJackGermanRatingType__RatingDef = 0,
	EJackGermanRatingType__RatingInDef = 1,
	EJackGermanRatingType__RatingNum = 2,
	EJackGermanRatingType__EJackGermanRatingType_MAX = 3
};


// Enum JackGame.EJackGermanSectionType
enum class EJackGermanSectionType : uint8_t
{
	EJackGermanSectionType__SectionNoun = 0,
	EJackGermanSectionType__SectionArticle = 1,
	EJackGermanSectionType__SectionNum = 2,
	EJackGermanSectionType__EJackGermanSectionType_MAX = 3
};


// Enum JackGame.EJackTagCategory
enum class EJackTagCategory : uint8_t
{
	EJackTagCategory__TagCategory_None = 0,
	EJackTagCategory__TagCategoryNoun_EventBattle = 1,
	EJackTagCategory__TagCategoryNoun_Monster = 2,
	EJackTagCategory__TagCategoryNoun_MonsterType = 3,
	EJackTagCategory__TagCategoryNoun_Character = 4,
	EJackTagCategory__TagCategoryNoun_Caster = 5,
	EJackTagCategory__TagCategoryNoun_Target = 6,
	EJackTagCategory__TagCategoryNoun_Action = 7,
	EJackTagCategory__TagCategoryNoun_SkillLine = 8,
	EJackTagCategory__TagCategoryNoun_Renkei = 9,
	EJackTagCategory__TagCategoryNoun_WeaponType = 10,
	EJackTagCategory__TagCategoryNoun_EquipParts = 11,
	EJackTagCategory__TagCategoryNoun_Status = 12,
	EJackTagCategory__TagCategoryNoun_Item = 13,
	EJackTagCategory__TagCategoryNoun_ItemCategory = 14,
	EJackTagCategory__TagCategoryNoun_ItemUnit = 15,
	EJackTagCategory__TagCategoryNoun_ItemConjunction = 16,
	EJackTagCategory__TagCategoryNoun_ItemSpace = 17,
	EJackTagCategory__TagCategoryNoun_ItemHalfSpace = 18,
	EJackTagCategory__TagCategoryNoun_ItemStoreTarget = 19,
	EJackTagCategory__TagCategoryNoun_ItemRare = 20,
	EJackTagCategory__TagCategoryNoun_Bag = 21,
	EJackTagCategory__TagCategoryNoun_Weather = 22,
	EJackTagCategory__TagCategoryNoun_Field = 23,
	EJackTagCategory__TagCategoryNoun_Restart = 24,
	EJackTagCategory__TagCategoryNoun_RuraPoint = 25,
	EJackTagCategory__TagCategoryNoun_Place = 26,
	EJackTagCategory__TagCategoryNoun_Altar = 27,
	EJackTagCategory__TagCategoryNoun_Quest = 28,
	EJackTagCategory__TagCategoryNoun_MeosiMonster = 29,
	EJackTagCategory__TagCategoryNoun_MeosiItem = 30,
	EJackTagCategory__TagCategoryNoun_PokerHand = 31,
	EJackTagCategory__TagCategoryNoun_UmaRaceRank = 32,
	EJackTagCategory__TagCategoryNoun_FusigikajiCategory = 33,
	EJackTagCategory__TagCategoryNoun_FusigikajiTokugi = 34,
	EJackTagCategory__TagCategoryNoun_Syuuren = 35,
	EJackTagCategory__TagCategoryNoun_ShibariPlay = 36,
	EJackTagCategory__TagCategoryNumeral_Item = 37,
	EJackTagCategory__TagCategoryNumeral_Member = 38,
	EJackTagCategory__TagCategoryNumeral_Exp = 39,
	EJackTagCategory__TagCategoryNumeral_Level = 40,
	EJackTagCategory__TagCategoryNumeral_SkillPoint = 41,
	EJackTagCategory__TagCategoryNumeral_Seed = 42,
	EJackTagCategory__TagCategoryNumeral_Tikara = 43,
	EJackTagCategory__TagCategoryNumeral_Minomamori = 44,
	EJackTagCategory__TagCategoryNumeral_Subayasa = 45,
	EJackTagCategory__TagCategoryNumeral_Kiyousa = 46,
	EJackTagCategory__TagCategoryNumeral_Miryoku = 47,
	EJackTagCategory__TagCategoryNumeral_Gold = 48,
	EJackTagCategory__TagCategoryNumeral_Damage = 49,
	EJackTagCategory__TagCategoryNumeral_Turn = 50,
	EJackTagCategory__TagCategoryNumeral_Treasure = 51,
	EJackTagCategory__TagCategoryNumeral_FieldTarget = 52,
	EJackTagCategory__TagCategoryNumeral_Minute = 53,
	EJackTagCategory__TagCategoryNumeral_RetryItem = 54,
	EJackTagCategory__TagCategoryNumeral_BlacksmithLevel = 55,
	EJackTagCategory__TagCategoryNumeral_UpCp = 56,
	EJackTagCategory__TagCategoryNumeral_Coin = 57,
	EJackTagCategory__TagCategoryNumeral_DoubleUp = 58,
	EJackTagCategory__TagCategoryNumeral_Card = 59,
	EJackTagCategory__TagCategoryNumeral_Roulette = 60,
	EJackTagCategory__TagCategoryNumeral_MedalSpin = 61,
	EJackTagCategory__TagCategoryNumeral_FleeSpin = 62,
	EJackTagCategory__TagCategoryNumeral_Game = 63,
	EJackTagCategory__TagCategoryNumeral_Setting = 64,
	EJackTagCategory__TagCategoryNumeral_Slotblock = 65,
	EJackTagCategory__TagCategoryNumeral_Medal = 66,
	EJackTagCategory__TagCategoryNumeral_Stamp = 67,
	EJackTagCategory__TagCategoryNumeral_Save = 68,
	EJackTagCategory__TagCategoryNumeral_Playtime = 69,
	EJackTagCategory__TagCategoryNumeral_MonsterQuantity = 70,
	EJackTagCategory__TagCategoryNumeral_MpRecovery = 71,
	EJackTagCategory__TagCategoryNumeral_TargetValue = 72,
	EJackTagCategory__TagCategoryNumeral_TargetNumber = 73,
	EJackTagCategory__TagCategoryNumeral_JumonNumber = 74,
	EJackTagCategory__TagCategoryFix_Player = 75,
	EJackTagCategory__TagCategoryFix_Players = 76,
	EJackTagCategory__TagCategoryFix_ControlledCharacter = 77,
	EJackTagCategory__TagCategoryFix_ControlledCharacters = 78,
	EJackTagCategory__TagCategoryFix_Gold = 79,
	EJackTagCategory__TagCategoryFix_Medal = 80,
	EJackTagCategory__TagCategoryFix_Coin = 81,
	EJackTagCategory__EJackTagCategory_MAX = 82
};


// Enum JackGame.EJackTagReferType
enum class EJackTagReferType : uint8_t
{
	EJackTagReferType__TagRefer_None = 0,
	EJackTagReferType__TagRefer_Fix = 1,
	EJackTagReferType__TagRefer_OutSide_Member = 2,
	EJackTagReferType__TagRefer_Noun = 3,
	EJackTagReferType__TagRefer_Numeral = 4,
	EJackTagReferType__TagRefer_List = 5,
	EJackTagReferType__TagRefer_MAX = 6
};


// Enum JackGame.EJackHangType
enum class EJackHangType : uint8_t
{
	EJackHangType__Hang_None       = 0,
	EJackHangType__Hang_Left       = 1,
	EJackHangType__Hang_Right      = 2,
	EJackHangType__Hang_MAX        = 3
};


// Enum JackGame.EJackMacroType
enum class EJackMacroType : uint8_t
{
	EJackMacroType__Macro_None     = 0,
	EJackMacroType__Macro_Normal   = 1,
	EJackMacroType__Macro_HR_Tag   = 2,
	EJackMacroType__Macro_HR_Mac   = 3,
	EJackMacroType__Macro_HL_Tag   = 4,
	EJackMacroType__Macro_HL_Mac   = 5,
	EJackMacroType__Macro_TR_Noun  = 6,
	EJackMacroType__Macro_TR_Numeral = 7,
	EJackMacroType__Macro_MAX      = 8
};


// Enum JackGame.EJackSymbolType
enum class EJackSymbolType : uint8_t
{
	EJackSymbolType__Symbol_None   = 0,
	EJackSymbolType__Symbol_Start  = 1,
	EJackSymbolType__Symbol_End    = 2,
	EJackSymbolType__Symbol_MAX    = 3
};


// Enum JackGame.EJackProcessType
enum class EJackProcessType : uint8_t
{
	EJackProcessType__Proc_None    = 0,
	EJackProcessType__Proc_Replacement = 1,
	EJackProcessType__Proc_Cap     = 2,
	EJackProcessType__Proc_AllCap  = 3,
	EJackProcessType__Proc_SglM    = 4,
	EJackProcessType__Proc_SglF    = 5,
	EJackProcessType__Proc_SglN    = 6,
	EJackProcessType__Proc_Sgl     = 7,
	EJackProcessType__Proc_IndefSgl = 8,
	EJackProcessType__Proc_DefSgl  = 9,
	EJackProcessType__Proc_Plr     = 10,
	EJackProcessType__Proc_IndefPlr = 11,
	EJackProcessType__Proc_IndefPlrIT = 12,
	EJackProcessType__Proc_DefPlr  = 13,
	EJackProcessType__Proc_List    = 14,
	EJackProcessType__Proc_Gender  = 15,
	EJackProcessType__Proc_IfPr    = 16,
	EJackProcessType__Proc_IfPlrNoun = 17,
	EJackProcessType__Proc_IfProperNoun = 18,
	EJackProcessType__Proc_IfSing  = 19,
	EJackProcessType__Proc_IfFRSing = 20,
	EJackProcessType__Proc_IfSolo  = 21,
	EJackProcessType__Proc_IfVowel = 22,
	EJackProcessType__Proc_IfLastIsS = 23,
	EJackProcessType__Proc_IfList  = 24,
	EJackProcessType__Proc_IndefSgl_NOM = 25,
	EJackProcessType__Proc_IndefSgl_GEN = 26,
	EJackProcessType__Proc_IndefSgl_DAT = 27,
	EJackProcessType__Proc_IndefSgl_ACC = 28,
	EJackProcessType__Proc_DefSgl_NOM = 29,
	EJackProcessType__Proc_DefSgl_GEN = 30,
	EJackProcessType__Proc_DefSgl_DAT = 31,
	EJackProcessType__Proc_DefSgl_ACC = 32,
	EJackProcessType__Proc_IndefPlr_NOM = 33,
	EJackProcessType__Proc_IndefPlr_GEN = 34,
	EJackProcessType__Proc_IndefPlr_DAT = 35,
	EJackProcessType__Proc_IndefPlr_ACC = 36,
	EJackProcessType__Proc_DefPlr_NOM = 37,
	EJackProcessType__Proc_DefPlr_GEN = 38,
	EJackProcessType__Proc_DefPlr_DAT = 39,
	EJackProcessType__Proc_DefPlr_ACC = 40,
	EJackProcessType__Proc_IndefSgl_NOM_ART = 41,
	EJackProcessType__Proc_IndefSgl_GEN_ART = 42,
	EJackProcessType__Proc_IndefSgl_DAT_ART = 43,
	EJackProcessType__Proc_IndefSgl_ACC_ART = 44,
	EJackProcessType__Proc_DefSgl_NOM_ART = 45,
	EJackProcessType__Proc_DefSgl_GEN_ART = 46,
	EJackProcessType__Proc_DefSgl_DAT_ART = 47,
	EJackProcessType__Proc_DefSgl_ACC_ART = 48,
	EJackProcessType__Proc_IndefPlr_NOM_ART = 49,
	EJackProcessType__Proc_IndefPlr_GEN_ART = 50,
	EJackProcessType__Proc_IndefPlr_DAT_ART = 51,
	EJackProcessType__Proc_IndefPlr_ACC_ART = 52,
	EJackProcessType__Proc_DefPlr_NOM_ART = 53,
	EJackProcessType__Proc_DefPlr_GEN_ART = 54,
	EJackProcessType__Proc_DefPlr_DAT_ART = 55,
	EJackProcessType__Proc_DefPlr_ACC_ART = 56,
	EJackProcessType__Proc_PPN01   = 57,
	EJackProcessType__Proc_PPN02   = 58,
	EJackProcessType__Proc_IfTopRanker = 59,
	EJackProcessType__Proc_MAX     = 60
};


// Enum JackGame.EJackControllerParts
enum class EJackControllerParts : uint8_t
{
	EJackControllerParts__A        = 0,
	EJackControllerParts__B        = 1,
	EJackControllerParts__BJUMP    = 2,
	EJackControllerParts__X        = 3,
	EJackControllerParts__Y        = 4,
	EJackControllerParts__LT       = 5,
	EJackControllerParts__RT       = 6,
	EJackControllerParts__LSB      = 7,
	EJackControllerParts__RSB      = 8,
	EJackControllerParts__START    = 9,
	EJackControllerParts__PHOTO    = 10,
	EJackControllerParts__DPAD_U   = 11,
	EJackControllerParts__DPAD_D   = 12,
	EJackControllerParts__DPAD_L   = 13,
	EJackControllerParts__DPAD_R   = 14,
	EJackControllerParts__LB       = 15,
	EJackControllerParts__RB       = 16,
	EJackControllerParts__LS_U     = 17,
	EJackControllerParts__LS_D     = 18,
	EJackControllerParts__LS_L     = 19,
	EJackControllerParts__LS_R     = 20,
	EJackControllerParts__RS_U     = 21,
	EJackControllerParts__RS_D     = 22,
	EJackControllerParts__RS_L     = 23,
	EJackControllerParts__RS_R     = 24,
	EJackControllerParts__MAX      = 25
};


// Enum JackGame.EJackScreenPercentage
enum class EJackScreenPercentage : uint8_t
{
	EJackScreenPercentage__GameDefault = 0,
	EJackScreenPercentage__PartyTalk = 1,
	EJackScreenPercentage__PhotoMode = 2,
	EJackScreenPercentage__CutScene = 3,
	EJackScreenPercentage__Casino  = 4,
	EJackScreenPercentage__Custom  = 5,
	EJackScreenPercentage__MAX     = 6
};


// Enum JackGame.EJackPartySeizonJoutai
enum class EJackPartySeizonJoutai : uint8_t
{
	EJackPartySeizonJoutai__None   = 0,
	EJackPartySeizonJoutai__MainZenmetu = 1,
	EJackPartySeizonJoutai__AllZenmetu = 2,
	EJackPartySeizonJoutai__MAX    = 3
};


// Enum JackGame.EJackCSMapLevelStatus
enum class EJackCSMapLevelStatus : uint8_t
{
	EJackCSMapLevelStatus__None    = 0,
	EJackCSMapLevelStatus__Load    = 1,
	EJackCSMapLevelStatus__Visible = 2,
	EJackCSMapLevelStatus__Hidden  = 3,
	EJackCSMapLevelStatus__Unload  = 4,
	EJackCSMapLevelStatus__MAX     = 5
};


// Enum JackGame.EJackQuestRewardType
enum class EJackQuestRewardType : uint8_t
{
	EJackQuestRewardType__None     = 0,
	EJackQuestRewardType__Item     = 1,
	EJackQuestRewardType__Gold     = 2,
	EJackQuestRewardType__PowerUp  = 3,
	EJackQuestRewardType__MAX      = 4
};


// Enum JackGame.EJackProgression
enum class EJackProgression : uint8_t
{
	EJackProgression__NotListed    = 0,
	EJackProgression__Published    = 1,
	EJackProgression__Occurrence   = 2,
	EJackProgression__Inorder      = 3,
	EJackProgression__Active_010   = 4,
	EJackProgression__Active_020   = 5,
	EJackProgression__Active_030   = 6,
	EJackProgression__Active_040   = 7,
	EJackProgression__AchieveDisplayWait = 8,
	EJackProgression__Achieved     = 9,
	EJackProgression__Terminated   = 10,
	EJackProgression__MAX          = 11
};


// Enum JackGame.EJackAchievement
enum class EJackAchievement : uint8_t
{
	EJackAchievement__None         = 0,
	EJackAchievement__ItemGetAnyWhere = 1,
	EJackAchievement__ItemGetSpecificArea = 2,
	EJackAchievement__ItemGetFusigiKaji = 3,
	EJackAchievement__ItemGetSpecificMonster = 4,
	EJackAchievement__ItemGetSpecificTreasureBox = 5,
	EJackAchievement__ItemGetSpecificKiraKira = 6,
	EJackAchievement__MonsterKnockDown = 7,
	EJackAchievement__MonsterKnockDownRule = 8,
	EJackAchievement__ReadSpecificBook = 9,
	EJackAchievement__ReadSpecificSignboard = 10,
	EJackAchievement__EquipSpecific = 11,
	EJackAchievement__ShowSpecificEquipmentTwice = 12,
	EJackAchievement__ToreachSpecificPlace = 13,
	EJackAchievement__TalkSpecificNpc = 14,
	EJackAchievement__ToSpecifiedValue = 15,
	EJackAchievement__TalkAgainAfterSpecifiedTime = 16,
	EJackAchievement__SpecifiedCoordinates = 17,
	EJackAchievement__ItemGetIceax = 18,
	EJackAchievement__ItemGetSickle = 19,
	EJackAchievement__RouletteJackpot = 20,
	EJackAchievement__MAX          = 21
};


// Enum JackGame.EJackRestartProcessType
enum class EJackRestartProcessType : uint8_t
{
	EJackRestartProcessType__Pray  = 0,
	EJackRestartProcessType__Map   = 1,
	EJackRestartProcessType__Event = 2,
	EJackRestartProcessType__MAX   = 3
};


// Enum JackGame.EJackMapResourceLoadChannel
enum class EJackMapResourceLoadChannel : uint8_t
{
	EJackMapResourceLoadChannel__MiniMap = 0,
	EJackMapResourceLoadChannel__LocalMap = 1,
	EJackMapResourceLoadChannel__WorldMap = 2,
	EJackMapResourceLoadChannel__MAX = 3
};


// Enum JackGame.EJackMapNowLoadingStatus
enum class EJackMapNowLoadingStatus : uint8_t
{
	EJackMapNowLoadingStatus__None = 0,
	EJackMapNowLoadingStatus__Show = 1,
	EJackMapNowLoadingStatus__Hide = 2,
	EJackMapNowLoadingStatus__EJackMapNowLoadingStatus_MAX = 3
};


// Enum JackGame.EJackWorldMapState
enum class EJackWorldMapState : uint8_t
{
	EJackWorldMapState__Default    = 0,
	EJackWorldMapState__LocalMap   = 1,
	EJackWorldMapState__WorldMap   = 2,
	EJackWorldMapState__SeaMap     = 3,
	EJackWorldMapState__SkyMap     = 4,
	EJackWorldMapState__MapMenu    = 5,
	EJackWorldMapState__WorldMapMenu = 6,
	EJackWorldMapState__SeaSkyMapMenu = 7,
	EJackWorldMapState__Quest      = 8,
	EJackWorldMapState__Kira       = 9,
	EJackWorldMapState__Facility   = 10,
	EJackWorldMapState__Monster    = 11,
	EJackWorldMapState__Rura       = 12,
	EJackWorldMapState__DidRuraAction = 13,
	EJackWorldMapState__NeighborMap = 14,
	EJackWorldMapState__Zoom       = 15,
	EJackWorldMapState__ZoomModeTransition = 16,
	EJackWorldMapState__DisplayingOtherFloor = 17,
	EJackWorldMapState__MiniMap    = 18,
	EJackWorldMapState__MAX        = 19
};


// Enum JackGame.EJackUIMapZoomState
enum class EJackUIMapZoomState : uint8_t
{
	EJackUIMapZoomState__None      = 0,
	EJackUIMapZoomState__ZoomIn    = 1,
	EJackUIMapZoomState__Zoom      = 2,
	EJackUIMapZoomState__ZoomOut   = 3,
	EJackUIMapZoomState__MAX       = 4
};


// Enum JackGame.EJackMapTextItemDisplayMethodInNeighborMapMode
enum class EJackMapTextItemDisplayMethodInNeighborMapMode : uint8_t
{
	EJackMapTextItemDisplayMethodInNeighborMapMode__SameInCurrentMap = 0,
	EJackMapTextItemDisplayMethodInNeighborMapMode__Show = 1,
	EJackMapTextItemDisplayMethodInNeighborMapMode__Hide = 2,
	EJackMapTextItemDisplayMethodInNeighborMapMode__EJackMapTextItemDisplayMethodInNeighborMapMode_MAX = 3
};


// Enum JackGame.EJackMapTextItemControlMethod
enum class EJackMapTextItemControlMethod : uint8_t
{
	EJackMapTextItemControlMethod__None = 0,
	EJackMapTextItemControlMethod__DataTable = 1,
	EJackMapTextItemControlMethod__CurrentMapID = 2,
	EJackMapTextItemControlMethod__CurrentMapVolumeID = 3,
	EJackMapTextItemControlMethod__Anchorage = 4,
	EJackMapTextItemControlMethod__GameFlag = 5,
	EJackMapTextItemControlMethod__MAX = 6
};


// Enum JackGame.EJackMapTextItemDrawTarget
enum class EJackMapTextItemDrawTarget : uint8_t
{
	EJackMapTextItemDrawTarget__WorldMap = 0,
	EJackMapTextItemDrawTarget__MiniMap = 1,
	EJackMapTextItemDrawTarget__Both = 2,
	EJackMapTextItemDrawTarget__MAX = 3
};


// Enum JackGame.EJackMapPCMarkerDisplayMethod
enum class EJackMapPCMarkerDisplayMethod : uint8_t
{
	EJackMapPCMarkerDisplayMethod__Show = 0,
	EJackMapPCMarkerDisplayMethod__ShowJustCurrentFloor = 1,
	EJackMapPCMarkerDisplayMethod__Hide = 2,
	EJackMapPCMarkerDisplayMethod__MAX = 3
};


// Enum JackGame.EJackLocationNameDisplayMethod
enum class EJackLocationNameDisplayMethod : uint8_t
{
	EJackLocationNameDisplayMethod__None = 0,
	EJackLocationNameDisplayMethod__Show = 1,
	EJackLocationNameDisplayMethod__Hide = 2,
	EJackLocationNameDisplayMethod__Censored = 3,
	EJackLocationNameDisplayMethod__Grayout = 4,
	EJackLocationNameDisplayMethod__MAX = 5
};


// Enum JackGame.EJackFloorGroup
enum class EJackFloorGroup : uint8_t
{
	EJackFloorGroup__None          = 0,
	EJackFloorGroup__Group_A       = 1,
	EJackFloorGroup__Group_B       = 2,
	EJackFloorGroup__Group_C       = 3,
	EJackFloorGroup__Group_D       = 4,
	EJackFloorGroup__Group_E       = 5,
	EJackFloorGroup__Group_F       = 6,
	EJackFloorGroup__Group_G       = 7,
	EJackFloorGroup__Group_H       = 8,
	EJackFloorGroup__Group_I       = 9,
	EJackFloorGroup__Group_J       = 10,
	EJackFloorGroup__Group_K       = 11,
	EJackFloorGroup__Group_L       = 12,
	EJackFloorGroup__Group_M       = 13,
	EJackFloorGroup__Group_N       = 14,
	EJackFloorGroup__Group_O       = 15,
	EJackFloorGroup__Group_P       = 16,
	EJackFloorGroup__Group_Q       = 17,
	EJackFloorGroup__Group_R       = 18,
	EJackFloorGroup__Group_S       = 19,
	EJackFloorGroup__Group_T       = 20,
	EJackFloorGroup__Group_U       = 21,
	EJackFloorGroup__Group_V       = 22,
	EJackFloorGroup__Group_W       = 23,
	EJackFloorGroup__Group_X       = 24,
	EJackFloorGroup__Group_Y       = 25,
	EJackFloorGroup__Group_Z       = 26,
	EJackFloorGroup__Ido           = 27,
	EJackFloorGroup__MAX           = 28
};


// Enum JackGame.EJackFloorArea
enum class EJackFloorArea : uint8_t
{
	EJackFloorArea__Area           = 0,
	EJackFloorArea__Area01         = 1,
	EJackFloorArea__Area02         = 2,
	EJackFloorArea__Area03         = 3,
	EJackFloorArea__Area04         = 4,
	EJackFloorArea__Area05         = 5,
	EJackFloorArea__Area06         = 6,
	EJackFloorArea__Area07         = 7,
	EJackFloorArea__Area08         = 8,
	EJackFloorArea__Area09         = 9,
	EJackFloorArea__Area10         = 10,
	EJackFloorArea__Area11         = 11,
	EJackFloorArea__Area12         = 12,
	EJackFloorArea__Area13         = 13,
	EJackFloorArea__Area14         = 14,
	EJackFloorArea__Area15         = 15,
	EJackFloorArea__Area16         = 16,
	EJackFloorArea__Area17         = 17,
	EJackFloorArea__Area18         = 18,
	EJackFloorArea__Area19         = 19,
	EJackFloorArea__Area20         = 20,
	EJackFloorArea__Area21         = 21,
	EJackFloorArea__Area22         = 22,
	EJackFloorArea__Area23         = 23,
	EJackFloorArea__Area24         = 24,
	EJackFloorArea__Area25         = 25,
	EJackFloorArea__Area26         = 26,
	EJackFloorArea__Area27         = 27,
	EJackFloorArea__Area28         = 28,
	EJackFloorArea__Area29         = 29,
	EJackFloorArea__MAX            = 30
};


// Enum JackGame.EJackFloorLevel
enum class EJackFloorLevel : uint8_t
{
	EJackFloorLevel__None          = 0,
	EJackFloorLevel__F1            = 1,
	EJackFloorLevel__F2            = 2,
	EJackFloorLevel__F3            = 3,
	EJackFloorLevel__F4            = 4,
	EJackFloorLevel__F5            = 5,
	EJackFloorLevel__F6            = 6,
	EJackFloorLevel__F7            = 7,
	EJackFloorLevel__F8            = 8,
	EJackFloorLevel__F9            = 9,
	EJackFloorLevel__F10           = 10,
	EJackFloorLevel__F11           = 11,
	EJackFloorLevel__F12           = 12,
	EJackFloorLevel__F13           = 13,
	EJackFloorLevel__F14           = 14,
	EJackFloorLevel__F15           = 15,
	EJackFloorLevel__F16           = 16,
	EJackFloorLevel__F17           = 17,
	EJackFloorLevel__F18           = 18,
	EJackFloorLevel__F19           = 19,
	EJackFloorLevel__F20           = 20,
	EJackFloorLevel__F21           = 21,
	EJackFloorLevel__F22           = 22,
	EJackFloorLevel__F23           = 23,
	EJackFloorLevel__F24           = 24,
	EJackFloorLevel__F25           = 25,
	EJackFloorLevel__F26           = 26,
	EJackFloorLevel__F27           = 27,
	EJackFloorLevel__F28           = 28,
	EJackFloorLevel__F29           = 29,
	EJackFloorLevel__F30           = 30,
	EJackFloorLevel__F31           = 31,
	EJackFloorLevel__F32           = 32,
	EJackFloorLevel__F33           = 33,
	EJackFloorLevel__F34           = 34,
	EJackFloorLevel__F35           = 35,
	EJackFloorLevel__F36           = 36,
	EJackFloorLevel__F37           = 37,
	EJackFloorLevel__F38           = 38,
	EJackFloorLevel__F39           = 39,
	EJackFloorLevel__F40           = 40,
	EJackFloorLevel__F41           = 41,
	EJackFloorLevel__F42           = 42,
	EJackFloorLevel__F43           = 43,
	EJackFloorLevel__F44           = 44,
	EJackFloorLevel__F45           = 45,
	EJackFloorLevel__F46           = 46,
	EJackFloorLevel__F47           = 47,
	EJackFloorLevel__F48           = 48,
	EJackFloorLevel__F49           = 49,
	EJackFloorLevel__F50           = 50,
	EJackFloorLevel__B1            = 51,
	EJackFloorLevel__B2            = 52,
	EJackFloorLevel__B3            = 53,
	EJackFloorLevel__B4            = 54,
	EJackFloorLevel__B5            = 55,
	EJackFloorLevel__B6            = 56,
	EJackFloorLevel__B7            = 57,
	EJackFloorLevel__B8            = 58,
	EJackFloorLevel__B9            = 59,
	EJackFloorLevel__B10           = 60,
	EJackFloorLevel__B11           = 61,
	EJackFloorLevel__B12           = 62,
	EJackFloorLevel__B13           = 63,
	EJackFloorLevel__B14           = 64,
	EJackFloorLevel__B15           = 65,
	EJackFloorLevel__B16           = 66,
	EJackFloorLevel__B17           = 67,
	EJackFloorLevel__B18           = 68,
	EJackFloorLevel__B19           = 69,
	EJackFloorLevel__B20           = 70,
	EJackFloorLevel__B21           = 71,
	EJackFloorLevel__B22           = 72,
	EJackFloorLevel__B23           = 73,
	EJackFloorLevel__B24           = 74,
	EJackFloorLevel__B25           = 75,
	EJackFloorLevel__B26           = 76,
	EJackFloorLevel__B27           = 77,
	EJackFloorLevel__B28           = 78,
	EJackFloorLevel__B29           = 79,
	EJackFloorLevel__B30           = 80,
	EJackFloorLevel__B31           = 81,
	EJackFloorLevel__B32           = 82,
	EJackFloorLevel__B33           = 83,
	EJackFloorLevel__B34           = 84,
	EJackFloorLevel__B35           = 85,
	EJackFloorLevel__B36           = 86,
	EJackFloorLevel__B37           = 87,
	EJackFloorLevel__B38           = 88,
	EJackFloorLevel__B39           = 89,
	EJackFloorLevel__B40           = 90,
	EJackFloorLevel__B41           = 91,
	EJackFloorLevel__B42           = 92,
	EJackFloorLevel__B43           = 93,
	EJackFloorLevel__B44           = 94,
	EJackFloorLevel__B45           = 95,
	EJackFloorLevel__B46           = 96,
	EJackFloorLevel__B47           = 97,
	EJackFloorLevel__B48           = 98,
	EJackFloorLevel__B49           = 99,
	EJackFloorLevel__B50           = 100,
	EJackFloorLevel__Invalid       = 101,
	EJackFloorLevel__MAX           = 102
};


// Enum JackGame.EJackMapFieldType
enum class EJackMapFieldType : uint8_t
{
	EJackMapFieldType__Kyoten      = 0,
	EJackMapFieldType__Dungeon     = 1,
	EJackMapFieldType__Field       = 2,
	EJackMapFieldType__Ido         = 3,
	EJackMapFieldType__SeaSky      = 4,
	EJackMapFieldType__WorldMap    = 5,
	EJackMapFieldType__MAX         = 6
};


// Enum JackGame.EJackMapInfoType
enum class EJackMapInfoType : uint8_t
{
	EJackMapInfoType__Usual        = 0,
	EJackMapInfoType__SLocationOnly = 1,
	EJackMapInfoType__NoMap        = 2,
	EJackMapInfoType__MAX          = 3
};


// Enum JackGame.EJackMapSymbol
enum class EJackMapSymbol : uint8_t
{
	EJackMapSymbol__None           = 0,
	EJackMapSymbol__Buki           = 1,
	EJackMapSymbol__Bougu          = 2,
	EJackMapSymbol__Dougu          = 3,
	EJackMapSymbol__Yadoya         = 4,
	EJackMapSymbol__Kyoukai        = 5,
	EJackMapSymbol__MegamizouD17   = 6,
	EJackMapSymbol__Sakaba         = 7,
	EJackMapSymbol__Ginkou         = 8,
	EJackMapSymbol__Blacksmith     = 9,
	EJackMapSymbol__Camp           = 10,
	EJackMapSymbol__Medal          = 11,
	EJackMapSymbol__HorseRace      = 12,
	EJackMapSymbol__Casino         = 13,
	EJackMapSymbol__CasinoCoin     = 14,
	EJackMapSymbol__CasinoKeihin   = 15,
	EJackMapSymbol__ScenarioGuide  = 16,
	EJackMapSymbol__QuestGuide     = 17,
	EJackMapSymbol__ActionGuide    = 18,
	EJackMapSymbol__DestinationGuide1 = 19,
	EJackMapSymbol__DestinationGuide2 = 20,
	EJackMapSymbol__HorseCall      = 21,
	EJackMapSymbol__Ido            = 22,
	EJackMapSymbol__YusyaNoSekihi  = 23,
	EJackMapSymbol__CurePoint      = 24,
	EJackMapSymbol__TaijuNoNe      = 25,
	EJackMapSymbol__TaijuNoNaegi   = 26,
	EJackMapSymbol__RuraPoint1     = 27,
	EJackMapSymbol__RuraPoint2     = 28,
	EJackMapSymbol__MapJumpPoint   = 29,
	EJackMapSymbol__MermaidHarpPoint = 30,
	EJackMapSymbol__LandingPoint1  = 31,
	EJackMapSymbol__LandingPoint2  = 32,
	EJackMapSymbol__Pier           = 33,
	EJackMapSymbol__GoldenIceberg  = 34,
	EJackMapSymbol__MagicDoor      = 35,
	EJackMapSymbol__LastDoor       = 36,
	EJackMapSymbol__S14            = 37,
	EJackMapSymbol__M14            = 38,
	EJackMapSymbol__D15            = 39,
	EJackMapSymbol__D17            = 40,
	EJackMapSymbol__KuroiTaiyou    = 41,
	EJackMapSymbol__SaikyouBoss    = 42,
	EJackMapSymbol__HorseRide      = 43,
	EJackMapSymbol__MonsterRide    = 44,
	EJackMapSymbol__Ship           = 45,
	EJackMapSymbol__Gondola        = 46,
	EJackMapSymbol__Castle         = 47,
	EJackMapSymbol__C01            = 48,
	EJackMapSymbol__D14            = 49,
	EJackMapSymbol__S11            = 50,
	EJackMapSymbol__Rubble         = 51,
	EJackMapSymbol__FloatingIsland = 52,
	EJackMapSymbol__KuroiKyutai    = 53,
	EJackMapSymbol__Cave           = 54,
	EJackMapSymbol__Delubrum       = 55,
	EJackMapSymbol__Tower          = 56,
	EJackMapSymbol__Village        = 57,
	EJackMapSymbol__Town           = 58,
	EJackMapSymbol__Kira1          = 59,
	EJackMapSymbol__Kira2          = 60,
	EJackMapSymbol__TimeZone_Daytime = 61,
	EJackMapSymbol__TimeZone_Night = 62,
	EJackMapSymbol__Weather_Sunny  = 63,
	EJackMapSymbol__Weather_Rain   = 64,
	EJackMapSymbol__Weather_Snow   = 65,
	EJackMapSymbol__PCMarker       = 66,
	EJackMapSymbol__PCFootmark     = 67,
	EJackMapSymbol__CustomTexture  = 68,
	EJackMapSymbol__Hidden         = 69,
	EJackMapSymbol__MAX            = 70
};


// Enum JackGame.EJackMapConditionType
enum class EJackMapConditionType : uint8_t
{
	EJackMapConditionType__None    = 0,
	EJackMapConditionType__InMap   = 1,
	EJackMapConditionType__NotInMap = 2,
	EJackMapConditionType__HaveVisited = 3,
	EJackMapConditionType__NotHaveVisited = 4,
	EJackMapConditionType__MAX     = 5
};


// Enum JackGame.EJackMapIDType
enum class EJackMapIDType : uint8_t
{
	EJackMapIDType__None           = 0,
	EJackMapIDType__MapID          = 1,
	EJackMapIDType__MapVolumeID    = 2,
	EJackMapIDType__MAX            = 3
};


// Enum JackGame.EJackGameFlagOperator
enum class EJackGameFlagOperator : uint8_t
{
	EJackGameFlagOperator__None    = 0,
	EJackGameFlagOperator__Equal   = 1,
	EJackGameFlagOperator__NotEqual = 2,
	EJackGameFlagOperator__IsTrue  = 3,
	EJackGameFlagOperator__IsNotTrue = 4,
	EJackGameFlagOperator__IsFalse = 5,
	EJackGameFlagOperator__IsNotFalse = 6,
	EJackGameFlagOperator__Not     = 7,
	EJackGameFlagOperator__MAX     = 8
};


// Enum JackGame.EJackGameFlagDataType
enum class EJackGameFlagDataType : uint8_t
{
	EJackGameFlagDataType__INVALID = 0,
	EJackGameFlagDataType__Bool    = 1,
	EJackGameFlagDataType__Int     = 2,
	EJackGameFlagDataType__Float   = 3,
	EJackGameFlagDataType__String  = 4,
	EJackGameFlagDataType__MAX     = 5
};


// Enum JackGame.EJackScenarioID
enum class EJackScenarioID : uint8_t
{
	EJackScenarioID__None          = 0,
	EJackScenarioID__A010          = 1,
	EJackScenarioID__A020          = 2,
	EJackScenarioID__A030          = 3,
	EJackScenarioID__A040          = 4,
	EJackScenarioID__A050          = 5,
	EJackScenarioID__A060          = 6,
	EJackScenarioID__A070          = 7,
	EJackScenarioID__A080          = 8,
	EJackScenarioID__A090          = 9,
	EJackScenarioID__A100          = 10,
	EJackScenarioID__A110          = 11,
	EJackScenarioID__A120          = 12,
	EJackScenarioID__A130          = 13,
	EJackScenarioID__A140          = 14,
	EJackScenarioID__A150          = 15,
	EJackScenarioID__A160          = 16,
	EJackScenarioID__A170          = 17,
	EJackScenarioID__A180          = 18,
	EJackScenarioID__S010          = 19,
	EJackScenarioID__S020          = 20,
	EJackScenarioID__S030          = 21,
	EJackScenarioID__S040          = 22,
	EJackScenarioID__S050          = 23,
	EJackScenarioID__B010          = 24,
	EJackScenarioID__B020          = 25,
	EJackScenarioID__B030          = 26,
	EJackScenarioID__B040          = 27,
	EJackScenarioID__B050          = 28,
	EJackScenarioID__B060          = 29,
	EJackScenarioID__B070          = 30,
	EJackScenarioID__B080          = 31,
	EJackScenarioID__B090          = 32,
	EJackScenarioID__B100          = 33,
	EJackScenarioID__B110          = 34,
	EJackScenarioID__B120          = 35,
	EJackScenarioID__B130          = 36,
	EJackScenarioID__B140          = 37,
	EJackScenarioID__B150          = 38,
	EJackScenarioID__B160          = 39,
	EJackScenarioID__B170          = 40,
	EJackScenarioID__C010          = 41,
	EJackScenarioID__C020          = 42,
	EJackScenarioID__C030          = 43,
	EJackScenarioID__C040          = 44,
	EJackScenarioID__C050          = 45,
	EJackScenarioID__C060          = 46,
	EJackScenarioID__C070          = 47,
	EJackScenarioID__C080          = 48,
	EJackScenarioID__C090          = 49,
	EJackScenarioID__C100          = 50,
	EJackScenarioID__C110          = 51,
	EJackScenarioID__C120          = 52,
	EJackScenarioID__C130          = 53,
	EJackScenarioID__C140          = 54,
	EJackScenarioID__C150          = 55,
	EJackScenarioID__C160          = 56,
	EJackScenarioID__C170          = 57,
	EJackScenarioID__C180          = 58,
	EJackScenarioID__C190          = 59,
	EJackScenarioID__C200          = 60,
	EJackScenarioID__C210          = 61,
	EJackScenarioID__C220          = 62,
	EJackScenarioID__C230          = 63,
	EJackScenarioID__C240          = 64,
	EJackScenarioID__C250          = 65,
	EJackScenarioID__C260          = 66,
	EJackScenarioID__C270          = 67,
	EJackScenarioID__C280          = 68,
	EJackScenarioID__C290          = 69,
	EJackScenarioID__C300          = 70,
	EJackScenarioID__Y010          = 71,
	EJackScenarioID__NA            = 72,
	EJackScenarioID__MAX           = 73
};


// Enum JackGame.EJackScenarioGroup
enum class EJackScenarioGroup : uint8_t
{
	EJackScenarioGroup__None       = 0,
	EJackScenarioGroup__A          = 1,
	EJackScenarioGroup__B          = 2,
	EJackScenarioGroup__C          = 3,
	EJackScenarioGroup__S          = 4,
	EJackScenarioGroup__MAX        = 5
};


// Enum JackGame.EJackEnlightenControlPurpose
enum class EJackEnlightenControlPurpose : uint8_t
{
	EJackEnlightenControlPurpose__Battle = 0,
	EJackEnlightenControlPurpose__CutScene = 1,
	EJackEnlightenControlPurpose__MAX = 2
};


// Enum JackGame.EJackUMGFieldActionSoundType
enum class EJackUMGFieldActionSoundType : uint8_t
{
	EJackUMGFieldActionSoundType__None = 0,
	EJackUMGFieldActionSoundType__Hoimi2 = 1,
	EJackUMGFieldActionSoundType__Zaoraru2 = 2,
	EJackUMGFieldActionSoundType__MAX = 3
};


// Enum JackGame.EJackLoadingScreenTips
enum class EJackLoadingScreenTips : uint8_t
{
	EJackLoadingScreenTips__Group  = 0,
	EJackLoadingScreenTips__Scenario = 1,
	EJackLoadingScreenTips__Level  = 2,
	EJackLoadingScreenTips__MAX    = 3
};


// Enum JackGame.EJackLoadingScreen
enum class EJackLoadingScreen : uint8_t
{
	EJackLoadingScreen__Startup    = 0,
	EJackLoadingScreen__TextOnly   = 1,
	EJackLoadingScreen__WithProgress = 2,
	EJackLoadingScreen__WithTips   = 3,
	EJackLoadingScreen__TextOnly_White = 4,
	EJackLoadingScreen__WithProgress_White = 5,
	EJackLoadingScreen__WithTips_White = 6,
	EJackLoadingScreen__Black      = 7,
	EJackLoadingScreen__White      = 8,
	EJackLoadingScreen__MAX        = 9
};


// Enum JackGame.EJackPartyTalkIdleMotion
enum class EJackPartyTalkIdleMotion : uint8_t
{
	EJackPartyTalkIdleMotion__Normal = 0,
	EJackPartyTalkIdleMotion__Serious = 1,
	EJackPartyTalkIdleMotion__Happy = 2,
	EJackPartyTalkIdleMotion__Angry = 3,
	EJackPartyTalkIdleMotion__Thinking = 4,
	EJackPartyTalkIdleMotion__Special = 5,
	EJackPartyTalkIdleMotion__Amnesia = 6,
	EJackPartyTalkIdleMotion__Reference = 7,
	EJackPartyTalkIdleMotion__MAX  = 8
};


// Enum JackGame.EJackRuraOpenFlag
enum class EJackRuraOpenFlag : uint8_t
{
	EJackRuraOpenFlag__Close       = 0,
	EJackRuraOpenFlag__OpenUsable  = 1,
	EJackRuraOpenFlag__OpenUnusable = 2,
	EJackRuraOpenFlag__MAX         = 3
};


// Enum JackGame.EJackMonsterEmotionIcon
enum class EJackMonsterEmotionIcon : uint8_t
{
	EJackMonsterEmotionIcon__Exclamation = 0,
	EJackMonsterEmotionIcon__Question = 1,
	EJackMonsterEmotionIcon__Angry = 2,
	EJackMonsterEmotionIcon__MAX   = 3
};


// Enum JackGame.EJackActionGuideControlPurpose
enum class EJackActionGuideControlPurpose : uint8_t
{
	EJackActionGuideControlPurpose__Gimmick = 0,
	EJackActionGuideControlPurpose__Interactor = 1,
	EJackActionGuideControlPurpose__InteractiveActorGroup = 2,
	EJackActionGuideControlPurpose__ActionCursor = 3,
	EJackActionGuideControlPurpose__Self = 4,
	EJackActionGuideControlPurpose__Others = 5,
	EJackActionGuideControlPurpose__Manager = 6,
	EJackActionGuideControlPurpose__MAX = 7
};


// Enum JackGame.EJackFukidasiDuration
enum class EJackFukidasiDuration : uint8_t
{
	EJackFukidasiDuration__Normal  = 0,
	EJackFukidasiDuration__Short   = 1,
	EJackFukidasiDuration__MAX     = 2
};


// Enum JackGame.EJackFukidasiType
enum class EJackFukidasiType : uint8_t
{
	EJackFukidasiType__Normal      = 0,
	EJackFukidasiType__MAX         = 1
};


// Enum JackGame.EJackTextType
enum class EJackTextType : uint8_t
{
	EJackTextType__None            = 0,
	EJackTextType__Serifu          = 1,
	EJackTextType__SerifuIE        = 2,
	EJackTextType__SerifuCS        = 3,
	EJackTextType__Fukidasi        = 4,
	EJackTextType__SystemMessage   = 5,
	EJackTextType__TenNoKoe        = 6,
	EJackTextType__Arasuji         = 7,
	EJackTextType__Caption         = 8,
	EJackTextType__PartyTalk       = 9,
	EJackTextType__TextPackCommon  = 10,
	EJackTextType__TextPackScenario = 11,
	EJackTextType__Reference       = 12,
	EJackTextType__NotExists       = 13,
	EJackTextType__MAX             = 14
};


// Enum JackGame.EJackTextCategory
enum class EJackTextCategory : uint8_t
{
	EJackTextCategory__Test        = 0,
	EJackTextCategory__Game        = 1,
	EJackTextCategory__Battle      = 2,
	EJackTextCategory__Menu        = 3,
	EJackTextCategory__System      = 4,
	EJackTextCategory__Fukidasi    = 5,
	EJackTextCategory__Guide       = 6,
	EJackTextCategory__MiniGame    = 7,
	EJackTextCategory__Localization = 8,
	EJackTextCategory__Shop        = 9,
	EJackTextCategory__Yadoya      = 10,
	EJackTextCategory__Ginkou      = 11,
	EJackTextCategory__Kyoukai     = 12,
	EJackTextCategory__CasinoCoin  = 13,
	EJackTextCategory__Medal       = 14,
	EJackTextCategory__TextPack    = 15,
	EJackTextCategory__IE          = 16,
	EJackTextCategory__CS          = 17,
	EJackTextCategory__FukidasiIE  = 18,
	EJackTextCategory__RESERVED_B  = 19,
	EJackTextCategory__RESERVED_C  = 20,
	EJackTextCategory__RESERVED_D  = 21,
	EJackTextCategory__RESERVED_E  = 22,
	EJackTextCategory__ReservedFF  = 23,
	EJackTextCategory__INVALID     = 24,
	EJackTextCategory__MAX         = 25
};


// Enum JackGame.EJackInputPriority
enum class EJackInputPriority : uint8_t
{
	EJackInputPriority__CutScene   = 0,
	EJackInputPriority__HUD        = 1,
	EJackInputPriority__NakamaKaiwa = 2,
	EJackInputPriority__EndingInput = 3,
	EJackInputPriority__DebugCS    = 4,
	EJackInputPriority__DebugCSExtra = 5,
	EJackInputPriority__DebugSimulation = 6,
	EJackInputPriority__MAX        = 7
};


// Enum JackGame.EJackUIKeyGroup
enum class EJackUIKeyGroup : uint8_t
{
	EJackUIKeyGroup__None          = 0,
	EJackUIKeyGroup__HardButton    = 1,
	EJackUIKeyGroup__HardCross     = 2,
	EJackUIKeyGroup__LogicalButton = 3,
	EJackUIKeyGroup__LogicalCross  = 4,
	EJackUIKeyGroup__HardLButton   = 5,
	EJackUIKeyGroup__HardRButton   = 6,
	EJackUIKeyGroup__MAX           = 7
};


// Enum JackGame.EJackStreamingStatus
enum class EJackStreamingStatus : uint8_t
{
	EJackStreamingStatus__Unloaded = 0,
	EJackStreamingStatus__UnloadedButStillAround = 1,
	EJackStreamingStatus__Loading  = 2,
	EJackStreamingStatus__Loaded   = 3,
	EJackStreamingStatus__MakingVisible = 4,
	EJackStreamingStatus__Visible  = 5,
	EJackStreamingStatus__Preloading = 6,
	EJackStreamingStatus__MAX      = 7
};


// Enum JackGame.EJackLevelStreamingRequest
enum class EJackLevelStreamingRequest : uint8_t
{
	EJackLevelStreamingRequest__Unload = 0,
	EJackLevelStreamingRequest__Load = 1,
	EJackLevelStreamingRequest__BlockLoad = 2,
	EJackLevelStreamingRequest__MAX = 3
};


// Enum JackGame.EJackTimeDilationPurpose
enum class EJackTimeDilationPurpose : uint8_t
{
	EJackTimeDilationPurpose__LVD  = 0,
	EJackTimeDilationPurpose__CutScene = 1,
	EJackTimeDilationPurpose__AnimNotify = 2,
	EJackTimeDilationPurpose__HitStop = 3,
	EJackTimeDilationPurpose__MAX  = 4
};


// Enum JackGame.EJackTutorialCategory
enum class EJackTutorialCategory : uint8_t
{
	EJackTutorialCategory__Basic   = 0,
	EJackTutorialCategory__Menu    = 1,
	EJackTutorialCategory__Field   = 2,
	EJackTutorialCategory__Battle  = 3,
	EJackTutorialCategory__Item    = 4,
	EJackTutorialCategory__Kaji    = 5,
	EJackTutorialCategory__MiniGame = 6,
	EJackTutorialCategory__All     = 7,
	EJackTutorialCategory__MAX     = 8
};


// Enum JackGame.EJackAchievementTiming
enum class EJackAchievementTiming : uint8_t
{
	EJackAchievementTiming__Playable = 0,
	EJackAchievementTiming__TokugiPanelOnly = 1,
	EJackAchievementTiming__MAX    = 2
};


// Enum JackGame.EJackAchievementCondition
enum class EJackAchievementCondition : uint8_t
{
	EJackAchievementCondition__AcquiredDirect = 0,
	EJackAchievementCondition__TokugiPanel_P001 = 1,
	EJackAchievementCondition__TokugiPanel_P002 = 2,
	EJackAchievementCondition__TokugiPanel_P003 = 3,
	EJackAchievementCondition__TokugiPanel_P004 = 4,
	EJackAchievementCondition__TokugiPanel_P005 = 5,
	EJackAchievementCondition__TokugiPanel_P006 = 6,
	EJackAchievementCondition__TokugiPanel_P007 = 7,
	EJackAchievementCondition__TokugiPanel_P008 = 8,
	EJackAchievementCondition__DefeatMonsterCount = 9,
	EJackAchievementCondition__DefeatMonsterCount_Metal = 10,
	EJackAchievementCondition__DefeatMonsterKind = 11,
	EJackAchievementCondition__BattleVictoryCount = 12,
	EJackAchievementCondition__UseTokugiCount = 13,
	EJackAchievementCondition__RenkeiUseCount = 14,
	EJackAchievementCondition__RenkeiUseKind = 15,
	EJackAchievementCondition__MonsterRenkeiExecuteKind = 16,
	EJackAchievementCondition__MonsterVehicleRideKind = 17,
	EJackAchievementCondition__BlowAwayMonsterCount = 18,
	EJackAchievementCondition__BattleCountBySwordAttack = 19,
	EJackAchievementCondition__AcquisitionItemKind = 20,
	EJackAchievementCondition__PossessionItemCount = 21,
	EJackAchievementCondition__TotalAcquisitionItemCount = 22,
	EJackAchievementCondition__UseItemCount = 23,
	EJackAchievementCondition__PossessionGold = 24,
	EJackAchievementCondition__TotalAcquisitionGold = 25,
	EJackAchievementCondition__AmountOfDeposit = 26,
	EJackAchievementCondition__CampCount = 27,
	EJackAchievementCondition__InnStayCount = 28,
	EJackAchievementCondition__ObjectDestructionCount = 29,
	EJackAchievementCondition__QuestClearCount = 30,
	EJackAchievementCondition__AchievementCount = 31,
	EJackAchievementCondition__LevelReached_P001 = 32,
	EJackAchievementCondition__LevelReached_P002 = 33,
	EJackAchievementCondition__LevelReached_P003 = 34,
	EJackAchievementCondition__LevelReached_P004 = 35,
	EJackAchievementCondition__LevelReached_P005 = 36,
	EJackAchievementCondition__LevelReached_P006 = 37,
	EJackAchievementCondition__LevelReached_P007 = 38,
	EJackAchievementCondition__LevelReached_P008 = 39,
	EJackAchievementCondition__FopperyEquip_P001 = 40,
	EJackAchievementCondition__FopperyEquip_P002 = 41,
	EJackAchievementCondition__FopperyEquip_P003 = 42,
	EJackAchievementCondition__FopperyEquip_P004 = 43,
	EJackAchievementCondition__FopperyEquip_P005 = 44,
	EJackAchievementCondition__FopperyEquip_P006 = 45,
	EJackAchievementCondition__FopperyEquip_P007 = 46,
	EJackAchievementCondition__FopperyEquip_P008 = 47,
	EJackAchievementCondition__FopperyEquip_ALL = 48,
	EJackAchievementCondition__MAX = 49
};


// Enum JackGame.EJackAchievementCategory
enum class EJackAchievementCategory : uint8_t
{
	EJackAchievementCategory__Scenario = 0,
	EJackAchievementCategory__Battle = 1,
	EJackAchievementCategory__Kazi = 2,
	EJackAchievementCategory__Casino = 3,
	EJackAchievementCategory__Item = 4,
	EJackAchievementCategory__Etc  = 5,
	EJackAchievementCategory__All  = 6,
	EJackAchievementCategory__MAX  = 7
};


// Enum JackGame.EJackAchievementRarity
enum class EJackAchievementRarity : uint8_t
{
	EJackAchievementRarity__Legend = 0,
	EJackAchievementRarity__Platinum = 1,
	EJackAchievementRarity__Gold   = 2,
	EJackAchievementRarity__MAX    = 3
};


// Enum JackGame.EJackTokugiPanelScenario
enum class EJackTokugiPanelScenario : uint8_t
{
	EJackTokugiPanelScenario__None = 0,
	EJackTokugiPanelScenario__P001 = 1,
	EJackTokugiPanelScenario__P00101 = 2,
	EJackTokugiPanelScenario__P00102 = 3,
	EJackTokugiPanelScenario__P00103 = 4,
	EJackTokugiPanelScenario__P00104 = 5,
	EJackTokugiPanelScenario__P002 = 6,
	EJackTokugiPanelScenario__P00201 = 7,
	EJackTokugiPanelScenario__P00202 = 8,
	EJackTokugiPanelScenario__P00203 = 9,
	EJackTokugiPanelScenario__P00204 = 10,
	EJackTokugiPanelScenario__P003 = 11,
	EJackTokugiPanelScenario__P00301 = 12,
	EJackTokugiPanelScenario__P00302 = 13,
	EJackTokugiPanelScenario__P00303 = 14,
	EJackTokugiPanelScenario__P00304 = 15,
	EJackTokugiPanelScenario__P004 = 16,
	EJackTokugiPanelScenario__P00401 = 17,
	EJackTokugiPanelScenario__P00402 = 18,
	EJackTokugiPanelScenario__P00403 = 19,
	EJackTokugiPanelScenario__P00404 = 20,
	EJackTokugiPanelScenario__P005 = 21,
	EJackTokugiPanelScenario__P00501 = 22,
	EJackTokugiPanelScenario__P00502 = 23,
	EJackTokugiPanelScenario__P00503 = 24,
	EJackTokugiPanelScenario__P00504 = 25,
	EJackTokugiPanelScenario__P006 = 26,
	EJackTokugiPanelScenario__P00601 = 27,
	EJackTokugiPanelScenario__P00602 = 28,
	EJackTokugiPanelScenario__P00603 = 29,
	EJackTokugiPanelScenario__P00604 = 30,
	EJackTokugiPanelScenario__P007 = 31,
	EJackTokugiPanelScenario__P00701 = 32,
	EJackTokugiPanelScenario__P00702 = 33,
	EJackTokugiPanelScenario__P00703 = 34,
	EJackTokugiPanelScenario__P00704 = 35,
	EJackTokugiPanelScenario__P008 = 36,
	EJackTokugiPanelScenario__P00801 = 37,
	EJackTokugiPanelScenario__P00802 = 38,
	EJackTokugiPanelScenario__P00803 = 39,
	EJackTokugiPanelScenario__P00804 = 40,
	EJackTokugiPanelScenario__MAX  = 41
};


// Enum JackGame.EJackSkillLine
enum class EJackSkillLine : uint8_t
{
	EJackSkillLine__None           = 0,
	EJackSkillLine__Ken            = 1,
	EJackSkillLine__Ryouteken      = 2,
	EJackSkillLine__Tanken         = 3,
	EJackSkillLine__Stick          = 4,
	EJackSkillLine__Tue            = 5,
	EJackSkillLine__Yari           = 6,
	EJackSkillLine__Ono            = 7,
	EJackSkillLine__Tume           = 8,
	EJackSkillLine__Muti           = 9,
	EJackSkillLine__Boomerang      = 10,
	EJackSkillLine__Kensin         = 11,
	EJackSkillLine__Yuusya         = 12,
	EJackSkillLine__Kamiwaza       = 13,
	EJackSkillLine__Tategoto       = 14,
	EJackSkillLine__Madousyo       = 15,
	EJackSkillLine__Kyokugei       = 16,
	EJackSkillLine__Otome          = 17,
	EJackSkillLine__Kisidou        = 18,
	EJackSkillLine__Satori         = 19,
	EJackSkillLine__Kakutou        = 20,
	EJackSkillLine__Oiroke         = 21,
	EJackSkillLine__Eiyuu          = 22,
	EJackSkillLine__Hakuai         = 23,
	EJackSkillLine__Tate           = 24,
	EJackSkillLine__YuusyaNoKen    = 25,
	EJackSkillLine__Other          = 26,
	EJackSkillLine__MAX            = 27
};


// Enum JackGame.EJackTokugiType
enum class EJackTokugiType : uint8_t
{
	EJackTokugiType__Jumon         = 0,
	EJackTokugiType__Active        = 1,
	EJackTokugiType__Passive       = 2,
	EJackTokugiType__MAX           = 3
};


// Enum JackGame.EJackMedal_StampPage
enum class EJackMedal_StampPage : uint8_t
{
	EJackMedal_StampPage__None     = 0,
	EJackMedal_StampPage__Page1    = 1,
	EJackMedal_StampPage__Page2    = 2,
	EJackMedal_StampPage__Page3    = 3,
	EJackMedal_StampPage__Page4    = 4,
	EJackMedal_StampPage__MAX      = 5
};


// Enum JackGame.EJackMedal_Trade
enum class EJackMedal_Trade : uint8_t
{
	EJackMedal_Trade__Stamp        = 0,
	EJackMedal_Trade__Exchange     = 1,
	EJackMedal_Trade__MAX          = 2
};


// Enum JackGame.EJackTreasureBoxPlacementCondition
enum class EJackTreasureBoxPlacementCondition : uint8_t
{
	EJackTreasureBoxPlacementCondition__Initial = 0,
	EJackTreasureBoxPlacementCondition__FlagReference = 1,
	EJackTreasureBoxPlacementCondition__MAX = 2
};


// Enum JackGame.EJackGettableCommonPurpose
enum class EJackGettableCommonPurpose : uint8_t
{
	EJackGettableCommonPurpose__BowgunTarget = 0,
	EJackGettableCommonPurpose__Etc = 1,
	EJackGettableCommonPurpose__All = 2,
	EJackGettableCommonPurpose__Undesignated = 3,
	EJackGettableCommonPurpose__MAX = 4
};


// Enum JackGame.EJackExchange
enum class EJackExchange : uint8_t
{
	EJackExchange__Unknown         = 0,
	EJackExchange__NoLimit         = 1,
	EJackExchange__OnlyOne         = 2,
	EJackExchange__MamonoNoLimit   = 3,
	EJackExchange__MamonoOnlyOne   = 4,
	EJackExchange__MAX             = 5
};


// Enum JackGame.EJackItem_Key
enum class EJackItem_Key : uint8_t
{
	EJackItem_Key__None            = 0,
	EJackItem_Key__MahouNoKagi     = 1,
	EJackItem_Key__SaigoNoKagi     = 2,
	EJackItem_Key__DerukadaruNoKagi = 3,
	EJackItem_Key__MAX             = 4
};


// Enum JackGame.EJackEquipmentMultiple
enum class EJackEquipmentMultiple : uint8_t
{
	EJackEquipmentMultiple__Unknown = 0,
	EJackEquipmentMultiple__NG     = 1,
	EJackEquipmentMultiple__OK     = 2,
	EJackEquipmentMultiple__SameClassificationOnly = 3,
	EJackEquipmentMultiple__DifferentClassificationOnly = 4,
	EJackEquipmentMultiple__MAX    = 5
};


// Enum JackGame.EJackItem_EquipmentSE
enum class EJackItem_EquipmentSE : uint8_t
{
	EJackItem_EquipmentSE__Unknown = 0,
	EJackItem_EquipmentSE__Mute    = 1,
	EJackItem_EquipmentSE__Default = 2,
	EJackItem_EquipmentSE__Metal   = 3,
	EJackItem_EquipmentSE__Cloth   = 4,
	EJackItem_EquipmentSE__MAX     = 5
};


// Enum JackGame.EJackItem_WeaponAttackAttribute
enum class EJackItem_WeaponAttackAttribute : uint8_t
{
	EJackItem_WeaponAttackAttribute__Unknown = 0,
	EJackItem_WeaponAttackAttribute__Honoo = 1,
	EJackItem_WeaponAttackAttribute__Koori = 2,
	EJackItem_WeaponAttackAttribute__Kaze = 3,
	EJackItem_WeaponAttackAttribute__Kaminari = 4,
	EJackItem_WeaponAttackAttribute__Tuti = 5,
	EJackItem_WeaponAttackAttribute__Yami = 6,
	EJackItem_WeaponAttackAttribute__Hikari = 7,
	EJackItem_WeaponAttackAttribute__Mu = 8,
	EJackItem_WeaponAttackAttribute__MAX = 9
};


// Enum JackGame.EJackItem_SellType
enum class EJackItem_SellType : uint8_t
{
	EJackItem_SellType__Unknown    = 0,
	EJackItem_SellType__NG         = 1,
	EJackItem_SellType__OK         = 2,
	EJackItem_SellType__NeedConfirmation1 = 3,
	EJackItem_SellType__NeedConfirmation2 = 4,
	EJackItem_SellType__MAX        = 5
};


// Enum JackGame.EJackItem_BagSave
enum class EJackItem_BagSave : uint8_t
{
	EJackItem_BagSave__Bag_Common_P001 = 0,
	EJackItem_BagSave__Bag_Common_P002 = 1,
	EJackItem_BagSave__Bag_Common_P005 = 2,
	EJackItem_BagSave__Bag_Common_P006 = 3,
	EJackItem_BagSave__Bag_Common_P007 = 4,
	EJackItem_BagSave__Bag_Equipment_P001 = 5,
	EJackItem_BagSave__Bag_Equipment_P002 = 6,
	EJackItem_BagSave__Bag_Equipment_P005 = 7,
	EJackItem_BagSave__Bag_Equipment_P006 = 8,
	EJackItem_BagSave__Bag_Equipment_P007 = 9,
	EJackItem_BagSave__Bag_Daizinamono_P001 = 10,
	EJackItem_BagSave__Bag_Daizinamono_P002 = 11,
	EJackItem_BagSave__Bag_Daizinamono_P005 = 12,
	EJackItem_BagSave__Bag_Daizinamono_P006 = 13,
	EJackItem_BagSave__Bag_Daizinamono_P007 = 14,
	EJackItem_BagSave__Bag_Exchange_P001 = 15,
	EJackItem_BagSave__Bag_Exchange_P002 = 16,
	EJackItem_BagSave__Bag_Exchange_P005 = 17,
	EJackItem_BagSave__Bag_Exchange_P006 = 18,
	EJackItem_BagSave__Bag_Exchange_P007 = 19,
	EJackItem_BagSave__MAX         = 20
};


// Enum JackGame.EJackSenreki_ItemCategory
enum class EJackSenreki_ItemCategory : uint8_t
{
	EJackSenreki_ItemCategory__Unknown = 0,
	EJackSenreki_ItemCategory__Buki = 1,
	EJackSenreki_ItemCategory__Bougu = 2,
	EJackSenreki_ItemCategory__Accessory = 3,
	EJackSenreki_ItemCategory__Dougu = 4,
	EJackSenreki_ItemCategory__Material = 5,
	EJackSenreki_ItemCategory__RecipeBook = 6,
	EJackSenreki_ItemCategory__Daizinamono = 7,
	EJackSenreki_ItemCategory__All = 8,
	EJackSenreki_ItemCategory__MAX = 9
};


// Enum JackGame.EJackNPCAttachmentType
enum class EJackNPCAttachmentType : uint8_t
{
	EJackNPCAttachmentType__VisibleDaytimeOnly = 0,
	EJackNPCAttachmentType__VisibleNightOnly = 1,
	EJackNPCAttachmentType__Visible = 2,
	EJackNPCAttachmentType__Invisible = 3,
	EJackNPCAttachmentType__EJackNPCAttachmentType_MAX = 4
};


// Enum JackGame.EJackNPCImportance
enum class EJackNPCImportance : uint8_t
{
	EJackNPCImportance__NotTalk    = 0,
	EJackNPCImportance__Normal     = 1,
	EJackNPCImportance__Quest      = 2,
	EJackNPCImportance__ScenarioGuide = 3,
	EJackNPCImportance__Nakama     = 4,
	EJackNPCImportance__EJackNPCImportance_MAX = 5
};


// Enum JackGame.EJackNPCTalkGazeMode
enum class EJackNPCTalkGazeMode : uint8_t
{
	EJackNPCTalkGazeMode__Turn     = 0,
	EJackNPCTalkGazeMode__LookAt1Bone = 1,
	EJackNPCTalkGazeMode__LookAt2Bone = 2,
	EJackNPCTalkGazeMode__TurnAndLookAt1Bone = 3,
	EJackNPCTalkGazeMode__TurnAndLookAt2Bone = 4,
	EJackNPCTalkGazeMode__Ignore   = 5,
	EJackNPCTalkGazeMode__EJackNPCTalkGazeMode_MAX = 6
};


// Enum JackGame.EJackNPCTalkMode
enum class EJackNPCTalkMode : uint8_t
{
	EJackNPCTalkMode__NotTalk      = 0,
	EJackNPCTalkMode__TalkStart    = 1,
	EJackNPCTalkMode__TalkSequence = 2,
	EJackNPCTalkMode__TalkEnd      = 3,
	EJackNPCTalkMode__EJackNPCTalkMode_MAX = 4
};


// Enum JackGame.EJackNPCInterruptAccept
enum class EJackNPCInterruptAccept : uint8_t
{
	EJackNPCInterruptAccept__Talk  = 0,
	EJackNPCInterruptAccept__PlayerAvoid = 1,
	EJackNPCInterruptAccept__EscapeFastMoving = 2,
	EJackNPCInterruptAccept__ReactionAroundPlayer = 3,
	EJackNPCInterruptAccept__StopAtPlayerForTalk = 4,
	EJackNPCInterruptAccept__Ignore = 5,
	EJackNPCInterruptAccept__Uso   = 6,
	EJackNPCInterruptAccept__EJackNPCInterruptAccept_MAX = 7
};


// Enum JackGame.EJackNPCReactionExternalTrigger
enum class EJackNPCReactionExternalTrigger : uint8_t
{
	EJackNPCReactionExternalTrigger__CrushObject = 0,
	EJackNPCReactionExternalTrigger__OpenCloset = 1,
	EJackNPCReactionExternalTrigger__OpenTreasureBox = 2,
	EJackNPCReactionExternalTrigger__MAX = 3
};


// Enum JackGame.EJackNPCType
enum class EJackNPCType : uint8_t
{
	EJackNPCType__N001             = 0,
	EJackNPCType__N002             = 1,
	EJackNPCType__N003             = 2,
	EJackNPCType__N004             = 3,
	EJackNPCType__N006             = 4,
	EJackNPCType__N007             = 5,
	EJackNPCType__N008             = 6,
	EJackNPCType__N009             = 7,
	EJackNPCType__N010             = 8,
	EJackNPCType__N011             = 9,
	EJackNPCType__N012             = 10,
	EJackNPCType__N013             = 11,
	EJackNPCType__N014             = 12,
	EJackNPCType__N015             = 13,
	EJackNPCType__N101             = 14,
	EJackNPCType__N102             = 15,
	EJackNPCType__N103             = 16,
	EJackNPCType__N109             = 17,
	EJackNPCType__N104             = 18,
	EJackNPCType__N105             = 19,
	EJackNPCType__N106             = 20,
	EJackNPCType__N107             = 21,
	EJackNPCType__N108             = 22,
	EJackNPCType__N201             = 23,
	EJackNPCType__N202             = 24,
	EJackNPCType__N203             = 25,
	EJackNPCType__N204             = 26,
	EJackNPCType__N205             = 27,
	EJackNPCType__A001             = 28,
	EJackNPCType__A002             = 29,
	EJackNPCType__A003             = 30,
	EJackNPCType__A004             = 31,
	EJackNPCType__A006             = 32,
	EJackNPCType__A007             = 33,
	EJackNPCType__A008             = 34,
	EJackNPCType__A013             = 35,
	EJackNPCType__A019             = 36,
	EJackNPCType__A020             = 37,
	EJackNPCType__A021             = 38,
	EJackNPCType__A023             = 39,
	EJackNPCType__A025             = 40,
	EJackNPCType__A026             = 41,
	EJackNPCType__A035             = 42,
	EJackNPCType__A036             = 43,
	EJackNPCType__A051             = 44,
	EJackNPCType__A052             = 45,
	EJackNPCType__M005             = 46,
	EJackNPCType__M014             = 47,
	EJackNPCType__M015             = 48,
	EJackNPCType__M022             = 49,
	EJackNPCType__M031             = 50,
	EJackNPCType__M034             = 51,
	EJackNPCType__M036             = 52,
	EJackNPCType__M043             = 53,
	EJackNPCType__M052             = 54,
	EJackNPCType__M057             = 55,
	EJackNPCType__M068             = 56,
	EJackNPCType__M112             = 57,
	EJackNPCType__M125             = 58,
	EJackNPCType__M152             = 59,
	EJackNPCType__M203             = 60,
	EJackNPCType__M504             = 61,
	EJackNPCType__M505             = 62,
	EJackNPCType__M515             = 63,
	EJackNPCType__M525             = 64,
	EJackNPCType__M526             = 65,
	EJackNPCType__M527             = 66,
	EJackNPCType__M530             = 67,
	EJackNPCType__M539             = 68,
	EJackNPCType__M543             = 69,
	EJackNPCType__M545             = 70,
	EJackNPCType__M548             = 71,
	EJackNPCType__M551             = 72,
	EJackNPCType__M560             = 73,
	EJackNPCType__M567             = 74,
	EJackNPCType__M572             = 75,
	EJackNPCType__MAX              = 76
};


// Enum JackGame.EJackSheatheStatus
enum class EJackSheatheStatus : uint8_t
{
	EJackSheatheStatus__Sheathe    = 0,
	EJackSheatheStatus__Unsheathe  = 1,
	EJackSheatheStatus__MAX        = 2
};


// Enum JackGame.EJackEquippedHand
enum class EJackEquippedHand : uint8_t
{
	EJackEquippedHand__Hand_L      = 0,
	EJackEquippedHand__Hand_R      = 1,
	EJackEquippedHand__MAX         = 2
};


// Enum JackGame.EJackWeapon
enum class EJackWeapon : uint8_t
{
	EJackWeapon__None              = 0,
	EJackWeapon__MAX               = 1
};


// Enum JackGame.EJackHitStopType
enum class EJackHitStopType : uint8_t
{
	EJackHitStopType__None         = 0,
	EJackHitStopType__SS           = 1,
	EJackHitStopType__S            = 2,
	EJackHitStopType__M            = 3,
	EJackHitStopType__L            = 4,
	EJackHitStopType__LL           = 5,
	EJackHitStopType__UN1          = 6,
	EJackHitStopType__UN2          = 7,
	EJackHitStopType__MAX          = 8
};


// Enum JackGame.EJackPlayerAIActionCategory
enum class EJackPlayerAIActionCategory : uint8_t
{
	EJackPlayerAIActionCategory__None = 0,
	EJackPlayerAIActionCategory__Attack = 1,
	EJackPlayerAIActionCategory__Spell = 2,
	EJackPlayerAIActionCategory__Skill = 3,
	EJackPlayerAIActionCategory__Renkei = 4,
	EJackPlayerAIActionCategory__Item = 5,
	EJackPlayerAIActionCategory__MAX = 6
};


// Enum JackGame.EJackPlayerAIActionControl
enum class EJackPlayerAIActionControl : uint8_t
{
	EJackPlayerAIActionControl__None = 0,
	EJackPlayerAIActionControl__Defense = 1,
	EJackPlayerAIActionControl__Attack = 2,
	EJackPlayerAIActionControl__AttackMp0 = 3,
	EJackPlayerAIActionControl__AttackNormal = 4,
	EJackPlayerAIActionControl__Heal = 5,
	EJackPlayerAIActionControl__HealMP = 6,
	EJackPlayerAIActionControl__Revive = 7,
	EJackPlayerAIActionControl__Cure = 8,
	EJackPlayerAIActionControl__AttackDeath = 9,
	EJackPlayerAIActionControl__Confuse = 10,
	EJackPlayerAIActionControl__Sleep = 11,
	EJackPlayerAIActionControl__SkipTurn = 12,
	EJackPlayerAIActionControl__Bewitching = 13,
	EJackPlayerAIActionControl__Charm = 14,
	EJackPlayerAIActionControl__SurvivalHp1 = 15,
	EJackPlayerAIActionControl__Zone = 16,
	EJackPlayerAIActionControl__Counter = 17,
	EJackPlayerAIActionControl__LadyFirst = 18,
	EJackPlayerAIActionControl__IceWave = 19,
	EJackPlayerAIActionControl__Steal = 20,
	EJackPlayerAIActionControl__Nioudati = 21,
	EJackPlayerAIActionControl__Kabau = 22,
	EJackPlayerAIActionControl__RunawayRateUp = 23,
	EJackPlayerAIActionControl__Doku = 24,
	EJackPlayerAIActionControl__Mahoton = 25,
	EJackPlayerAIActionControl__Megazaru = 26,
	EJackPlayerAIActionControl__Asutoron = 27,
	EJackPlayerAIActionControl__Mahokanta = 28,
	EJackPlayerAIActionControl__Zibaria = 29,
	EJackPlayerAIActionControl__DefenseUp = 30,
	EJackPlayerAIActionControl__DefenseDown = 31,
	EJackPlayerAIActionControl__AttackUp = 32,
	EJackPlayerAIActionControl__AttackDown = 33,
	EJackPlayerAIActionControl__SpeedUp = 34,
	EJackPlayerAIActionControl__SpeedDown = 35,
	EJackPlayerAIActionControl__SpellResistUp = 36,
	EJackPlayerAIActionControl__SpellResistDown = 37,
	EJackPlayerAIActionControl__AttackSpellUp = 38,
	EJackPlayerAIActionControl__HealSpellUp = 39,
	EJackPlayerAIActionControl__BlessResistUp = 40,
	EJackPlayerAIActionControl__AttributeUp = 41,
	EJackPlayerAIActionControl__MAX = 42
};


// Enum JackGame.EJackHitCameraShakePresetType
enum class EJackHitCameraShakePresetType : uint8_t
{
	EJackHitCameraShakePresetType__None = 0,
	EJackHitCameraShakePresetType__N_SS = 1,
	EJackHitCameraShakePresetType__N_S = 2,
	EJackHitCameraShakePresetType__N_M = 3,
	EJackHitCameraShakePresetType__N_L = 4,
	EJackHitCameraShakePresetType__N_LL = 5,
	EJackHitCameraShakePresetType__SS_SS = 6,
	EJackHitCameraShakePresetType__SS_S = 7,
	EJackHitCameraShakePresetType__SS_M = 8,
	EJackHitCameraShakePresetType__SS_L = 9,
	EJackHitCameraShakePresetType__SS_LL = 10,
	EJackHitCameraShakePresetType__S_S = 11,
	EJackHitCameraShakePresetType__S_M = 12,
	EJackHitCameraShakePresetType__S_L = 13,
	EJackHitCameraShakePresetType__S_LL = 14,
	EJackHitCameraShakePresetType__M_M = 15,
	EJackHitCameraShakePresetType__M_L = 16,
	EJackHitCameraShakePresetType__M_LL = 17,
	EJackHitCameraShakePresetType__L_L = 18,
	EJackHitCameraShakePresetType__L_LL = 19,
	EJackHitCameraShakePresetType__LL_LL = 20,
	EJackHitCameraShakePresetType__UN1 = 21,
	EJackHitCameraShakePresetType__UN2 = 22,
	EJackHitCameraShakePresetType__MAX = 23
};


// Enum JackGame.EJackPlayerAIFlowControl
enum class EJackPlayerAIFlowControl : uint8_t
{
	EJackPlayerAIFlowControl__None = 0,
	EJackPlayerAIFlowControl__Action = 1,
	EJackPlayerAIFlowControl__Add  = 2,
	EJackPlayerAIFlowControl__Select = 3,
	EJackPlayerAIFlowControl__End  = 4,
	EJackPlayerAIFlowControl__MAX  = 5
};


// Enum JackGame.EJackPlayerAIFlowJudge
enum class EJackPlayerAIFlowJudge : uint8_t
{
	EJackPlayerAIFlowJudge__AlwaysTrue = 0,
	EJackPlayerAIFlowJudge__CaseP001 = 1,
	EJackPlayerAIFlowJudge__CaseP002 = 2,
	EJackPlayerAIFlowJudge__CaseP003 = 3,
	EJackPlayerAIFlowJudge__CaseP004 = 4,
	EJackPlayerAIFlowJudge__CaseP005 = 5,
	EJackPlayerAIFlowJudge__CaseP006 = 6,
	EJackPlayerAIFlowJudge__CaseP007 = 7,
	EJackPlayerAIFlowJudge__CaseP008 = 8,
	EJackPlayerAIFlowJudge__EventBattle = 9,
	EJackPlayerAIFlowJudge__MonsterM716_E001_S01 = 10,
	EJackPlayerAIFlowJudge__MonsterM601_E001_S01 = 11,
	EJackPlayerAIFlowJudge__MonsterM602_E001_S01 = 12,
	EJackPlayerAIFlowJudge__MonsterM603_E001_S01 = 13,
	EJackPlayerAIFlowJudge__MonsterM605_E001_S01 = 14,
	EJackPlayerAIFlowJudge__MonsterM606_E001_S01 = 15,
	EJackPlayerAIFlowJudge__MonsterM607_E001_S01 = 16,
	EJackPlayerAIFlowJudge__MonsterM611_E001_S01 = 17,
	EJackPlayerAIFlowJudge__MonsterM615_E001_S01 = 18,
	EJackPlayerAIFlowJudge__MonsterM616_E001_S01 = 19,
	EJackPlayerAIFlowJudge__PlayerDeadNum = 20,
	EJackPlayerAIFlowJudge__Dying10Percent = 21,
	EJackPlayerAIFlowJudge__Dying20Percent = 22,
	EJackPlayerAIFlowJudge__Dying30Percent = 23,
	EJackPlayerAIFlowJudge__Dying40Percent = 24,
	EJackPlayerAIFlowJudge__Dying50Percent = 25,
	EJackPlayerAIFlowJudge__Dying60Percent = 26,
	EJackPlayerAIFlowJudge__Dying70Percent = 27,
	EJackPlayerAIFlowJudge__Dying80Percent = 28,
	EJackPlayerAIFlowJudge__Dying90Percent = 29,
	EJackPlayerAIFlowJudge__AbnormalVarious = 30,
	EJackPlayerAIFlowJudge__AbnormalDazzle = 31,
	EJackPlayerAIFlowJudge__AbnormalPoison = 32,
	EJackPlayerAIFlowJudge__AbnormalVenom = 33,
	EJackPlayerAIFlowJudge__EnemyWeak = 34,
	EJackPlayerAIFlowJudge__EnemyWeakMaybe = 35,
	EJackPlayerAIFlowJudge__EnemyMany = 36,
	EJackPlayerAIFlowJudge__EnemyStrong = 37,
	EJackPlayerAIFlowJudge__EnemyVeryStrong = 38,
	EJackPlayerAIFlowJudge__EnemyMetalExist = 39,
	EJackPlayerAIFlowJudge__EnableFubaha = 40,
	EJackPlayerAIFlowJudge__EnableMahoton = 41,
	EJackPlayerAIFlowJudge__EnableManusa = 42,
	EJackPlayerAIFlowJudge__EnableRukani = 43,
	EJackPlayerAIFlowJudge__EnableMagicbarrier = 44,
	EJackPlayerAIFlowJudge__EnableBikiruto = 45,
	EJackPlayerAIFlowJudge__EnableHenatosu = 46,
	EJackPlayerAIFlowJudge__EnableStrengthenSpell = 47,
	EJackPlayerAIFlowJudge__EnableGiveAttribute = 48,
	EJackPlayerAIFlowJudge__EnableIceWave = 49,
	EJackPlayerAIFlowJudge__CheckBougyo = 50,
	EJackPlayerAIFlowJudge__CheckSukara = 51,
	EJackPlayerAIFlowJudge__CheckUseIceWave = 52,
	EJackPlayerAIFlowJudge__UseMegazaru = 53,
	EJackPlayerAIFlowJudge__Can50EnemyAct = 54,
	EJackPlayerAIFlowJudge__MAX    = 55
};


// Enum JackGame.EJackNusumuResultType
enum class EJackNusumuResultType : uint8_t
{
	EJackNusumuResultType__Failure = 0,
	EJackNusumuResultType__Success = 1,
	EJackNusumuResultType__Nothing = 2,
	EJackNusumuResultType__RemainingRare = 3,
	EJackNusumuResultType__MAX     = 4
};


// Enum JackGame.EJackBattleFirstCameraTarget
enum class EJackBattleFirstCameraTarget : uint8_t
{
	EJackBattleFirstCameraTarget__EnemyGroup = 0,
	EJackBattleFirstCameraTarget__FieldCenter = 1,
	EJackBattleFirstCameraTarget__EnemyCenter = 2,
	EJackBattleFirstCameraTarget__MAX = 3
};


// Enum JackGame.EJackMatineeRenkeiMonsterSize
enum class EJackMatineeRenkeiMonsterSize : uint8_t
{
	EJackMatineeRenkeiMonsterSize__S = 0,
	EJackMatineeRenkeiMonsterSize__M = 1,
	EJackMatineeRenkeiMonsterSize__L = 2,
	EJackMatineeRenkeiMonsterSize__SP01 = 3,
	EJackMatineeRenkeiMonsterSize__SP02 = 4,
	EJackMatineeRenkeiMonsterSize__SP03 = 5,
	EJackMatineeRenkeiMonsterSize__SP04 = 6,
	EJackMatineeRenkeiMonsterSize__SP05 = 7,
	EJackMatineeRenkeiMonsterSize__SP06 = 8,
	EJackMatineeRenkeiMonsterSize__SP07 = 9,
	EJackMatineeRenkeiMonsterSize__SP08 = 10,
	EJackMatineeRenkeiMonsterSize__SP09 = 11,
	EJackMatineeRenkeiMonsterSize__SP10 = 12,
	EJackMatineeRenkeiMonsterSize__SP11 = 13,
	EJackMatineeRenkeiMonsterSize__SP12 = 14,
	EJackMatineeRenkeiMonsterSize__MAX = 15
};


// Enum JackGame.EJackBattleRenkeiFormationGroupDirection
enum class EJackBattleRenkeiFormationGroupDirection : uint8_t
{
	EJackBattleRenkeiFormationGroupDirection__FieldCenter = 0,
	EJackBattleRenkeiFormationGroupDirection__GroupCenter = 1,
	EJackBattleRenkeiFormationGroupDirection__MAX = 2
};


// Enum JackGame.EJackBattleRenkeiFormationDirection
enum class EJackBattleRenkeiFormationDirection : uint8_t
{
	EJackBattleRenkeiFormationDirection__Target = 0,
	EJackBattleRenkeiFormationDirection__TargetGroup = 1,
	EJackBattleRenkeiFormationDirection__FieldCenter = 2,
	EJackBattleRenkeiFormationDirection__Alignment = 3,
	EJackBattleRenkeiFormationDirection__VirtualTargetLocation = 4,
	EJackBattleRenkeiFormationDirection__MAX = 5
};


// Enum JackGame.EJackBattleRenkeiTiming
enum class EJackBattleRenkeiTiming : uint8_t
{
	EJackBattleRenkeiTiming__RenkeiStart = 0,
	EJackBattleRenkeiTiming__RenkeiEnd = 1,
	EJackBattleRenkeiTiming__ActionStart = 2,
	EJackBattleRenkeiTiming__ActionEnd = 3,
	EJackBattleRenkeiTiming__ActionHit = 4,
	EJackBattleRenkeiTiming__ActionHitEnd = 5,
	EJackBattleRenkeiTiming__MAX   = 6
};


// Enum JackGame.EJackBattleGroupConditionsBack
enum class EJackBattleGroupConditionsBack : uint8_t
{
	EJackBattleGroupConditionsBack__Troop = 0,
	EJackBattleGroupConditionsBack__Group = 1,
	EJackBattleGroupConditionsBack__InitialPosition = 2,
	EJackBattleGroupConditionsBack__MAX = 3
};


// Enum JackGame.EJackBattleTurnDirection
enum class EJackBattleTurnDirection : uint8_t
{
	EJackBattleTurnDirection__None = 0,
	EJackBattleTurnDirection__GroupAngle = 1,
	EJackBattleTurnDirection__TroopAngle = 2,
	EJackBattleTurnDirection__OpponentTroop = 3,
	EJackBattleTurnDirection__Target = 4,
	EJackBattleTurnDirection__Enemy = 5,
	EJackBattleTurnDirection__GoodVibes = 6,
	EJackBattleTurnDirection__MAX  = 7
};


// Enum JackGame.EJackBattleMoveGroup
enum class EJackBattleMoveGroup : uint8_t
{
	EJackBattleMoveGroup__None     = 0,
	EJackBattleMoveGroup__Player   = 1,
	EJackBattleMoveGroup__AvoidancePlayer = 2,
	EJackBattleMoveGroup__MAX      = 3
};


// Enum JackGame.EJackBattleFreeMoveType
enum class EJackBattleFreeMoveType : uint8_t
{
	EJackBattleFreeMoveType__None  = 0,
	EJackBattleFreeMoveType__FreeMove = 1,
	EJackBattleFreeMoveType__ReturnToOriginLocation = 2,
	EJackBattleFreeMoveType__MAX   = 3
};


// Enum JackGame.EJackOddEffectParameterDisplayType
enum class EJackOddEffectParameterDisplayType : uint8_t
{
	EJackOddEffectParameterDisplayType__None = 0,
	EJackOddEffectParameterDisplayType__Default = 1,
	EJackOddEffectParameterDisplayType__Percent = 2,
	EJackOddEffectParameterDisplayType__MAX = 3
};


// Enum JackGame.EJackBattleGroupAlignmentSequence
enum class EJackBattleGroupAlignmentSequence : uint8_t
{
	EJackBattleGroupAlignmentSequence__None = 0,
	EJackBattleGroupAlignmentSequence__SizeRatio = 1,
	EJackBattleGroupAlignmentSequence__SizeRatioMultiplier = 2,
	EJackBattleGroupAlignmentSequence__SizeRatioAndDummy = 3,
	EJackBattleGroupAlignmentSequence__MAX = 4
};


// Enum JackGame.EJackActionDamageKnockBackStatus
enum class EJackActionDamageKnockBackStatus : uint8_t
{
	EJackActionDamageKnockBackStatus__DamageSS = 0,
	EJackActionDamageKnockBackStatus__DamageS = 1,
	EJackActionDamageKnockBackStatus__Blow = 2,
	EJackActionDamageKnockBackStatus__MAX = 3
};


// Enum JackGame.EJackActionDamageBlowState
enum class EJackActionDamageBlowState : uint8_t
{
	EJackActionDamageBlowState__Small = 0,
	EJackActionDamageBlowState__Normal = 1,
	EJackActionDamageBlowState__Big = 2,
	EJackActionDamageBlowState__None = 3,
	EJackActionDamageBlowState__MAX = 4
};


// Enum JackGame.EJackReviveRequestType
enum class EJackReviveRequestType : uint8_t
{
	EJackReviveRequestType__None   = 0,
	EJackReviveRequestType__NormalRevive = 1,
	EJackReviveRequestType__TensiRevive = 2,
	EJackReviveRequestType__BunnyRevive = 3,
	EJackReviveRequestType__MAX    = 4
};


// Enum JackGame.EJackDeadRequestType
enum class EJackDeadRequestType : uint8_t
{
	EJackDeadRequestType__None     = 0,
	EJackDeadRequestType__NormalDead = 1,
	EJackDeadRequestType__SelfDead = 2,
	EJackDeadRequestType__CoverDead = 3,
	EJackDeadRequestType__MAX      = 4
};


// Enum JackGame.EJackBattleABPFlag
enum class EJackBattleABPFlag : uint8_t
{
	EJackBattleABPFlag__None       = 0,
	EJackBattleABPFlag__SkipAnimOpenWeapon = 1,
	EJackBattleABPFlag__EquipChange = 2,
	EJackBattleABPFlag__EquipChangeFlip = 3,
	EJackBattleABPFlag__WeaponStyleChange = 4,
	EJackBattleABPFlag__MAX        = 5
};


// Enum JackGame.EJackBattleABPState
enum class EJackBattleABPState : uint8_t
{
	EJackBattleABPState__None      = 0,
	EJackBattleABPState__Unsheathe = 1,
	EJackBattleABPState__Sheathe   = 2,
	EJackBattleABPState__Idle      = 3,
	EJackBattleABPState__BougyoStart = 4,
	EJackBattleABPState__BougyoIdle = 5,
	EJackBattleABPState__MAX       = 6
};


// Enum JackGame.EJackOddEffectTuyosaDisplayType
enum class EJackOddEffectTuyosaDisplayType : uint8_t
{
	EJackOddEffectTuyosaDisplayType__None = 0,
	EJackOddEffectTuyosaDisplayType__Kobetu = 1,
	EJackOddEffectTuyosaDisplayType__Gassan = 2,
	EJackOddEffectTuyosaDisplayType__MAX = 3
};


// Enum JackGame.EJackBattleMemberChangeType
enum class EJackBattleMemberChangeType : uint8_t
{
	EJackBattleMemberChangeType__Turn = 0,
	EJackBattleMemberChangeType__BattleStartMenu = 1,
	EJackBattleMemberChangeType__Zenmetu = 2,
	EJackBattleMemberChangeType__MAX = 3
};


// Enum JackGame.EJackBattlePrgCameraRect
enum class EJackBattlePrgCameraRect : uint8_t
{
	EJackBattlePrgCameraRect__None = 0,
	EJackBattlePrgCameraRect__Face = 1,
	EJackBattlePrgCameraRect__Body = 2,
	EJackBattlePrgCameraRect__Motion = 3,
	EJackBattlePrgCameraRect__Low  = 4,
	EJackBattlePrgCameraRect__MAX  = 5
};


// Enum JackGame.EJackEventBattleAppearLine
enum class EJackEventBattleAppearLine : uint8_t
{
	EJackEventBattleAppearLine__Default = 0,
	EJackEventBattleAppearLine__Line = 1,
	EJackEventBattleAppearLine__Line01 = 2,
	EJackEventBattleAppearLine__MAX = 3
};


// Enum JackGame.EJackBattleNigeruConditionType
enum class EJackBattleNigeruConditionType : uint8_t
{
	EJackBattleNigeruConditionType__Default = 0,
	EJackBattleNigeruConditionType__Invalid = 1,
	EJackBattleNigeruConditionType__AlwaysSuccess = 2,
	EJackBattleNigeruConditionType__MAX = 3
};


// Enum JackGame.EJackEventBattleRaidState
enum class EJackEventBattleRaidState : uint8_t
{
	EJackEventBattleRaidState__None = 0,
	EJackEventBattleRaidState__Monster = 1,
	EJackEventBattleRaidState__Player = 2,
	EJackEventBattleRaidState__Normal = 3,
	EJackEventBattleRaidState__MAX = 4
};


// Enum JackGame.EJackNakamaYobiSpawnLocationType
enum class EJackNakamaYobiSpawnLocationType : uint8_t
{
	EJackNakamaYobiSpawnLocationType__None = 0,
	EJackNakamaYobiSpawnLocationType__Caster = 1,
	EJackNakamaYobiSpawnLocationType__BattleFieldCenter = 2,
	EJackNakamaYobiSpawnLocationType__Group = 3,
	EJackNakamaYobiSpawnLocationType__MAX = 4
};


// Enum JackGame.EJackHP1NokoriType
enum class EJackHP1NokoriType : uint8_t
{
	EJackHP1NokoriType__None       = 0,
	EJackHP1NokoriType__Seijonomamori = 1,
	EJackHP1NokoriType__Megaminosyukufuku = 2,
	EJackHP1NokoriType__MAX        = 3
};


// Enum JackGame.EJackKonranKoudouType
enum class EJackKonranKoudouType : uint8_t
{
	EJackKonranKoudouType__NanimoSinai = 0,
	EJackKonranKoudouType__KougekiEnemy = 1,
	EJackKonranKoudouType__KougekiSelf = 2,
	EJackKonranKoudouType__KougekiFriend = 3,
	EJackKonranKoudouType__MAX     = 4
};


// Enum JackGame.EJackBattleMessageCompactSubType
enum class EJackBattleMessageCompactSubType : uint8_t
{
	EJackBattleMessageCompactSubType__None = 0,
	EJackBattleMessageCompactSubType__Nioudati = 1,
	EJackBattleMessageCompactSubType__Kabau = 2,
	EJackBattleMessageCompactSubType__Mahokanta = 3,
	EJackBattleMessageCompactSubType__Ukenagasi = 4,
	EJackBattleMessageCompactSubType__Morobagiri = 5,
	EJackBattleMessageCompactSubType__Yaibanoyoroi = 6,
	EJackBattleMessageCompactSubType__MAX = 7
};


// Enum JackGame.EJackBattleMessageCompactType
enum class EJackBattleMessageCompactType : uint8_t
{
	EJackBattleMessageCompactType__None = 0,
	EJackBattleMessageCompactType__HPDamage = 1,
	EJackBattleMessageCompactType__HPHeal = 2,
	EJackBattleMessageCompactType__MPDamage = 3,
	EJackBattleMessageCompactType__MPHeal = 4,
	EJackBattleMessageCompactType__HPMPHeal = 5,
	EJackBattleMessageCompactType__DamageMiss = 6,
	EJackBattleMessageCompactType__TaiseiDamageMiss = 7,
	EJackBattleMessageCompactType__KoudouMukou = 8,
	EJackBattleMessageCompactType__OddEffectSet = 9,
	EJackBattleMessageCompactType__OddEffectOverlap = 10,
	EJackBattleMessageCompactType__OddEffectClear = 11,
	EJackBattleMessageCompactType__OddEffectMiss = 12,
	EJackBattleMessageCompactType__Dead = 13,
	EJackBattleMessageCompactType__SlideUp = 14,
	EJackBattleMessageCompactType__SlideDown = 15,
	EJackBattleMessageCompactType__SlideKeepUp = 16,
	EJackBattleMessageCompactType__SlideKeepDown = 17,
	EJackBattleMessageCompactType__SlideClear = 18,
	EJackBattleMessageCompactType__SlideMiss = 19,
	EJackBattleMessageCompactType__SindoLimit = 20,
	EJackBattleMessageCompactType__SindoKeep = 21,
	EJackBattleMessageCompactType__Critical = 22,
	EJackBattleMessageCompactType__HazukasiiNoroi = 23,
	EJackBattleMessageCompactType__Zibaria = 24,
	EJackBattleMessageCompactType__Nakamayobi = 25,
	EJackBattleMessageCompactType__StackAll = 26,
	EJackBattleMessageCompactType__BluePrint = 27,
	EJackBattleMessageCompactType__JumonHansya = 28,
	EJackBattleMessageCompactType__OddEffectMukou = 29,
	EJackBattleMessageCompactType__MAX = 30
};


// Enum JackGame.EJackBattleMessageNoun
enum class EJackBattleMessageNoun : uint8_t
{
	EJackBattleMessageNoun__None   = 0,
	EJackBattleMessageNoun__Player = 1,
	EJackBattleMessageNoun__Monster = 2,
	EJackBattleMessageNoun__MAX    = 3
};


// Enum JackGame.EJackActionFieldTextType
enum class EJackActionFieldTextType : uint8_t
{
	EJackActionFieldTextType__None = 0,
	EJackActionFieldTextType__Koudou = 1,
	EJackActionFieldTextType__Yuukou = 2,
	EJackActionFieldTextType__YuukouMultiple = 3,
	EJackActionFieldTextType__YuukouOdd = 4,
	EJackActionFieldTextType__YuukouHpOdd = 5,
	EJackActionFieldTextType__Sippai = 6,
	EJackActionFieldTextType__Mukou = 7,
	EJackActionFieldTextType__YuukouHakai = 8,
	EJackActionFieldTextType__MAX  = 9
};


// Enum JackGame.EJackActionMessageCategory
enum class EJackActionMessageCategory : uint8_t
{
	EJackActionMessageCategory__None = 0,
	EJackActionMessageCategory__Default = 1,
	EJackActionMessageCategory__Koudou = 2,
	EJackActionMessageCategory__Hit = 3,
	EJackActionMessageCategory__MAX = 4
};


// Enum JackGame.EJackActionSoundType
enum class EJackActionSoundType : uint8_t
{
	EJackActionSoundType__None     = 0,
	EJackActionSoundType__Kougeki  = 1,
	EJackActionSoundType__Jumon    = 2,
	EJackActionSoundType__MAX      = 3
};


// Enum JackGame.EJackActionMonsterRaceTokkouType
enum class EJackActionMonsterRaceTokkouType : uint8_t
{
	EJackActionMonsterRaceTokkouType__None = 0,
	EJackActionMonsterRaceTokkouType__ActionAndWeapon = 1,
	EJackActionMonsterRaceTokkouType__ActionOnly = 2,
	EJackActionMonsterRaceTokkouType__MAX = 3
};


// Enum JackGame.EJackActionTuikaKoukaType
enum class EJackActionTuikaKoukaType : uint8_t
{
	EJackActionTuikaKoukaType__None = 0,
	EJackActionTuikaKoukaType__First = 1,
	EJackActionTuikaKoukaType__All = 2,
	EJackActionTuikaKoukaType__MAX = 3
};


// Enum JackGame.EJackActionCriticalType
enum class EJackActionCriticalType : uint8_t
{
	EJackActionCriticalType__None  = 0,
	EJackActionCriticalType__KougekiTantai = 1,
	EJackActionCriticalType__KougekiHani = 2,
	EJackActionCriticalType__JumonTokugi = 3,
	EJackActionCriticalType__LargeDamage = 4,
	EJackActionCriticalType__Kaifuku = 5,
	EJackActionCriticalType__YuukouKakuritu = 6,
	EJackActionCriticalType__MAX   = 7
};


// Enum JackGame.EJackActionDamageCalcType
enum class EJackActionDamageCalcType : uint8_t
{
	EJackActionDamageCalcType__None = 0,
	EJackActionDamageCalcType__Kougeki = 1,
	EJackActionDamageCalcType__Standard = 2,
	EJackActionDamageCalcType__StandardPer = 3,
	EJackActionDamageCalcType__StandardCurrentPer = 4,
	EJackActionDamageCalcType__StandardHeal = 5,
	EJackActionDamageCalcType__StandardHealPer = 6,
	EJackActionDamageCalcType__Boo = 7,
	EJackActionDamageCalcType__Mahotora = 8,
	EJackActionDamageCalcType__HPPasser = 9,
	EJackActionDamageCalcType__Madante = 10,
	EJackActionDamageCalcType__CrossMadante = 11,
	EJackActionDamageCalcType__ReverseDamage = 12,
	EJackActionDamageCalcType__GoldShower = 13,
	EJackActionDamageCalcType__MAX = 14
};


// Enum JackGame.EJackActionDamageType
enum class EJackActionDamageType : uint8_t
{
	EJackActionDamageType__None    = 0,
	EJackActionDamageType__DamageHP = 1,
	EJackActionDamageType__DamageMP = 2,
	EJackActionDamageType__HealHP  = 3,
	EJackActionDamageType__HealMP  = 4,
	EJackActionDamageType__Revive  = 5,
	EJackActionDamageType__ReviveHeal = 6,
	EJackActionDamageType__MAX     = 7
};


// Enum JackGame.EJackDamageType
enum class EJackDamageType : uint8_t
{
	EJackDamageType__Normal        = 0,
	EJackDamageType__Critical      = 1,
	EJackDamageType__Guard         = 2,
	EJackDamageType__Miss          = 3,
	EJackDamageType__MAX           = 4
};


// Enum JackGame.EJackActionEffectBehaviorType
enum class EJackActionEffectBehaviorType : uint8_t
{
	EJackActionEffectBehaviorType__None = 0,
	EJackActionEffectBehaviorType__BurstAroundSelf = 1,
	EJackActionEffectBehaviorType__BurstAroundTarget = 2,
	EJackActionEffectBehaviorType__Projectile = 3,
	EJackActionEffectBehaviorType__PenetratingProjectile = 4,
	EJackActionEffectBehaviorType__MAX = 5
};


// Enum JackGame.EJackActionConsumeCondition
enum class EJackActionConsumeCondition : uint8_t
{
	EJackActionConsumeCondition__None = 0,
	EJackActionConsumeCondition__Always = 1,
	EJackActionConsumeCondition__HealHP = 2,
	EJackActionConsumeCondition__HealMP = 3,
	EJackActionConsumeCondition__Revive = 4,
	EJackActionConsumeCondition__Alive = 5,
	EJackActionConsumeCondition__ClearDoku = 6,
	EJackActionConsumeCondition__ClearMahi = 7,
	EJackActionConsumeCondition__ClearKonran = 8,
	EJackActionConsumeCondition__ClearNemuri = 9,
	EJackActionConsumeCondition__ClearNoroi = 10,
	EJackActionConsumeCondition__ClearGenwaku = 11,
	EJackActionConsumeCondition__ClearMiryou = 12,
	EJackActionConsumeCondition__InvokeZone = 13,
	EJackActionConsumeCondition__MAX = 14
};


// Enum JackGame.EJackActionTargetListType
enum class EJackActionTargetListType : uint8_t
{
	EJackActionTargetListType__None = 0,
	EJackActionTargetListType__Enemy = 1,
	EJackActionTargetListType__Friend = 2,
	EJackActionTargetListType__FriendRevive = 3,
	EJackActionTargetListType__All = 4,
	EJackActionTargetListType__MAX = 5
};


// Enum JackGame.EJackActionTargetLayerType
enum class EJackActionTargetLayerType : uint8_t
{
	EJackActionTargetLayerType__None = 0,
	EJackActionTargetLayerType__First = 1,
	EJackActionTargetLayerType__Second = 2,
	EJackActionTargetLayerType__MAX = 3
};


// Enum JackGame.EJackActionHitOrderType
enum class EJackActionHitOrderType : uint8_t
{
	EJackActionHitOrderType__None  = 0,
	EJackActionHitOrderType__Auto  = 1,
	EJackActionHitOrderType__NearCaster = 2,
	EJackActionHitOrderType__NearTarget = 3,
	EJackActionHitOrderType__FarCaster = 4,
	EJackActionHitOrderType__FarTarget = 5,
	EJackActionHitOrderType__Clockwise = 6,
	EJackActionHitOrderType__Counterclockwise = 7,
	EJackActionHitOrderType__LeftToRight = 8,
	EJackActionHitOrderType__RightToLeft = 9,
	EJackActionHitOrderType__BackToFront = 10,
	EJackActionHitOrderType__FrontToBack = 11,
	EJackActionHitOrderType__Random = 12,
	EJackActionHitOrderType__RandomUniqueHit = 13,
	EJackActionHitOrderType__MAX   = 14
};


// Enum JackGame.EJackActionExtentType
enum class EJackActionExtentType : uint8_t
{
	EJackActionExtentType__None    = 0,
	EJackActionExtentType__Single  = 1,
	EJackActionExtentType__Group   = 2,
	EJackActionExtentType__All     = 3,
	EJackActionExtentType__AllWithStandby = 4,
	EJackActionExtentType__AllWithStandbyWithoutSelf = 5,
	EJackActionExtentType__AllWithoutFirstTarget = 6,
	EJackActionExtentType__Sphere  = 7,
	EJackActionExtentType__Capsule = 8,
	EJackActionExtentType__Box     = 9,
	EJackActionExtentType__Fan     = 10,
	EJackActionExtentType__NumberByAliveOnly = 11,
	EJackActionExtentType__SingleWithParts = 12,
	EJackActionExtentType__SinglePartsOnly = 13,
	EJackActionExtentType__MAX     = 14
};


// Enum JackGame.EJackActionExtentTargetType
enum class EJackActionExtentTargetType : uint8_t
{
	EJackActionExtentTargetType__None = 0,
	EJackActionExtentTargetType__Self = 1,
	EJackActionExtentTargetType__Single = 2,
	EJackActionExtentTargetType__WithoutSelf = 3,
	EJackActionExtentTargetType__MAX = 4
};


// Enum JackGame.EJackActionTargetType
enum class EJackActionTargetType : uint8_t
{
	EJackActionTargetType__None    = 0,
	EJackActionTargetType__Friend  = 1,
	EJackActionTargetType__Foe     = 2,
	EJackActionTargetType__All     = 3,
	EJackActionTargetType__AllWithoutSelf = 4,
	EJackActionTargetType__MAX     = 5
};


// Enum JackGame.EJackActionModuleType
enum class EJackActionModuleType : uint8_t
{
	EJackActionModuleType__None    = 0,
	EJackActionModuleType__Damage  = 1,
	EJackActionModuleType__DamageMP = 2,
	EJackActionModuleType__Recover = 3,
	EJackActionModuleType__RecoverMP = 4,
	EJackActionModuleType__Revive  = 5,
	EJackActionModuleType__HPPasser = 6,
	EJackActionModuleType__SetOddEffect = 7,
	EJackActionModuleType__ClearOddEffect = 8,
	EJackActionModuleType__InvokeOddEffect = 9,
	EJackActionModuleType__Mikawasi = 10,
	EJackActionModuleType__TateGuard = 11,
	EJackActionModuleType__BukiGuard = 12,
	EJackActionModuleType__DamageKanzenGuard = 13,
	EJackActionModuleType__ButuriKanzenGuard = 14,
	EJackActionModuleType__KaisinKanzenGuard = 15,
	EJackActionModuleType__ImmediatelyCounter = 16,
	EJackActionModuleType__PoisonDamage = 17,
	EJackActionModuleType__Yasumi  = 18,
	EJackActionModuleType__Nigeru  = 19,
	EJackActionModuleType__Muda    = 20,
	EJackActionModuleType__NakamaYobi = 21,
	EJackActionModuleType__Nusumu  = 22,
	EJackActionModuleType__Zibaria = 23,
	EJackActionModuleType__AutoRecover = 24,
	EJackActionModuleType__AutoRecoverMP = 25,
	EJackActionModuleType__MPZero  = 26,
	EJackActionModuleType__ActionExecDependent = 27,
	EJackActionModuleType__HandouDamage = 28,
	EJackActionModuleType__MeganteSokusi = 29,
	EJackActionModuleType__HP1Nokori = 30,
	EJackActionModuleType__SokusiMukou = 31,
	EJackActionModuleType__Voice   = 32,
	EJackActionModuleType__Invalid = 33,
	EJackActionModuleType__MAX     = 34
};


// Enum JackGame.EJackActionKyuusyuuType
enum class EJackActionKyuusyuuType : uint8_t
{
	EJackActionKyuusyuuType__None  = 0,
	EJackActionKyuusyuuType__HP    = 1,
	EJackActionKyuusyuuType__MP    = 2,
	EJackActionKyuusyuuType__MAX   = 3
};


// Enum JackGame.EJackCalcDamageOperator
enum class EJackCalcDamageOperator : uint8_t
{
	EJackCalcDamageOperator__Mul   = 0,
	EJackCalcDamageOperator__Add   = 1,
	EJackCalcDamageOperator__MAX   = 2
};


// Enum JackGame.EJackRotationProcessType
enum class EJackRotationProcessType : uint8_t
{
	EJackRotationProcessType__None = 0,
	EJackRotationProcessType__Linear = 1,
	EJackRotationProcessType__Smooth = 2,
	EJackRotationProcessType__Time = 3,
	EJackRotationProcessType__MAX  = 4
};


// Enum JackGame.EJackRotationLayer
enum class EJackRotationLayer : uint8_t
{
	EJackRotationLayer__None       = 0,
	EJackRotationLayer__Move       = 1,
	EJackRotationLayer__BattleAIStateMove = 2,
	EJackRotationLayer__ActionAssistMove = 3,
	EJackRotationLayer__AnimNotify = 4,
	EJackRotationLayer__Damage     = 5,
	EJackRotationLayer__MAX        = 6
};


// Enum JackGame.EJackMonsterBattleStyle
enum class EJackMonsterBattleStyle : uint8_t
{
	EJackMonsterBattleStyle__None  = 0,
	EJackMonsterBattleStyle__Ten   = 1,
	EJackMonsterBattleStyle__Chi   = 2,
	EJackMonsterBattleStyle__Ryu   = 3,
	EJackMonsterBattleStyle__Dying = 4,
	EJackMonsterBattleStyle__MAX   = 5
};


// Enum JackGame.EJackMonsterSibariParameterTarget
enum class EJackMonsterSibariParameterTarget : uint8_t
{
	EJackMonsterSibariParameterTarget__None = 0,
	EJackMonsterSibariParameterTarget__HP = 1,
	EJackMonsterSibariParameterTarget__MP = 2,
	EJackMonsterSibariParameterTarget__Kougekiryoku = 3,
	EJackMonsterSibariParameterTarget__Syubiryoku = 4,
	EJackMonsterSibariParameterTarget__Subayasa = 5,
	EJackMonsterSibariParameterTarget__Kiyousa = 6,
	EJackMonsterSibariParameterTarget__InitialZonePointMin = 7,
	EJackMonsterSibariParameterTarget__InitialZonePointMax = 8,
	EJackMonsterSibariParameterTarget__MAX = 9
};


// Enum JackGame.EJackMonsterSibariParameterOperator
enum class EJackMonsterSibariParameterOperator : uint8_t
{
	EJackMonsterSibariParameterOperator__None = 0,
	EJackMonsterSibariParameterOperator__Add = 1,
	EJackMonsterSibariParameterOperator__Mul = 2,
	EJackMonsterSibariParameterOperator__Overwrite = 3,
	EJackMonsterSibariParameterOperator__MAX = 4
};


// Enum JackGame.EJackMonsterTextType
enum class EJackMonsterTextType : uint8_t
{
	EJackMonsterTextType__None     = 0,
	EJackMonsterTextType__DisplayName = 1,
	EJackMonsterTextType__MAX      = 2
};


// Enum JackGame.EJackMonsterMoveDir
enum class EJackMonsterMoveDir : uint8_t
{
	EJackMonsterMoveDir__NearWalk  = 0,
	EJackMonsterMoveDir__NearRun   = 1,
	EJackMonsterMoveDir__FarWalk   = 2,
	EJackMonsterMoveDir__FarRun    = 3,
	EJackMonsterMoveDir__MAX       = 4
};


// Enum JackGame.EJackMonsterMovement
enum class EJackMonsterMovement : uint8_t
{
	EJackMonsterMovement__None     = 0,
	EJackMonsterMovement__Move     = 1,
	EJackMonsterMovement__Anim     = 2,
	EJackMonsterMovement__Effect   = 3,
	EJackMonsterMovement__Wait     = 4,
	EJackMonsterMovement__Trun     = 5,
	EJackMonsterMovement__Spread   = 6,
	EJackMonsterMovement__MAX      = 7
};


// Enum JackGame.EJackMonsterRelationship
enum class EJackMonsterRelationship : uint8_t
{
	EJackMonsterRelationship__Strong = 0,
	EJackMonsterRelationship__Weak = 1,
	EJackMonsterRelationship__Amazing = 2,
	EJackMonsterRelationship__MAX  = 3
};


// Enum JackGame.EJackMonsterState
enum class EJackMonsterState : uint8_t
{
	EJackMonsterState__None        = 0,
	EJackMonsterState__RunAway     = 1,
	EJackMonsterState__Tracking    = 2,
	EJackMonsterState__Idle        = 3,
	EJackMonsterState__Battle      = 4,
	EJackMonsterState__Rush        = 5,
	EJackMonsterState__Eco         = 6,
	EJackMonsterState__MAX         = 7
};


// Enum JackGame.EJackMonsterTarget
enum class EJackMonsterTarget : uint8_t
{
	EJackMonsterTarget__None       = 0,
	EJackMonsterTarget__Player     = 1,
	EJackMonsterTarget__Group      = 2,
	EJackMonsterTarget__Other      = 3,
	EJackMonsterTarget__EcoPoint   = 4,
	EJackMonsterTarget__Periphery  = 5,
	EJackMonsterTarget__PopLoc     = 6,
	EJackMonsterTarget__WeakStop   = 7,
	EJackMonsterTarget__WeakRunaway = 8,
	EJackMonsterTarget__StrongChase = 9,
	EJackMonsterTarget__StrongRush = 10,
	EJackMonsterTarget__Leader     = 11,
	EJackMonsterTarget__StrongMonster = 12,
	EJackMonsterTarget__WeakMonster = 13,
	EJackMonsterTarget__AmazingMonster = 14,
	EJackMonsterTarget__EscapeMonster = 15,
	EJackMonsterTarget__MAX        = 16
};


// Enum JackGame.EJackMonsterTerms
enum class EJackMonsterTerms : uint8_t
{
	EJackMonsterTerms__Time        = 0,
	EJackMonsterTerms__Near        = 1,
	EJackMonsterTerms__Far         = 2,
	EJackMonsterTerms__InSight     = 3,
	EJackMonsterTerms__Attacked    = 4,
	EJackMonsterTerms__None        = 5,
	EJackMonsterTerms__Battle      = 6,
	EJackMonsterTerms__BattleEnd   = 7,
	EJackMonsterTerms__OutOfSight  = 8,
	EJackMonsterTerms__Terminate   = 9,
	EJackMonsterTerms__Active      = 10,
	EJackMonsterTerms__Lounched    = 11,
	EJackMonsterTerms__TerminateRandom = 12,
	EJackMonsterTerms__Transmitted = 13,
	EJackMonsterTerms__MAX         = 14
};


// Enum JackGame.EJackMonsterTransmittedInfo
enum class EJackMonsterTransmittedInfo : uint8_t
{
	EJackMonsterTransmittedInfo__FindPlayer = 0,
	EJackMonsterTransmittedInfo__Bark = 1,
	EJackMonsterTransmittedInfo__MAX = 2
};


// Enum JackGame.EJackBattleIntelligenceType
enum class EJackBattleIntelligenceType : uint8_t
{
	EJackBattleIntelligenceType__None = 0,
	EJackBattleIntelligenceType__Baka = 1,
	EJackBattleIntelligenceType__Ningen = 2,
	EJackBattleIntelligenceType__Kami = 3,
	EJackBattleIntelligenceType__MAX = 4
};


// Enum JackGame.EJackMonsterPartyType
enum class EJackMonsterPartyType : uint8_t
{
	EJackMonsterPartyType__None    = 0,
	EJackMonsterPartyType__Normal  = 1,
	EJackMonsterPartyType__Special = 2,
	EJackMonsterPartyType__Metal   = 3,
	EJackMonsterPartyType__Reincarnation = 4,
	EJackMonsterPartyType__MAX     = 5
};


// Enum JackGame.EJackMonsterBodyAttribute
enum class EJackMonsterBodyAttribute : uint8_t
{
	EJackMonsterBodyAttribute__Monolithic = 0,
	EJackMonsterBodyAttribute__Body = 1,
	EJackMonsterBodyAttribute__Parts = 2,
	EJackMonsterBodyAttribute__NoEntityParts = 3,
	EJackMonsterBodyAttribute__ShadowCopy = 4,
	EJackMonsterBodyAttribute__MAX = 5
};


// Enum JackGame.EJackMonsterBowgunResonse
enum class EJackMonsterBowgunResonse : uint8_t
{
	EJackMonsterBowgunResonse__Angry = 0,
	EJackMonsterBowgunResonse__Notice = 1,
	EJackMonsterBowgunResonse__Ignore = 2,
	EJackMonsterBowgunResonse__MAX = 3
};


// Enum JackGame.EJackMonsterMovementStrong
enum class EJackMonsterMovementStrong : uint8_t
{
	EJackMonsterMovementStrong__Chase = 0,
	EJackMonsterMovementStrong__Rush = 1,
	EJackMonsterMovementStrong__Ignore = 2,
	EJackMonsterMovementStrong__MAX = 3
};


// Enum JackGame.EJackMonsterMovementWeak
enum class EJackMonsterMovementWeak : uint8_t
{
	EJackMonsterMovementWeak__Stop = 0,
	EJackMonsterMovementWeak__Runaway = 1,
	EJackMonsterMovementWeak__Ignore = 2,
	EJackMonsterMovementWeak__MAX  = 3
};


// Enum JackGame.EJackMonsterSearchType
enum class EJackMonsterSearchType : uint8_t
{
	EJackMonsterSearchType__None   = 0,
	EJackMonsterSearchType__EyeSight = 1,
	EJackMonsterSearchType__Hearing = 2,
	EJackMonsterSearchType__ESP    = 3,
	EJackMonsterSearchType__MAX    = 4
};


// Enum JackGame.EJackMonsterMoveSpeed
enum class EJackMonsterMoveSpeed : uint8_t
{
	EJackMonsterMoveSpeed__SuperSlow = 0,
	EJackMonsterMoveSpeed__VerySlow = 1,
	EJackMonsterMoveSpeed__Slow    = 2,
	EJackMonsterMoveSpeed__SlightlySlow = 3,
	EJackMonsterMoveSpeed__Normal  = 4,
	EJackMonsterMoveSpeed__SlightlyFast = 5,
	EJackMonsterMoveSpeed__Fast    = 6,
	EJackMonsterMoveSpeed__VeryFast = 7,
	EJackMonsterMoveSpeed__SuperFast = 8,
	EJackMonsterMoveSpeed__Original = 9,
	EJackMonsterMoveSpeed__MAX     = 10
};


// Enum JackGame.EJackMonsterMoveMethod
enum class EJackMonsterMoveMethod : uint8_t
{
	EJackMonsterMoveMethod__Walk   = 0,
	EJackMonsterMoveMethod__Teleportaion = 1,
	EJackMonsterMoveMethod__MAX    = 2
};


// Enum JackGame.EJackMonsterMoveType
enum class EJackMonsterMoveType : uint8_t
{
	EJackMonsterMoveType__Stop     = 0,
	EJackMonsterMoveType__Move     = 1,
	EJackMonsterMoveType__MAX      = 2
};


// Enum JackGame.EJackMonsterPopManagerUpdatePurpose
enum class EJackMonsterPopManagerUpdatePurpose : uint8_t
{
	EJackMonsterPopManagerUpdatePurpose__Battle = 0,
	EJackMonsterPopManagerUpdatePurpose__Debug = 1,
	EJackMonsterPopManagerUpdatePurpose__CategoryHidden_A = 2,
	EJackMonsterPopManagerUpdatePurpose__CategoryHidden_M = 3,
	EJackMonsterPopManagerUpdatePurpose__CutScene = 4,
	EJackMonsterPopManagerUpdatePurpose__AllDead = 5,
	EJackMonsterPopManagerUpdatePurpose__MAX = 6
};


// Enum JackGame.EJackMonsterRace
enum class EJackMonsterRace : uint8_t
{
	EJackMonsterRace__None         = 0,
	EJackMonsterRace__Slime        = 1,
	EJackMonsterRace__Dragon       = 2,
	EJackMonsterRace__Akuma        = 3,
	EJackMonsterRace__Bussitu      = 4,
	EJackMonsterRace__Zombie       = 5,
	EJackMonsterRace__Element      = 6,
	EJackMonsterRace__Kaizin       = 7,
	EJackMonsterRace__Machine      = 8,
	EJackMonsterRace__Tori         = 9,
	EJackMonsterRace__Sizen        = 10,
	EJackMonsterRace__Kemono       = 11,
	EJackMonsterRace__Maou         = 12,
	EJackMonsterRace__MAX          = 13
};


// Enum JackGame.EJackCharacterSaveGold
enum class EJackCharacterSaveGold : uint8_t
{
	EJackCharacterSaveGold__P001   = 0,
	EJackCharacterSaveGold__P002   = 1,
	EJackCharacterSaveGold__P005   = 2,
	EJackCharacterSaveGold__P006   = 3,
	EJackCharacterSaveGold__P007   = 4,
	EJackCharacterSaveGold__MAX    = 5
};


// Enum JackGame.EJackTwoLapReturnSave
enum class EJackTwoLapReturnSave : uint8_t
{
	EJackTwoLapReturnSave__A180    = 0,
	EJackTwoLapReturnSave__B170    = 1,
	EJackTwoLapReturnSave__MAX     = 2
};


// Enum JackGame.EJackUmayobiNoBeruFailPurpose
enum class EJackUmayobiNoBeruFailPurpose : uint8_t
{
	EJackUmayobiNoBeruFailPurpose__FailSenario = 0,
	EJackUmayobiNoBeruFailPurpose__FailArea = 1,
	EJackUmayobiNoBeruFailPurpose__FailStrangePower = 2,
	EJackUmayobiNoBeruFailPurpose__MAX = 3
};


// Enum JackGame.EJackRuraFailPurpose
enum class EJackRuraFailPurpose : uint8_t
{
	EJackRuraFailPurpose__Level    = 0,
	EJackRuraFailPurpose__MAX      = 1
};


// Enum JackGame.EJackRuraFail
enum class EJackRuraFail : uint8_t
{
	EJackRuraFail__None            = 0,
	EJackRuraFail__RiremitoNone    = 1,
	EJackRuraFail__RuraRiremitoNone = 2,
	EJackRuraFail__RideVehicle     = 3,
	EJackRuraFail__CannotUseArea   = 4,
	EJackRuraFail__StrangePower    = 5,
	EJackRuraFail__StrangePowerRiremito = 6,
	EJackRuraFail__Ceil            = 7,
	EJackRuraFail__LowCeil         = 8,
	EJackRuraFail__ForceNone       = 9,
	EJackRuraFail__ForceRuraRiremitoNone = 10,
	EJackRuraFail__MAX             = 11
};


// Enum JackGame.EJackAnimSMGraphPurpose
enum class EJackAnimSMGraphPurpose : uint8_t
{
	EJackAnimSMGraphPurpose__Default = 0,
	EJackAnimSMGraphPurpose__Additive = 1,
	EJackAnimSMGraphPurpose__MAX   = 2
};


// Enum JackGame.EJackCharacterRecover
enum class EJackCharacterRecover : uint8_t
{
	EJackCharacterRecover__Full    = 0,
	EJackCharacterRecover__HP      = 1,
	EJackCharacterRecover__MP      = 2,
	EJackCharacterRecover__MAX     = 3
};


// Enum JackGame.EJackCharacterMugenPurpose
enum class EJackCharacterMugenPurpose : uint8_t
{
	EJackCharacterMugenPurpose__System = 0,
	EJackCharacterMugenPurpose__Character = 1,
	EJackCharacterMugenPurpose__OddEffect = 2,
	EJackCharacterMugenPurpose__Debug = 3,
	EJackCharacterMugenPurpose__MAX = 4
};


// Enum JackGame.EJackCharacterAutoLookAtPurpose
enum class EJackCharacterAutoLookAtPurpose : uint8_t
{
	EJackCharacterAutoLookAtPurpose__Normal = 0,
	EJackCharacterAutoLookAtPurpose__Parade = 1,
	EJackCharacterAutoLookAtPurpose__Gimmick = 2,
	EJackCharacterAutoLookAtPurpose__AfterMapJump = 3,
	EJackCharacterAutoLookAtPurpose__AnimNotifyState = 4,
	EJackCharacterAutoLookAtPurpose__PhotoMode = 5,
	EJackCharacterAutoLookAtPurpose__MAX = 6
};


// Enum JackGame.EJackCharacterFootstepType
enum class EJackCharacterFootstepType : uint8_t
{
	EJackCharacterFootstepType__Walk = 0,
	EJackCharacterFootstepType__Run = 1,
	EJackCharacterFootstepType__Dash = 2,
	EJackCharacterFootstepType__Landing = 3,
	EJackCharacterFootstepType__Sliding = 4,
	EJackCharacterFootstepType__Rain = 5,
	EJackCharacterFootstepType__MAX = 6
};


// Enum JackGame.EJackGuestNpcHiddenPurpose
enum class EJackGuestNpcHiddenPurpose : uint8_t
{
	EJackGuestNpcHiddenPurpose__Hidden = 0,
	EJackGuestNpcHiddenPurpose__Battle = 1,
	EJackGuestNpcHiddenPurpose__PartyTalk = 2,
	EJackGuestNpcHiddenPurpose__Vehicle = 3,
	EJackGuestNpcHiddenPurpose__Ship = 4,
	EJackGuestNpcHiddenPurpose__Whale = 5,
	EJackGuestNpcHiddenPurpose__Ruler = 6,
	EJackGuestNpcHiddenPurpose__Button = 7,
	EJackGuestNpcHiddenPurpose__CutScene = 8,
	EJackGuestNpcHiddenPurpose__Level = 9,
	EJackGuestNpcHiddenPurpose__InDoor = 10,
	EJackGuestNpcHiddenPurpose__Fish = 11,
	EJackGuestNpcHiddenPurpose__Map = 12,
	EJackGuestNpcHiddenPurpose__Teleport = 13,
	EJackGuestNpcHiddenPurpose__Cheat = 14,
	EJackGuestNpcHiddenPurpose__MAX = 15
};


// Enum JackGame.EJackCharacterRootMotionPurpose
enum class EJackCharacterRootMotionPurpose : uint8_t
{
	EJackCharacterRootMotionPurpose__AutoNavigation = 0,
	EJackCharacterRootMotionPurpose__NoFloorSlip = 1,
	EJackCharacterRootMotionPurpose__MAX = 2
};


// Enum JackGame.EJackCharacterConstrainedOnNavMeshPurpose
enum class EJackCharacterConstrainedOnNavMeshPurpose : uint8_t
{
	EJackCharacterConstrainedOnNavMeshPurpose__Battle = 0,
	EJackCharacterConstrainedOnNavMeshPurpose__DuringMove = 1,
	EJackCharacterConstrainedOnNavMeshPurpose__PushOut = 2,
	EJackCharacterConstrainedOnNavMeshPurpose__DebugCommand = 3,
	EJackCharacterConstrainedOnNavMeshPurpose__MAX = 4
};


// Enum JackGame.EJackCharacterMaxMoveSpeedPurpose
enum class EJackCharacterMaxMoveSpeedPurpose : uint8_t
{
	EJackCharacterMaxMoveSpeedPurpose__Controller = 0,
	EJackCharacterMaxMoveSpeedPurpose__ActionExecutor = 1,
	EJackCharacterMaxMoveSpeedPurpose__DebugCommand = 2,
	EJackCharacterMaxMoveSpeedPurpose__Dash = 3,
	EJackCharacterMaxMoveSpeedPurpose__MAX = 4
};


// Enum JackGame.EJackCharacterMovementMaxSpeed
enum class EJackCharacterMovementMaxSpeed : uint8_t
{
	EJackCharacterMovementMaxSpeed__NoLimit = 0,
	EJackCharacterMovementMaxSpeed__Run = 1,
	EJackCharacterMovementMaxSpeed__Walk = 2,
	EJackCharacterMovementMaxSpeed__MAX = 3
};


// Enum JackGame.EJackCharacterMovementMaxSpeedPurpose
enum class EJackCharacterMovementMaxSpeedPurpose : uint8_t
{
	EJackCharacterMovementMaxSpeedPurpose__LVD = 0,
	EJackCharacterMovementMaxSpeedPurpose__PlayableMovementDefault = 1,
	EJackCharacterMovementMaxSpeedPurpose__Debug = 2,
	EJackCharacterMovementMaxSpeedPurpose__MAX = 3
};


// Enum JackGame.EJackAnimInstanceControlCategory
enum class EJackAnimInstanceControlCategory : uint8_t
{
	EJackAnimInstanceControlCategory__MenuHUD = 0,
	EJackAnimInstanceControlCategory__ActionCursor = 1,
	EJackAnimInstanceControlCategory__ZeroDeltaSeconds = 2,
	EJackAnimInstanceControlCategory__DashRunCollide = 3,
	EJackAnimInstanceControlCategory__ActionGuideHelp = 4,
	EJackAnimInstanceControlCategory__MAX = 5
};


// Enum JackGame.EJackFacialControlDisablePurpose
enum class EJackFacialControlDisablePurpose : uint8_t
{
	EJackFacialControlDisablePurpose__LOD = 0,
	EJackFacialControlDisablePurpose__Renkei = 1,
	EJackFacialControlDisablePurpose__NoAnimation = 2,
	EJackFacialControlDisablePurpose__MAX = 3
};


// Enum JackGame.EJackFacialControlPurpose
enum class EJackFacialControlPurpose : uint8_t
{
	EJackFacialControlPurpose__CutScene = 0,
	EJackFacialControlPurpose__MAX = 1
};


// Enum JackGame.EJackFootIKControlPurpose
enum class EJackFootIKControlPurpose : uint8_t
{
	EJackFootIKControlPurpose__CutScene = 0,
	EJackFootIKControlPurpose__LOD = 1,
	EJackFootIKControlPurpose__Gimmick = 2,
	EJackFootIKControlPurpose__AnimInstance = 3,
	EJackFootIKControlPurpose__BattleAction = 4,
	EJackFootIKControlPurpose__BattleActionAttach = 5,
	EJackFootIKControlPurpose__AnimNotifyState = 6,
	EJackFootIKControlPurpose__VehicleRide = 7,
	EJackFootIKControlPurpose__Reduction = 8,
	EJackFootIKControlPurpose__NPCSystem = 9,
	EJackFootIKControlPurpose__MAX = 10
};


// Enum JackGame.EJackTickComponentDisabledPurpose
enum class EJackTickComponentDisabledPurpose : uint8_t
{
	EJackTickComponentDisabledPurpose__CutScene = 0,
	EJackTickComponentDisabledPurpose__LoadReduction = 1,
	EJackTickComponentDisabledPurpose__NPCSystem = 2,
	EJackTickComponentDisabledPurpose__Attach = 3,
	EJackTickComponentDisabledPurpose__MenuHUD = 4,
	EJackTickComponentDisabledPurpose__MonsterAI = 5,
	EJackTickComponentDisabledPurpose__Battle = 6,
	EJackTickComponentDisabledPurpose__GestNPC = 7,
	EJackTickComponentDisabledPurpose__DebugCommand = 8,
	EJackTickComponentDisabledPurpose__MAX = 9
};


// Enum JackGame.EJackParticleSystemControl
enum class EJackParticleSystemControl : uint8_t
{
	EJackParticleSystemControl__Character = 0,
	EJackParticleSystemControl__WeaponSystem = 1,
	EJackParticleSystemControl__PropSystem = 2,
	EJackParticleSystemControl__MAX = 3
};


// Enum JackGame.EJackFriendCharacterQueryFilter
enum class EJackFriendCharacterQueryFilter : uint8_t
{
	EJackFriendCharacterQueryFilter__FriendsWithMenuDisp = 0,
	EJackFriendCharacterQueryFilter__FriendsWithoutLeaving = 1,
	EJackFriendCharacterQueryFilter__Friends = 2,
	EJackFriendCharacterQueryFilter__MAX = 3
};


// Enum JackGame.EJackPlayerController
enum class EJackPlayerController : uint8_t
{
	Player1 = 0,
	Player2 = 1,
	Battle  = 2,
	MAX     = 3
};


// Enum JackGame.EJackCollisionProfile
enum class EJackCollisionProfile : uint8_t
{
	EJackCollisionProfile__Pawn    = 0,
	EJackCollisionProfile__MAX     = 1
};


// Enum JackGame.EJackDressupCoordinateLockReason
enum class EJackDressupCoordinateLockReason : uint8_t
{
	EJackDressupCoordinateLockReason__Level = 0,
	EJackDressupCoordinateLockReason__Noroi = 1,
	EJackDressupCoordinateLockReason__Vehicle = 2,
	EJackDressupCoordinateLockReason__None = 3,
	EJackDressupCoordinateLockReason__MAX = 4
};


// Enum JackGame.EJackCharacterScope
enum class EJackCharacterScope : uint8_t
{
	EJackCharacterScope__None      = 0,
	EJackCharacterScope__All       = 1,
	EJackCharacterScope__Players   = 2,
	EJackCharacterScope__Friends   = 3,
	EJackCharacterScope__Monsters  = 4,
	EJackCharacterScope__NPCs      = 5,
	EJackCharacterScope__Vehicles  = 6,
	EJackCharacterScope__MAX       = 7
};


// Enum JackGame.EJackCharacterEffectSizeLayer
enum class EJackCharacterEffectSizeLayer : uint8_t
{
	EJackCharacterEffectSizeLayer__Default = 0,
	EJackCharacterEffectSizeLayer__ActionCast = 1,
	EJackCharacterEffectSizeLayer__ActionEffect = 2,
	EJackCharacterEffectSizeLayer__MAX = 3
};


// Enum JackGame.EJackCharacterEffectSize
enum class EJackCharacterEffectSize : uint8_t
{
	EJackCharacterEffectSize__Human = 0,
	EJackCharacterEffectSize__S    = 1,
	EJackCharacterEffectSize__M    = 2,
	EJackCharacterEffectSize__L    = 3,
	EJackCharacterEffectSize__LL   = 4,
	EJackCharacterEffectSize__MAX  = 5
};


// Enum JackGame.EJackOddEffectParam
enum class EJackOddEffectParam : uint8_t
{
	EJackOddEffectParam__None      = 0,
	EJackOddEffectParam__Kougekiryoku = 1,
	EJackOddEffectParam__Syubiryoku = 2,
	EJackOddEffectParam__MAX       = 3
};


// Enum JackGame.EJackReferenceParamTarget
enum class EJackReferenceParamTarget : uint8_t
{
	EJackReferenceParamTarget__None = 0,
	EJackReferenceParamTarget__CasterCharacter = 1,
	EJackReferenceParamTarget__TargetCharacter = 2,
	EJackReferenceParamTarget__MAX = 3
};


// Enum JackGame.EJackReferenceParam
enum class EJackReferenceParam : uint8_t
{
	EJackReferenceParam__None      = 0,
	EJackReferenceParam__MaxHP     = 1,
	EJackReferenceParam__MaxMP     = 2,
	EJackReferenceParam__HP        = 3,
	EJackReferenceParam__MP        = 4,
	EJackReferenceParam__Tikara    = 5,
	EJackReferenceParam__Subayasa  = 6,
	EJackReferenceParam__Minomamori = 7,
	EJackReferenceParam__Kiyousa   = 8,
	EJackReferenceParam__Miryoku   = 9,
	EJackReferenceParam__Kougekiryoku = 10,
	EJackReferenceParam__Syubiryoku = 11,
	EJackReferenceParam__KougekiMaryoku = 12,
	EJackReferenceParam__KaifukuMaryoku = 13,
	EJackReferenceParam__TakaihounoMaryoku = 14,
	EJackReferenceParam__Omosa     = 15,
	EJackReferenceParam__CriticalRate = 16,
	EJackReferenceParam__MPKyuuSyuuRate = 17,
	EJackReferenceParam__TateGuardRate = 18,
	EJackReferenceParam__BukiGuardRate = 19,
	EJackReferenceParam__MikawasiRate = 20,
	EJackReferenceParam__ZibariaDamage = 21,
	EJackReferenceParam__RefAutoKaifuku = 22,
	EJackReferenceParam__Level     = 23,
	EJackReferenceParam__RenkeiTikara = 24,
	EJackReferenceParam__RenkeiKougekiryoku = 25,
	EJackReferenceParam__RenkeiKougekiMaryoku = 26,
	EJackReferenceParam__RenkeiLevel = 27,
	EJackReferenceParam__Special   = 28,
	EJackReferenceParam__MAX       = 29
};


// Enum JackGame.EJackAttributeParam
enum class EJackAttributeParam : uint8_t
{
	EJackAttributeParam__None      = 0,
	EJackAttributeParam__Honoo     = 1,
	EJackAttributeParam__Koori     = 2,
	EJackAttributeParam__Kaze      = 3,
	EJackAttributeParam__Kaminari  = 4,
	EJackAttributeParam__Tuti      = 5,
	EJackAttributeParam__Yami      = 6,
	EJackAttributeParam__Hikari    = 7,
	EJackAttributeParam__Doku      = 8,
	EJackAttributeParam__Nemuri    = 9,
	EJackAttributeParam__Konran    = 10,
	EJackAttributeParam__Mahi      = 11,
	EJackAttributeParam__Sokusi    = 12,
	EJackAttributeParam__Miryou    = 13,
	EJackAttributeParam__Genwaku   = 14,
	EJackAttributeParam__Noroi     = 15,
	EJackAttributeParam__Nifuramu  = 16,
	EJackAttributeParam__Kyuusyuu  = 17,
	EJackAttributeParam__Guntai    = 18,
	EJackAttributeParam__Mitoreru  = 19,
	EJackAttributeParam__HPWariaiDamage = 20,
	EJackAttributeParam__Fuuin_Jumon = 21,
	EJackAttributeParam__Fuuin_Tokugi = 22,
	EJackAttributeParam__Obie      = 23,
	EJackAttributeParam__Korobi    = 24,
	EJackAttributeParam__PafuPafu  = 25,
	EJackAttributeParam__Warai     = 26,
	EJackAttributeParam__Odori     = 27,
	EJackAttributeParam__KougekiryokuDown = 28,
	EJackAttributeParam__SyubiryokuDown = 29,
	EJackAttributeParam__KougekiJumonDown = 30,
	EJackAttributeParam__KaifukuJumonDown = 31,
	EJackAttributeParam__SubayasaDown = 32,
	EJackAttributeParam__JumonTaiseiDown = 33,
	EJackAttributeParam__ZokuseiDown = 34,
	EJackAttributeParam__TaiseiDown = 35,
	EJackAttributeParam__Zone      = 36,
	EJackAttributeParam__Mikawasi  = 37,
	EJackAttributeParam__TateGuard = 38,
	EJackAttributeParam__BukiGuard = 39,
	EJackAttributeParam__Critical  = 40,
	EJackAttributeParam__Mitoresase = 41,
	EJackAttributeParam__MAX       = 42
};


// Enum JackGame.EJackStatusParam
enum class EJackStatusParam : uint8_t
{
	EJackStatusParam__None         = 0,
	EJackStatusParam__MaxHP        = 1,
	EJackStatusParam__MaxMP        = 2,
	EJackStatusParam__HP           = 3,
	EJackStatusParam__MP           = 4,
	EJackStatusParam__Tikara       = 5,
	EJackStatusParam__Subayasa     = 6,
	EJackStatusParam__Minomamori   = 7,
	EJackStatusParam__Kiyousa      = 8,
	EJackStatusParam__Miryoku      = 9,
	EJackStatusParam__Kougekiryoku = 10,
	EJackStatusParam__Syubiryoku   = 11,
	EJackStatusParam__KougekiMaryoku = 12,
	EJackStatusParam__KaifukuMaryoku = 13,
	EJackStatusParam__Omosa        = 14,
	EJackStatusParam__CriticalRate = 15,
	EJackStatusParam__MPKyuuSyuuRate = 16,
	EJackStatusParam__TateGuardRate = 17,
	EJackStatusParam__BukiGuardRate = 18,
	EJackStatusParam__MikawasiRate = 19,
	EJackStatusParam__ZibariaDamage = 20,
	EJackStatusParam__RefAutoKaifuku = 21,
	EJackStatusParam__MAX          = 22
};


// Enum JackGame.EJackAnimalReaction
enum class EJackAnimalReaction : uint8_t
{
	EJackAnimalReaction__None      = 0,
	EJackAnimalReaction__HorseType = 1,
	EJackAnimalReaction__CowType   = 2,
	EJackAnimalReaction__MiddleDogType = 3,
	EJackAnimalReaction__SmallAnimalType = 4,
	EJackAnimalReaction__MAX       = 5
};


// Enum JackGame.EJackAnimalRace
enum class EJackAnimalRace : uint8_t
{
	EJackAnimalRace__None          = 0,
	EJackAnimalRace__Beast         = 1,
	EJackAnimalRace__Bird          = 2,
	EJackAnimalRace__Fish          = 3,
	EJackAnimalRace__MAX           = 4
};


// Enum JackGame.EJackAnimal
enum class EJackAnimal : uint8_t
{
	EJackAnimal__None              = 0,
	EJackAnimal__Dog               = 1,
	EJackAnimal__Mouse             = 2,
	EJackAnimal__Chiken            = 3,
	EJackAnimal__MAX               = 4
};


// Enum JackGame.EJackScenarioWeather
enum class EJackScenarioWeather : uint8_t
{
	EJackScenarioWeather__None     = 0,
	EJackScenarioWeather__Sunny    = 1,
	EJackScenarioWeather__Rain     = 2,
	EJackScenarioWeather__Snow     = 3,
	EJackScenarioWeather__Fog      = 4,
	EJackScenarioWeather__MAX      = 5
};


// Enum JackGame.EJackNounGender
enum class EJackNounGender : uint8_t
{
	EJackNounGender__None          = 0,
	EJackNounGender__M             = 1,
	EJackNounGender__F             = 2,
	EJackNounGender__N             = 3,
	EJackNounGender__Num           = 4,
	EJackNounGender__EJackNounGender_MAX = 5
};


// Enum JackGame.EJackCharacterMovementAnimationPlayRatePurpose
enum class EJackCharacterMovementAnimationPlayRatePurpose : uint8_t
{
	EJackCharacterMovementAnimationPlayRatePurpose__Battle = 0,
	EJackCharacterMovementAnimationPlayRatePurpose__Follow = 1,
	EJackCharacterMovementAnimationPlayRatePurpose__DebugCommand = 2,
	EJackCharacterMovementAnimationPlayRatePurpose__MAX = 3
};


// Enum JackGame.EJackEdition
enum class EJackEdition : uint8_t
{
	EJackEdition__None             = 0,
	EJackEdition__Japanese         = 1,
	EJackEdition__International    = 2,
	EJackEdition__MAX              = 3
};


// Enum JackGame.EJackGameViewportClientControlCategory
enum class EJackGameViewportClientControlCategory : uint8_t
{
	EJackGameViewportClientControlCategory__SceneCapture = 0,
	EJackGameViewportClientControlCategory__SkillPanel = 1,
	EJackGameViewportClientControlCategory__Movie = 2,
	EJackGameViewportClientControlCategory__Renkei = 3,
	EJackGameViewportClientControlCategory__MAX = 4
};


// Enum JackGame.EJackSerializeArrayMode
enum class EJackSerializeArrayMode : uint8_t
{
	EJackSerializeArrayMode__Default = 0,
	EJackSerializeArrayMode__ValidOnly = 1,
	EJackSerializeArrayMode__WithoutBackInvalid = 2,
	EJackSerializeArrayMode__MAX   = 3
};


// Enum JackGame.EJackRegion
enum class EJackRegion : uint8_t
{
	EJackRegion__NorthAmerica      = 0,
	EJackRegion__Europe            = 1,
	EJackRegion__Asia              = 2,
	EJackRegion__MAX               = 3
};


// Enum JackGame.EJackCategoryHiddenLayer
enum class EJackCategoryHiddenLayer : uint8_t
{
	EJackCategoryHiddenLayer__Battle = 0,
	EJackCategoryHiddenLayer__NakamaKaiwa = 1,
	EJackCategoryHiddenLayer__Camp = 2,
	EJackCategoryHiddenLayer__CutScene = 3,
	EJackCategoryHiddenLayer__Debug = 4,
	EJackCategoryHiddenLayer__MAX  = 5
};


// Enum JackGame.EJackCategoryHiddenType
enum class EJackCategoryHiddenType : uint8_t
{
	EJackCategoryHiddenType__NPC   = 0,
	EJackCategoryHiddenType__Monster = 1,
	EJackCategoryHiddenType__EventMonster = 2,
	EJackCategoryHiddenType__Animal = 3,
	EJackCategoryHiddenType__TokiNoKesin = 4,
	EJackCategoryHiddenType__Vehicle = 5,
	EJackCategoryHiddenType__Object = 6,
	EJackCategoryHiddenType__Object_Battle = 7,
	EJackCategoryHiddenType__Object_CutScene = 8,
	EJackCategoryHiddenType__ParadeNPC = 9,
	EJackCategoryHiddenType__MAX   = 10
};


// Enum JackGame.EJackVoicePresetFlag
enum class EJackVoicePresetFlag : uint8_t
{
	EJackVoicePresetFlag__InvalidLipSync = 0,
	EJackVoicePresetFlag__MAX      = 1
};


// Enum JackGame.EJackCoordSound
enum class EJackCoordSound : uint8_t
{
	EJackCoordSound__Walk          = 0,
	EJackCoordSound__Run           = 1,
	EJackCoordSound__Dash          = 2,
	EJackCoordSound__ArmUp         = 3,
	EJackCoordSound__ArmDown       = 4,
	EJackCoordSound__Sit           = 5,
	EJackCoordSound__Stand         = 6,
	EJackCoordSound__Jump          = 7,
	EJackCoordSound__Land          = 8,
	EJackCoordSound__Turn          = 9,
	EJackCoordSound__ArmHard       = 10,
	EJackCoordSound__BodyHard      = 11,
	EJackCoordSound__Down          = 12,
	EJackCoordSound__CS1           = 13,
	EJackCoordSound__CS2           = 14,
	EJackCoordSound__CS3           = 15,
	EJackCoordSound__CS4           = 16,
	EJackCoordSound__CS5           = 17,
	EJackCoordSound__CS6           = 18,
	EJackCoordSound__CS7           = 19,
	EJackCoordSound__CS8           = 20,
	EJackCoordSound__MAX           = 21
};


// Enum JackGame.EJackMEType
enum class EJackMEType : uint8_t
{
	EJackMEType__Default           = 0,
	EJackMEType__BattleWin         = 1,
	EJackMEType__Minigame          = 2,
	EJackMEType__Dokodemokazi      = 3,
	EJackMEType__MAX               = 4
};


// Enum JackGame.EJackSEADCategoryLayer
enum class EJackSEADCategoryLayer : uint8_t
{
	EJackSEADCategoryLayer__Debug  = 0,
	EJackSEADCategoryLayer__Game   = 1,
	EJackSEADCategoryLayer__Config = 2,
	EJackSEADCategoryLayer__CutScene = 3,
	EJackSEADCategoryLayer__MAX    = 4
};


// Enum JackGame.EJackCameraFadeZLayer
enum class EJackCameraFadeZLayer : uint8_t
{
	EJackCameraFadeZLayer__UMGForeground = 0,
	EJackCameraFadeZLayer__UMGMessage = 1,
	EJackCameraFadeZLayer__UMGUiBackgound = 2,
	EJackCameraFadeZLayer__Camera  = 3,
	EJackCameraFadeZLayer__MAX     = 4
};


// Enum JackGame.EJackCameraFadeCategory
enum class EJackCameraFadeCategory : uint8_t
{
	EJackCameraFadeCategory__Menu  = 0,
	EJackCameraFadeCategory__MiniGame = 1,
	EJackCameraFadeCategory__CutSceneSkip = 2,
	EJackCameraFadeCategory__CutScene = 3,
	EJackCameraFadeCategory__CutSceneForeground = 4,
	EJackCameraFadeCategory__Level = 5,
	EJackCameraFadeCategory__Battle = 6,
	EJackCameraFadeCategory__Gimmick = 7,
	EJackCameraFadeCategory__Rura  = 8,
	EJackCameraFadeCategory__Other = 9,
	EJackCameraFadeCategory__MAX   = 10
};


// Enum JackGame.EJackCameraControlCategory
enum class EJackCameraControlCategory : uint8_t
{
	EJackCameraControlCategory__Battle = 0,
	EJackCameraControlCategory__BattleActionCamera = 1,
	EJackCameraControlCategory__LockEyeViewPoint = 2,
	EJackCameraControlCategory__MAX = 3
};


// Enum JackGame.EJackWorldTimeDilation
enum class EJackWorldTimeDilation : uint8_t
{
	EJackWorldTimeDilation__None   = 0,
	EJackWorldTimeDilation__World  = 1,
	EJackWorldTimeDilation__Matinee = 2,
	EJackWorldTimeDilation__DemoPlay = 3,
	EJackWorldTimeDilation__MAX    = 4
};


// Enum JackGame.EJackVisibility
enum class EJackVisibility : uint8_t
{
	EJackVisibility__Hidden        = 0,
	EJackVisibility__Visible       = 1,
	EJackVisibility__MAX           = 2
};


// Enum JackGame.EJackUmaRaceGameState
enum class EJackUmaRaceGameState : uint8_t
{
	EJackUmaRaceGameState__None    = 0,
	EJackUmaRaceGameState__Init    = 1,
	EJackUmaRaceGameState__Mount   = 2,
	EJackUmaRaceGameState__FadeIn  = 3,
	EJackUmaRaceGameState__StartDemo = 4,
	EJackUmaRaceGameState__StartDemo2 = 5,
	EJackUmaRaceGameState__StartDemo3 = 6,
	EJackUmaRaceGameState__Game    = 7,
	EJackUmaRaceGameState__Result  = 8,
	EJackUmaRaceGameState__ResultDemo = 9,
	EJackUmaRaceGameState__ResultRetire = 10,
	EJackUmaRaceGameState__Unmount = 11,
	EJackUmaRaceGameState__Finish  = 12,
	EJackUmaRaceGameState__Max     = 13
};


// Enum JackGame.EJackUmaRaceFarisFlagState
enum class EJackUmaRaceFarisFlagState : uint8_t
{
	EJackUmaRaceFarisFlagState__Before = 0,
	EJackUmaRaceFarisFlagState__After = 1,
	EJackUmaRaceFarisFlagState__Max = 2
};


// Enum JackGame.EJackUmaRaceDash
enum class EJackUmaRaceDash : uint8_t
{
	EJackUmaRaceDash__None         = 0,
	EJackUmaRaceDash__Dash1st      = 1,
	EJackUmaRaceDash__Dash2nd      = 2,
	EJackUmaRaceDash__Dash3rd      = 3,
	EJackUmaRaceDash__Max          = 4
};


// Enum JackGame.EJackUmaRaceOrbit
enum class EJackUmaRaceOrbit : uint8_t
{
	EJackUmaRaceOrbit__None        = 0,
	EJackUmaRaceOrbit__Advanced    = 1,
	EJackUmaRaceOrbit__Back        = 2,
	EJackUmaRaceOrbit__Max         = 3
};


// Enum JackGame.EJackUmaRaceDashGaugeState
enum class EJackUmaRaceDashGaugeState : uint8_t
{
	EJackUmaRaceDashGaugeState__Full = 0,
	EJackUmaRaceDashGaugeState__Slightly = 1,
	EJackUmaRaceDashGaugeState__Nothing = 2,
	EJackUmaRaceDashGaugeState__RecoveryStart = 3,
	EJackUmaRaceDashGaugeState__Recovery = 4,
	EJackUmaRaceDashGaugeState__Max = 5
};


// Enum JackGame.EJackUmaRaceEntranceIcon
enum class EJackUmaRaceEntranceIcon : uint8_t
{
	EJackUmaRaceEntranceIcon__FrameOnly = 0,
	EJackUmaRaceEntranceIcon__Start01 = 1,
	EJackUmaRaceEntranceIcon__Start02 = 2,
	EJackUmaRaceEntranceIcon__Start03 = 3,
	EJackUmaRaceEntranceIcon__Lock = 4,
	EJackUmaRaceEntranceIcon__CheckMark = 5,
	EJackUmaRaceEntranceIcon__Max  = 6
};


// Enum JackGame.EJackUmaRaceHorseType
enum class EJackUmaRaceHorseType : uint8_t
{
	EJackUmaRaceHorseType__Horse01 = 0,
	EJackUmaRaceHorseType__Horse02 = 1,
	EJackUmaRaceHorseType__Horse03 = 2,
	EJackUmaRaceHorseType__Horse04 = 3,
	EJackUmaRaceHorseType__Horse05 = 4,
	EJackUmaRaceHorseType__Horse06 = 5,
	EJackUmaRaceHorseType__Horse08 = 6,
	EJackUmaRaceHorseType__Random  = 7,
	EJackUmaRaceHorseType__Max     = 8
};


// Enum JackGame.EJackUmaRaceDifficulty
enum class EJackUmaRaceDifficulty : uint8_t
{
	EJackUmaRaceDifficulty__Normal = 0,
	EJackUmaRaceDifficulty__Hard   = 1,
	EJackUmaRaceDifficulty__Max    = 2
};


// Enum JackGame.EJackUmaRaceRank
enum class EJackUmaRaceRank : uint8_t
{
	EJackUmaRaceRank__None         = 0,
	EJackUmaRaceRank__RankS        = 1,
	EJackUmaRaceRank__RankA        = 2,
	EJackUmaRaceRank__RankB        = 3,
	EJackUmaRaceRank__RankC        = 4,
	EJackUmaRaceRank__RankD        = 5,
	EJackUmaRaceRank__RankFalice   = 6,
	EJackUmaRaceRank__Max          = 7
};


// Enum JackGame.EJackCameraMode
enum class EJackCameraMode : uint8_t
{
	None          = 0,
	PlayerView    = 1,
	BattleView    = 2,
	BattleSimpleView = 3,
	BattlePreparationView = 4,
	Rail          = 5,
	Debug         = 6,
	IndoorView    = 7,
	BattleActionView = 8,
	BattleResultView = 9,
	TalkView      = 10,
	IndoorTalkView = 11,
	BattleMonsterAppearance = 12,
	FirstPersonView = 13,
	SplinePath    = 14,
	FixCameraView = 15,
	FriendTalkView = 16,
	JumpPlayerView = 17,
	BackPlayerView = 18,
	UmaRaceView   = 19,
	ChangeTimeView = 20,
	UmaRaceResultView = 21,
	PhotoModeView = 22,
	MAX           = 23
};


// Enum JackGame.EJackUMGSoubiScreenMode
enum class EJackUMGSoubiScreenMode : uint8_t
{
	EJackUMGSoubiScreenMode__CharacterSelect = 0,
	EJackUMGSoubiScreenMode__RegionSelect = 1,
	EJackUMGSoubiScreenMode__ItemSelect = 2,
	EJackUMGSoubiScreenMode__MitameSelect = 3,
	EJackUMGSoubiScreenMode__MAX   = 4
};


// Enum JackGame.EJackUMGOddEffectFlow
enum class EJackUMGOddEffectFlow : uint8_t
{
	EJackUMGOddEffectFlow__None    = 0,
	EJackUMGOddEffectFlow__Clear   = 1,
	EJackUMGOddEffectFlow__Set     = 2,
	EJackUMGOddEffectFlow__Temp    = 3,
	EJackUMGOddEffectFlow__MAX     = 4
};


// Enum JackGame.EJackUMGEquipmentResult
enum class EJackUMGEquipmentResult : uint8_t
{
	EJackUMGEquipmentResult__Equipped = 0,
	EJackUMGEquipmentResult__BouguSibari = 1,
	EJackUMGEquipmentResult__DoubleHand = 2,
	EJackUMGEquipmentResult__Cancel = 3,
	EJackUMGEquipmentResult__MAX   = 4
};


// Enum JackGame.EJackUMGDouguSeiriResult
enum class EJackUMGDouguSeiriResult : uint8_t
{
	EJackUMGDouguSeiriResult__ExecutedOK = 0,
	EJackUMGDouguSeiriResult__ExecutedRemove = 1,
	EJackUMGDouguSeiriResult__CancelSeiri = 2,
	EJackUMGDouguSeiriResult__CancelRemove = 3,
	EJackUMGDouguSeiriResult__NoneItem = 4,
	EJackUMGDouguSeiriResult__MAX  = 5
};


// Enum JackGame.EJackUMGCountBagItemType
enum class EJackUMGCountBagItemType : uint8_t
{
	EJackUMGCountBagItemType__SpecifiedBag = 0,
	EJackUMGCountBagItemType__AllMembersBag = 1,
	EJackUMGCountBagItemType__CommonBag = 2,
	EJackUMGCountBagItemType__SpecifiedBagWithCommonBag = 3,
	EJackUMGCountBagItemType__AllBag = 4,
	EJackUMGCountBagItemType__MAX  = 5
};


// Enum JackGame.EJackUMGShopCurrency
enum class EJackUMGShopCurrency : uint8_t
{
	EJackUMGShopCurrency__Gold     = 0,
	EJackUMGShopCurrency__Medal    = 1,
	EJackUMGShopCurrency__CasinoCoin = 2,
	EJackUMGShopCurrency__MAX      = 3
};


// Enum JackGame.EJackTuyosaPage
enum class EJackTuyosaPage : uint8_t
{
	EJackTuyosaPage__Detail        = 0,
	EJackTuyosaPage__Jumon         = 1,
	EJackTuyosaPage__Tokugi        = 2,
	EJackTuyosaPage__Skill         = 3,
	EJackTuyosaPage__Renkei        = 4,
	EJackTuyosaPage__Kazi          = 5,
	EJackTuyosaPage__Tokusyu       = 6,
	EJackTuyosaPage__MAX           = 7
};


// Enum JackGame.EJackSaveDataSlotIndex
enum class EJackSaveDataSlotIndex : uint8_t
{
	EJackSaveDataSlotIndex__Slot0  = 0,
	EJackSaveDataSlotIndex__Slot1  = 1,
	EJackSaveDataSlotIndex__Slot2  = 2,
	EJackSaveDataSlotIndex__Slot3  = 3,
	EJackSaveDataSlotIndex__Slot4  = 4,
	EJackSaveDataSlotIndex__Slot5  = 5,
	EJackSaveDataSlotIndex__Slot6  = 6,
	EJackSaveDataSlotIndex__Slot7  = 7,
	EJackSaveDataSlotIndex__Slot8  = 8,
	EJackSaveDataSlotIndex__AutoSave = 9,
	EJackSaveDataSlotIndex__MAX    = 10
};


// Enum JackGame.EJackUMGSaveDataCheckResult
enum class EJackUMGSaveDataCheckResult : uint8_t
{
	EJackUMGSaveDataCheckResult__Success = 0,
	EJackUMGSaveDataCheckResult__Restore = 1,
	EJackUMGSaveDataCheckResult__ReCreate = 2,
	EJackUMGSaveDataCheckResult__Failed = 3,
	EJackUMGSaveDataCheckResult__NoSpage = 4,
	EJackUMGSaveDataCheckResult__MAX = 5
};


// Enum JackGame.EJackUMGSaveDataCheckPoint
enum class EJackUMGSaveDataCheckPoint : uint8_t
{
	EJackUMGSaveDataCheckPoint__StartGame = 0,
	EJackUMGSaveDataCheckPoint__OpenSaveDataList = 1,
	EJackUMGSaveDataCheckPoint__CreateSaveData = 2,
	EJackUMGSaveDataCheckPoint__LoadData = 3,
	EJackUMGSaveDataCheckPoint__BeforeSave = 4,
	EJackUMGSaveDataCheckPoint__SaveData = 5,
	EJackUMGSaveDataCheckPoint__AutoSave = 6,
	EJackUMGSaveDataCheckPoint__FusigiNaKaji = 7,
	EJackUMGSaveDataCheckPoint__OpenSaveDataTrial = 8,
	EJackUMGSaveDataCheckPoint__MAX = 9
};


// Enum JackGame.EJackUMGMitameSoubiState
enum class EJackUMGMitameSoubiState : uint8_t
{
	EJackUMGMitameSoubiState__NotAcquired = 0,
	EJackUMGMitameSoubiState__Disable = 1,
	EJackUMGMitameSoubiState__Validity = 2,
	EJackUMGMitameSoubiState__New  = 3,
	EJackUMGMitameSoubiState__None = 4,
	EJackUMGMitameSoubiState__MAX  = 5
};


// Enum JackGame.EJackUMGSenrekiSortBamen
enum class EJackUMGSenrekiSortBamen : uint8_t
{
	EJackUMGSenrekiSortBamen__Monster = 0,
	EJackUMGSenrekiSortBamen__Item = 1,
	EJackUMGSenrekiSortBamen__Syougou = 2,
	EJackUMGSenrekiSortBamen__MAX  = 3
};


// Enum JackGame.EJackUMGSenrekiSortMode
enum class EJackUMGSenrekiSortMode : uint8_t
{
	EJackUMGSenrekiSortMode__GojuuonJun = 0,
	EJackUMGSenrekiSortMode__SyuruiJun = 1,
	EJackUMGSenrekiSortMode__MAX   = 2
};


// Enum JackGame.EJackUMGSenrekiMonsterMode
enum class EJackUMGSenrekiMonsterMode : uint8_t
{
	EJackUMGSenrekiMonsterMode__NowField = 0,
	EJackUMGSenrekiMonsterMode__Seisokuti = 1,
	EJackUMGSenrekiMonsterMode__Keitou = 2,
	EJackUMGSenrekiMonsterMode__AllMonster = 3,
	EJackUMGSenrekiMonsterMode__MAX = 4
};


// Enum JackGame.EJackSyuurenjouMenuResult
enum class EJackSyuurenjouMenuResult : uint8_t
{
	EJackSyuurenjouMenuResult__Cancel = 0,
	EJackSyuurenjouMenuResult__Ok  = 1,
	EJackSyuurenjouMenuResult__MAX = 2
};


// Enum JackGame.EJackCameraMedeSelectStick
enum class EJackCameraMedeSelectStick : uint8_t
{
	EJackCameraMedeSelectStick__Stick_Neutral = 0,
	EJackCameraMedeSelectStick__Stick_Up = 1,
	EJackCameraMedeSelectStick__Stick_Down = 2,
	EJackCameraMedeSelectStick__Stick_Right = 3,
	EJackCameraMedeSelectStick__Stick_Left = 4,
	EJackCameraMedeSelectStick__Arrow_Right = 5,
	EJackCameraMedeSelectStick__Arrow_Left = 6,
	EJackCameraMedeSelectStick__Arrow_Up = 7,
	EJackCameraMedeSelectStick__Arrow_Down = 8,
	EJackCameraMedeSelectStick__MAX = 9
};


// Enum JackGame.EJackUMGCameraModeSelectState
enum class EJackUMGCameraModeSelectState : uint8_t
{
	EJackUMGCameraModeSelectState__Initial = 0,
	EJackUMGCameraModeSelectState__WaitRequest = 1,
	EJackUMGCameraModeSelectState__WaitOpen = 2,
	EJackUMGCameraModeSelectState__WaitAfterOpen = 3,
	EJackUMGCameraModeSelectState__WaitAfterPlay = 4,
	EJackUMGCameraModeSelectState__WaitClose = 5,
	EJackUMGCameraModeSelectState__WaitAfterClose = 6,
	EJackUMGCameraModeSelectState__WaitBeforeClose = 7,
	EJackUMGCameraModeSelectState__WaitBeforeReOpen = 8,
	EJackUMGCameraModeSelectState__MAX = 9
};


// Enum JackGame.EJackFukubikiLotteryResult
enum class EJackFukubikiLotteryResult : uint8_t
{
	EJackFukubikiLotteryResult__ThreeSunMarks = 0,
	EJackFukubikiLotteryResult__ThreeStarMarks = 1,
	EJackFukubikiLotteryResult__ThreeMoonMarks = 2,
	EJackFukubikiLotteryResult__ThreeWaterMarks = 3,
	EJackFukubikiLotteryResult__ThreeHeartMarks = 4,
	EJackFukubikiLotteryResult__TwoSunMarks = 5,
	EJackFukubikiLotteryResult__TwoStarMarks = 6,
	EJackFukubikiLotteryResult__TwoMoonMarks = 7,
	EJackFukubikiLotteryResult__TwoWaterMarks = 8,
	EJackFukubikiLotteryResult__TwoHeartMarks = 9,
	EJackFukubikiLotteryResult__NoPear = 10,
	EJackFukubikiLotteryResult__MAX = 11
};


// Enum JackGame.EJackFukubikiMark
enum class EJackFukubikiMark : uint8_t
{
	EJackFukubikiMark__Sun         = 0,
	EJackFukubikiMark__Star        = 1,
	EJackFukubikiMark__Moon        = 2,
	EJackFukubikiMark__Water       = 3,
	EJackFukubikiMark__Heart       = 4,
	EJackFukubikiMark__MAX         = 5
};


// Enum JackGame.EJackUMGTurnAction
enum class EJackUMGTurnAction : uint8_t
{
	EJackUMGTurnAction__Normal     = 0,
	EJackUMGTurnAction__Appear     = 1,
	EJackUMGTurnAction__Disappear  = 2,
	EJackUMGTurnAction__MAX        = 3
};


// Enum JackGame.EJackUMGMapResourceType
enum class EJackUMGMapResourceType : uint8_t
{
	EJackUMGMapResourceType__MapOpenTexture = 0,
	EJackUMGMapResourceType__MapMaskTexture = 1,
	EJackUMGMapResourceType__MiniMapTexture = 2,
	EJackUMGMapResourceType__JourneyTexture = 3,
	EJackUMGMapResourceType__MapTextWidget = 4,
	EJackUMGMapResourceType__MAX   = 5
};


// Enum JackGame.EJackMedalStampAnimFlag
enum class EJackMedalStampAnimFlag : uint8_t
{
	EJackMedalStampAnimFlag__None  = 0,
	EJackMedalStampAnimFlag__Wait  = 1,
	EJackMedalStampAnimFlag__Stamp = 2,
	EJackMedalStampAnimFlag__StampMiddle = 3,
	EJackMedalStampAnimFlag__StampLarge = 4,
	EJackMedalStampAnimFlag__ShowTreasureBox = 5,
	EJackMedalStampAnimFlag__ShowRareTreasureBox = 6,
	EJackMedalStampAnimFlag__HideTreasureBox = 7,
	EJackMedalStampAnimFlag__ShowItemGetMessage = 8,
	EJackMedalStampAnimFlag__UpdateItemInfo = 9,
	EJackMedalStampAnimFlag__ShowBottomInfo = 10,
	EJackMedalStampAnimFlag__HideBottomInfo = 11,
	EJackMedalStampAnimFlag__ShowCompleteMessage = 12,
	EJackMedalStampAnimFlag__ShowCompleteStamp = 13,
	EJackMedalStampAnimFlag__NextPageMessage = 14,
	EJackMedalStampAnimFlag__ShowPage = 15,
	EJackMedalStampAnimFlag__HidePage = 16,
	EJackMedalStampAnimFlag__FullComplete = 17,
	EJackMedalStampAnimFlag__MAX   = 18
};


// Enum JackGame.EJackSaveSlotSearchType
enum class EJackSaveSlotSearchType : uint8_t
{
	EJackSaveSlotSearchType__None  = 0,
	EJackSaveSlotSearchType__Empty = 1,
	EJackSaveSlotSearchType__Latest = 2,
	EJackSaveSlotSearchType__SmallNumber = 3,
	EJackSaveSlotSearchType__MAX   = 4
};


// Enum JackGame.EJackUMGModeSelectMovieState
enum class EJackUMGModeSelectMovieState : uint8_t
{
	EJackUMGModeSelectMovieState__Initial = 0,
	EJackUMGModeSelectMovieState__WaitInitialize = 1,
	EJackUMGModeSelectMovieState__WaitReadyToPlay = 2,
	EJackUMGModeSelectMovieState__WaitEndFadeIn = 3,
	EJackUMGModeSelectMovieState__PlayMovie = 4,
	EJackUMGModeSelectMovieState__MAX = 5
};


// Enum JackGame.EJackSerifuWindowEmojiFlag
enum class EJackSerifuWindowEmojiFlag : uint8_t
{
	EJackSerifuWindowEmojiFlag__Ignore = 0,
	EJackSerifuWindowEmojiFlag__Normal = 1,
	EJackSerifuWindowEmojiFlag__Reverse = 2,
	EJackSerifuWindowEmojiFlag__MAX = 3
};


// Enum JackGame.EJackSelectWindowType
enum class EJackSelectWindowType : uint8_t
{
	EJackSelectWindowType__Default = 0,
	EJackSelectWindowType__YesOrNo = 1,
	EJackSelectWindowType__HotelRaiseTime = 2,
	EJackSelectWindowType__Custom  = 3,
	EJackSelectWindowType__Blacksmith = 4,
	EJackSelectWindowType__MAX     = 5
};


// Enum JackGame.EJackTokugiMatomeIconAnim
enum class EJackTokugiMatomeIconAnim : uint8_t
{
	EJackTokugiMatomeIconAnim__None = 0,
	EJackTokugiMatomeIconAnim__Circle_On = 1,
	EJackTokugiMatomeIconAnim__Check_On = 2,
	EJackTokugiMatomeIconAnim__Lock_On = 3,
	EJackTokugiMatomeIconAnim__Star_On = 4,
	EJackTokugiMatomeIconAnim__Secret_On = 5,
	EJackTokugiMatomeIconAnim__Circle_In_Out = 6,
	EJackTokugiMatomeIconAnim__Check_In_Out = 7,
	EJackTokugiMatomeIconAnim__Secret_In_Out = 8,
	EJackTokugiMatomeIconAnim__Check_To_Lock = 9,
	EJackTokugiMatomeIconAnim__Check_To_Star = 10,
	EJackTokugiMatomeIconAnim__MAX = 11
};


// Enum JackGame.EJackTokugiPieceAnim
enum class EJackTokugiPieceAnim : uint8_t
{
	EJackTokugiPieceAnim__None     = 0,
	EJackTokugiPieceAnim__Close    = 1,
	EJackTokugiPieceAnim__Open     = 2,
	EJackTokugiPieceAnim__ProvMaster = 3,
	EJackTokugiPieceAnim__Master   = 4,
	EJackTokugiPieceAnim__Change_Master = 5,
	EJackTokugiPieceAnim__Change_Master01 = 6,
	EJackTokugiPieceAnim__ChangeGrow_Open = 7,
	EJackTokugiPieceAnim__Change_ProvMaster = 8,
	EJackTokugiPieceAnim__ChangeGrow_ProvMasterFromClose = 9,
	EJackTokugiPieceAnim__ChangeGrow_MasterFromProvMaster = 10,
	EJackTokugiPieceAnim__ChangeRoll_Open = 11,
	EJackTokugiPieceAnim__ChangeRoll_ProvMasterFromClose = 12,
	EJackTokugiPieceAnim__ChangeRoll_MasterFromClose_Reset = 13,
	EJackTokugiPieceAnim__ChangeRoll_MasterFromOpen_Reset = 14,
	EJackTokugiPieceAnim__Roll_Close = 15,
	EJackTokugiPieceAnim__MAX      = 16
};


// Enum JackGame.EJackTokugiQuestionAnim
enum class EJackTokugiQuestionAnim : uint8_t
{
	EJackTokugiQuestionAnim__None  = 0,
	EJackTokugiQuestionAnim__Dark  = 1,
	EJackTokugiQuestionAnim__Bright = 2,
	EJackTokugiQuestionAnim__Change_Open = 3,
	EJackTokugiQuestionAnim__Change_Dark_Bright = 4,
	EJackTokugiQuestionAnim__Reset_Dark_Dark = 5,
	EJackTokugiQuestionAnim__Reset_Dark_Bright = 6,
	EJackTokugiQuestionAnim__Reset_Bright_Bright = 7,
	EJackTokugiQuestionAnim__Reset_Bright_Open = 8,
	EJackTokugiQuestionAnim__Reset_Dark_Open = 9,
	EJackTokugiQuestionAnim__Open_Dark = 10,
	EJackTokugiQuestionAnim__Open_Bright = 11,
	EJackTokugiQuestionAnim__Dark_Dark = 12,
	EJackTokugiQuestionAnim__Bright_Bright = 13,
	EJackTokugiQuestionAnim__Bright_Dark = 14,
	EJackTokugiQuestionAnim__Close_Old = 15,
	EJackTokugiQuestionAnim__Cracked_Old = 16,
	EJackTokugiQuestionAnim__Open_Crack_Old = 17,
	EJackTokugiQuestionAnim__Crack_Close_Old = 18,
	EJackTokugiQuestionAnim__Open_Close_Old = 19,
	EJackTokugiQuestionAnim__Crack_Crack_Old = 20,
	EJackTokugiQuestionAnim__Reset_Crack_Crack_Old = 21,
	EJackTokugiQuestionAnim__Reset_Crack_Open_Old = 22,
	EJackTokugiQuestionAnim__Reset_Close_Open_Old = 23,
	EJackTokugiQuestionAnim__Reset_Close_Crack_Old = 24,
	EJackTokugiQuestionAnim__MAX   = 25
};


// Enum JackGame.EJackTokugiPanelMessageAnimFlag
enum class EJackTokugiPanelMessageAnimFlag : uint8_t
{
	EJackTokugiPanelMessageAnimFlag__ReleaseLock = 0,
	EJackTokugiPanelMessageAnimFlag__Master = 1,
	EJackTokugiPanelMessageAnimFlag__ClosedOtherSkillLinePanel = 2,
	EJackTokugiPanelMessageAnimFlag__SkillResetSuccess = 3,
	EJackTokugiPanelMessageAnimFlag__ResetAndClosedOtherLine = 4,
	EJackTokugiPanelMessageAnimFlag__NotifyLearnedRenkei = 5,
	EJackTokugiPanelMessageAnimFlag__DisplayAchievement = 6,
	EJackTokugiPanelMessageAnimFlag__ShowAtariEffect = 7,
	EJackTokugiPanelMessageAnimFlag__MAX = 8
};


// Enum JackGame.EJackTokugiPanelAnimFlag
enum class EJackTokugiPanelAnimFlag : uint8_t
{
	EJackTokugiPanelAnimFlag__None = 0,
	EJackTokugiPanelAnimFlag__Open = 1,
	EJackTokugiPanelAnimFlag__Master = 2,
	EJackTokugiPanelAnimFlag__Crack = 3,
	EJackTokugiPanelAnimFlag__HideSelectCursol = 4,
	EJackTokugiPanelAnimFlag__ShowSelectCursol = 5,
	EJackTokugiPanelAnimFlag__Wait = 6,
	EJackTokugiPanelAnimFlag__ProvMaster = 7,
	EJackTokugiPanelAnimFlag__CancelProvMaster = 8,
	EJackTokugiPanelAnimFlag__CancelOpen = 9,
	EJackTokugiPanelAnimFlag__CloseFromProvMater = 10,
	EJackTokugiPanelAnimFlag__CancelCrack = 11,
	EJackTokugiPanelAnimFlag__MasterFromProvMaster = 12,
	EJackTokugiPanelAnimFlag__HideSkillLineEffect = 13,
	EJackTokugiPanelAnimFlag__ShowSkillLineEffect = 14,
	EJackTokugiPanelAnimFlag__ProvMasterFromClose = 15,
	EJackTokugiPanelAnimFlag__ResetEffect = 16,
	EJackTokugiPanelAnimFlag__CancelMaster = 17,
	EJackTokugiPanelAnimFlag__CloseFromMater = 18,
	EJackTokugiPanelAnimFlag__PanelResetEffect = 19,
	EJackTokugiPanelAnimFlag__StateOpen = 20,
	EJackTokugiPanelAnimFlag__StateClose = 21,
	EJackTokugiPanelAnimFlag__ShowListUpdateEffect = 22,
	EJackTokugiPanelAnimFlag__DisplayMessage = 23,
	EJackTokugiPanelAnimFlag__MAX  = 24
};


// Enum JackGame.EJackTokugiPanelAnimCategory
enum class EJackTokugiPanelAnimCategory : uint8_t
{
	EJackTokugiPanelAnimCategory__None = 0,
	EJackTokugiPanelAnimCategory__ReleaseLockPanel = 1,
	EJackTokugiPanelAnimCategory__ExecuteMaster = 2,
	EJackTokugiPanelAnimCategory__ToggleProvMaster = 3,
	EJackTokugiPanelAnimCategory__ExecuteMultiMaster = 4,
	EJackTokugiPanelAnimCategory__CancelMultiMaster = 5,
	EJackTokugiPanelAnimCategory__ResumeMultiMaster = 6,
	EJackTokugiPanelAnimCategory__ExecuteSkillReset = 7,
	EJackTokugiPanelAnimCategory__EJackTokugiPanelAnimCategory_MAX = 8
};


// Enum JackGame.EJackTokugiPanelAdjoinPieceState
enum class EJackTokugiPanelAdjoinPieceState : uint8_t
{
	EJackTokugiPanelAdjoinPieceState__NotExist = 0,
	EJackTokugiPanelAdjoinPieceState__Close = 1,
	EJackTokugiPanelAdjoinPieceState__Open = 2,
	EJackTokugiPanelAdjoinPieceState__ProvMaster = 3,
	EJackTokugiPanelAdjoinPieceState__Master = 4,
	EJackTokugiPanelAdjoinPieceState__MAX = 5
};


// Enum JackGame.EJackTokugiPanelPieceState
enum class EJackTokugiPanelPieceState : uint8_t
{
	EJackTokugiPanelPieceState__Close = 0,
	EJackTokugiPanelPieceState__Open = 1,
	EJackTokugiPanelPieceState__Master = 2,
	EJackTokugiPanelPieceState__MAX = 3
};


// Enum JackGame.EJackTokugiPanelPageType
enum class EJackTokugiPanelPageType : uint8_t
{
	EJackTokugiPanelPageType__CharacterSelect = 0,
	EJackTokugiPanelPageType__SkillLineSelect = 1,
	EJackTokugiPanelPageType__SkillList = 2,
	EJackTokugiPanelPageType__MultiMaster = 3,
	EJackTokugiPanelPageType__SkillDescription = 4,
	EJackTokugiPanelPageType__TokugiPanel = 5,
	EJackTokugiPanelPageType__SkillReset = 6,
	EJackTokugiPanelPageType__MAX  = 7
};


// Enum JackGame.EJackTokugiPanelAdjoinPanelOpenTiming
enum class EJackTokugiPanelAdjoinPanelOpenTiming : uint8_t
{
	EJackTokugiPanelAdjoinPanelOpenTiming__Learning = 0,
	EJackTokugiPanelAdjoinPanelOpenTiming__AfterLearnMessage = 1,
	EJackTokugiPanelAdjoinPanelOpenTiming__AfterOtherAnim = 2,
	EJackTokugiPanelAdjoinPanelOpenTiming__ShowSelectCursol = 3,
	EJackTokugiPanelAdjoinPanelOpenTiming__MAX = 4
};


// Enum JackGame.EJackUMGModeSelectGotoState
enum class EJackUMGModeSelectGotoState : uint8_t
{
	EJackUMGModeSelectGotoState__GotoCameraMode = 0,
	EJackUMGModeSelectGotoState__Goto2dGameMode = 1,
	EJackUMGModeSelectGotoState__GotoPreviousMode = 2,
	EJackUMGModeSelectGotoState__MAX = 3
};


// Enum JackGame.EJackTokugiPanelWindowMode
enum class EJackTokugiPanelWindowMode : uint8_t
{
	EJackTokugiPanelWindowMode__Normal = 0,
	EJackTokugiPanelWindowMode__BattleResult = 1,
	EJackTokugiPanelWindowMode__Reset = 2,
	EJackTokugiPanelWindowMode__MAX = 3
};


// Enum JackGame.EJackVoiceDramaTag
enum class EJackVoiceDramaTag : uint8_t
{
	EJackVoiceDramaTag__End        = 0,
	EJackVoiceDramaTag__Wait       = 1,
	EJackVoiceDramaTag__WaitTag    = 2,
	EJackVoiceDramaTag__PageFade   = 3,
	EJackVoiceDramaTag__TextHide   = 4,
	EJackVoiceDramaTag__TalkerShow = 5,
	EJackVoiceDramaTag__LogModeEnd = 6,
	EJackVoiceDramaTag__BG         = 7,
	EJackVoiceDramaTag__BGHide     = 8,
	EJackVoiceDramaTag__BGWait     = 9,
	EJackVoiceDramaTag__Image      = 10,
	EJackVoiceDramaTag__ImageHide  = 11,
	EJackVoiceDramaTag__ImageWait  = 12,
	EJackVoiceDramaTag__FadeOut    = 13,
	EJackVoiceDramaTag__FadeIn     = 14,
	EJackVoiceDramaTag__FadeWait   = 15,
	EJackVoiceDramaTag__BGMPlay    = 16,
	EJackVoiceDramaTag__BGMStop    = 17,
	EJackVoiceDramaTag__BGMWait    = 18,
	EJackVoiceDramaTag__EnvPlay    = 19,
	EJackVoiceDramaTag__EnvStop    = 20,
	EJackVoiceDramaTag__EnvWait    = 21,
	EJackVoiceDramaTag__VoicePlay  = 22,
	EJackVoiceDramaTag__VoiceWait  = 23,
	EJackVoiceDramaTag__SEPlay     = 24,
	EJackVoiceDramaTag__SEWait     = 25,
	EJackVoiceDramaTag__MEPlay     = 26,
	EJackVoiceDramaTag__Pafupafu   = 27,
	EJackVoiceDramaTag__StaffRoll  = 28,
	EJackVoiceDramaTag__MAX        = 29
};


// Enum JackGame.EJackVoiceDramaSelectEShop
enum class EJackVoiceDramaSelectEShop : uint8_t
{
	EJackVoiceDramaSelectEShop__InputDLCNumber = 0,
	EJackVoiceDramaSelectEShop__BuyAddContent = 1,
	EJackVoiceDramaSelectEShop__CancelDLC = 2,
	EJackVoiceDramaSelectEShop__MAX = 3
};


// Enum JackGame.EJackVoiceDramaHDPafuPafuSoundEffectTag
enum class EJackVoiceDramaHDPafuPafuSoundEffectTag : uint8_t
{
	EJackVoiceDramaHDPafuPafuSoundEffectTag__PafuunLow = 0,
	EJackVoiceDramaHDPafuPafuSoundEffectTag__PafuunHigh = 1,
	EJackVoiceDramaHDPafuPafuSoundEffectTag__PafuunMostHigh = 2,
	EJackVoiceDramaHDPafuPafuSoundEffectTag__Descent = 3,
	EJackVoiceDramaHDPafuPafuSoundEffectTag__Rise = 4,
	EJackVoiceDramaHDPafuPafuSoundEffectTag__CurtainOpen = 5,
	EJackVoiceDramaHDPafuPafuSoundEffectTag__CurtainClose = 6,
	EJackVoiceDramaHDPafuPafuSoundEffectTag__Knockout = 7,
	EJackVoiceDramaHDPafuPafuSoundEffectTag__Whiteout = 8,
	EJackVoiceDramaHDPafuPafuSoundEffectTag__Doon = 9,
	EJackVoiceDramaHDPafuPafuSoundEffectTag__CountDown = 10,
	EJackVoiceDramaHDPafuPafuSoundEffectTag__Start = 11,
	EJackVoiceDramaHDPafuPafuSoundEffectTag__Finish = 12,
	EJackVoiceDramaHDPafuPafuSoundEffectTag__EJackVoiceDramaHDPafuPafuSoundEffectTag_MAX = 13
};


// Enum JackGame.EJackVoiceDramaSelectDLCCompleteMode
enum class EJackVoiceDramaSelectDLCCompleteMode : uint8_t
{
	EJackVoiceDramaSelectDLCCompleteMode__FromTitle = 0,
	EJackVoiceDramaSelectDLCCompleteMode__FromVoiceDrama = 1,
	EJackVoiceDramaSelectDLCCompleteMode__RemainSelect = 2,
	EJackVoiceDramaSelectDLCCompleteMode__CompleteDLC = 3,
	EJackVoiceDramaSelectDLCCompleteMode__FromStaffList = 4,
	EJackVoiceDramaSelectDLCCompleteMode__InVoiceDrama = 5,
	EJackVoiceDramaSelectDLCCompleteMode__InEShop = 6,
	EJackVoiceDramaSelectDLCCompleteMode__MAX = 7
};


// Enum JackGame.EJackUMGBackgroundColor
enum class EJackUMGBackgroundColor : uint8_t
{
	EJackUMGBackgroundColor__None  = 0,
	EJackUMGBackgroundColor__BlackWindow = 1,
	EJackUMGBackgroundColor__PaleOrange = 2,
	EJackUMGBackgroundColor__Brown = 3,
	EJackUMGBackgroundColor__MAX   = 4
};


// Enum JackGame.EJackUMGWindowCursorMoveDirection
enum class EJackUMGWindowCursorMoveDirection : uint8_t
{
	EJackUMGWindowCursorMoveDirection__Left = 0,
	EJackUMGWindowCursorMoveDirection__Up = 1,
	EJackUMGWindowCursorMoveDirection__Right = 2,
	EJackUMGWindowCursorMoveDirection__Down = 3,
	EJackUMGWindowCursorMoveDirection__MAX = 4
};


// Enum JackGame.EJackUMGCheckValueInput
enum class EJackUMGCheckValueInput : uint8_t
{
	EJackUMGCheckValueInput__CanDown = 0,
	EJackUMGCheckValueInput__CanUp = 1,
	EJackUMGCheckValueInput__MAX   = 2
};


// Enum JackGame.EJackVehicleParameterStateMachineFlags
enum class EJackVehicleParameterStateMachineFlags : uint8_t
{
	EJackVehicleParameterStateMachineFlags__WaitToWalkRun = 0,
	EJackVehicleParameterStateMachineFlags__WalkRunToEnterTurnBack1 = 1,
	EJackVehicleParameterStateMachineFlags__EnterTurnBack1ToTurnBackLeft1 = 2,
	EJackVehicleParameterStateMachineFlags__EnterTurnBack1ToTurnBackRight1 = 3,
	EJackVehicleParameterStateMachineFlags__WaitToEnterTurn1 = 4,
	EJackVehicleParameterStateMachineFlags__WalkRunToEnterTurn1 = 5,
	EJackVehicleParameterStateMachineFlags__EnterTurn1ToTurnRight1 = 6,
	EJackVehicleParameterStateMachineFlags__EnterTurn1ToTurnLeft1 = 7,
	EJackVehicleParameterStateMachineFlags__TurnRight1ToEnterTurnBack1 = 8,
	EJackVehicleParameterStateMachineFlags__TurnLeft1ToEnterTurnBack1 = 9,
	EJackVehicleParameterStateMachineFlags__TurnLeft1ToExitTurn1 = 10,
	EJackVehicleParameterStateMachineFlags__TurnRight1ToExitTurn1 = 11,
	EJackVehicleParameterStateMachineFlags__TurnLeft1InTurnLeft1_1ToTurnLeft1 = 12,
	EJackVehicleParameterStateMachineFlags__TurnLeft1InTurnLeft1_2ToTurnLeft1 = 13,
	EJackVehicleParameterStateMachineFlags__TurnRight1InTurnRight1_1ToTurnRight1 = 14,
	EJackVehicleParameterStateMachineFlags__TurnRight1InTurnRight1_2ToTurnRight1 = 15,
	EJackVehicleParameterStateMachineFlags__ExitTurn1ToWalkRun = 16,
	EJackVehicleParameterStateMachineFlags__ExitTurn1ToWait = 17,
	EJackVehicleParameterStateMachineFlags__TurnLeft1ToDashStart = 18,
	EJackVehicleParameterStateMachineFlags__TurnRight1ToDashStart = 19,
	EJackVehicleParameterStateMachineFlags__WalkRunToDashStart = 20,
	EJackVehicleParameterStateMachineFlags__DashStartToDash = 21,
	EJackVehicleParameterStateMachineFlags__DashToDashStart = 22,
	EJackVehicleParameterStateMachineFlags__DashStartWalkRun = 23,
	EJackVehicleParameterStateMachineFlags__DashToRunStop = 24,
	EJackVehicleParameterStateMachineFlags__WalkRunToRunStop = 25,
	EJackVehicleParameterStateMachineFlags__WalkRunToWait = 26,
	EJackVehicleParameterStateMachineFlags__WalkRunToJumpStart = 27,
	EJackVehicleParameterStateMachineFlags__DashToJumpStart = 28,
	EJackVehicleParameterStateMachineFlags__JumpLoopToJumpEnd = 29,
	EJackVehicleParameterStateMachineFlags__JumpLoopToWalkRun = 30,
	EJackVehicleParameterStateMachineFlags__JumpLoopToDash = 31,
	EJackVehicleParameterStateMachineFlags__JumpEndToWalkRun = 32,
	EJackVehicleParameterStateMachineFlags__JumpEndToDash = 33,
	EJackVehicleParameterStateMachineFlags__WalkRunToFall = 34,
	EJackVehicleParameterStateMachineFlags__FallToFallEnd = 35,
	EJackVehicleParameterStateMachineFlags__CanCancelTurnBackLeft1ToWalkRun = 36,
	EJackVehicleParameterStateMachineFlags__CanCancelTurnBackRight1ToWalkRun = 37,
	EJackVehicleParameterStateMachineFlags__WalkRunToGride = 38,
	EJackVehicleParameterStateMachineFlags__GrideToWalkRun = 39,
	EJackVehicleParameterStateMachineFlags__WaitToRunForward = 40,
	EJackVehicleParameterStateMachineFlags__WaitToRunBack = 41,
	EJackVehicleParameterStateMachineFlags__RunForwardToWait = 42,
	EJackVehicleParameterStateMachineFlags__RunBackToWait = 43,
	EJackVehicleParameterStateMachineFlags__WaitToClimbing = 44,
	EJackVehicleParameterStateMachineFlags__ClimbingToWait = 45,
	EJackVehicleParameterStateMachineFlags__ForceRunStopToWait = 46,
	EJackVehicleParameterStateMachineFlags__ForceStopToWait = 47,
	EJackVehicleParameterStateMachineFlags__MAX = 48
};


// Enum JackGame.EJackVehicleParameterBool
enum class EJackVehicleParameterBool : uint8_t
{
	EJackVehicleParameterBool__IsEnableCancelJumpEnd = 0,
	EJackVehicleParameterBool__IsDashRequestEnable = 1,
	EJackVehicleParameterBool__IsDashRequest = 2,
	EJackVehicleParameterBool__IsInDash = 3,
	EJackVehicleParameterBool__IsDashEndRequest = 4,
	EJackVehicleParameterBool__IsRequestDashCancel = 5,
	EJackVehicleParameterBool__IsRequestStop = 6,
	EJackVehicleParameterBool__IsRequestJump = 7,
	EJackVehicleParameterBool__IsInJump = 8,
	EJackVehicleParameterBool__IsRequestJumpEnd = 9,
	EJackVehicleParameterBool__IsInAir = 10,
	EJackVehicleParameterBool__IsCancelTurnBack = 11,
	EJackVehicleParameterBool__IsUnmountEnable = 12,
	EJackVehicleParameterBool__IsGride = 13,
	EJackVehicleParameterBool__IsJumpUp = 14,
	EJackVehicleParameterBool__IsV104Climbing = 15,
	EJackVehicleParameterBool__IsV104ClimbingUp = 16,
	EJackVehicleParameterBool__IsV104ClimbingChanging = 17,
	EJackVehicleParameterBool__IsForceWalkDash = 18,
	EJackVehicleParameterBool__IsV102JumpStart = 19,
	EJackVehicleParameterBool__IsV105GridRun = 20,
	EJackVehicleParameterBool__IsMovementEnabled = 21,
	EJackVehicleParameterBool__ForceRunStopToWait = 22,
	EJackVehicleParameterBool__ForceStopToWait = 23,
	EJackVehicleParameterBool__IsInRoar = 24,
	EJackVehicleParameterBool__V203_WhaleRoar_Mode = 25,
	EJackVehicleParameterBool__V203_AdditiveOn = 26,
	EJackVehicleParameterBool__IsMount = 27,
	EJackVehicleParameterBool__MAX = 28
};


// Enum JackGame.EJackVehicleParameterFloat
enum class EJackVehicleParameterFloat : uint8_t
{
	EJackVehicleParameterFloat__TurnAngle = 0,
	EJackVehicleParameterFloat__CrrectedRawInputRate = 1,
	EJackVehicleParameterFloat__ForwardingRate = 2,
	EJackVehicleParameterFloat__MoveMotionBlendRate = 3,
	EJackVehicleParameterFloat__MoveMotionBlendRateReverse = 4,
	EJackVehicleParameterFloat__MoveMotionBlendRateReverseRate = 5,
	EJackVehicleParameterFloat__MoveMotionTurnAngleRate = 6,
	EJackVehicleParameterFloat__TurnOutAngle = 7,
	EJackVehicleParameterFloat__TurnInAngle = 8,
	EJackVehicleParameterFloat__CanTurnMoveMotionBlendRate = 9,
	EJackVehicleParameterFloat__WalkForwardingRate = 10,
	EJackVehicleParameterFloat__RunForwardingRate = 11,
	EJackVehicleParameterFloat__TurnBackAngle = 12,
	EJackVehicleParameterFloat__MotionTurnAngleCalcRate = 13,
	EJackVehicleParameterFloat__WalkRunRootMotionMultiplier = 14,
	EJackVehicleParameterFloat__RunOutForwardingRate = 15,
	EJackVehicleParameterFloat__DashEndInterpolationRate = 16,
	EJackVehicleParameterFloat__ToDashInterpolationSpeed = 17,
	EJackVehicleParameterFloat__ToRunInterpolationSpeed = 18,
	EJackVehicleParameterFloat__ToWalkInterpolationSpeed = 19,
	EJackVehicleParameterFloat__ToStopInterpolationSpeed = 20,
	EJackVehicleParameterFloat__V104ClimbMoveRate = 21,
	EJackVehicleParameterFloat__JumpStartMotionAnimationRate = 22,
	EJackVehicleParameterFloat__GrideStateSecV105 = 23,
	EJackVehicleParameterFloat__GrideStateSecV105Gride = 24,
	EJackVehicleParameterFloat__GrideStateSecV105Run = 25,
	EJackVehicleParameterFloat__RoarV203Timer = 26,
	EJackVehicleParameterFloat__RoarV203RequestOffTimer = 27,
	EJackVehicleParameterFloat__AddUpAlphaRate = 28,
	EJackVehicleParameterFloat__AddDownAlphaRate = 29,
	EJackVehicleParameterFloat__MAX = 30
};


// Enum JackGame.EJackWeaponHiddenPurpose
enum class EJackWeaponHiddenPurpose : uint8_t
{
	EJackWeaponHiddenPurpose__Engine = 0,
	EJackWeaponHiddenPurpose__Owner = 1,
	EJackWeaponHiddenPurpose__Matinee = 2,
	EJackWeaponHiddenPurpose__Renkei = 3,
	EJackWeaponHiddenPurpose__Field = 4,
	EJackWeaponHiddenPurpose__EquipmentControlComponent = 5,
	EJackWeaponHiddenPurpose__AttachSocket = 6,
	EJackWeaponHiddenPurpose__MAX  = 7
};


// Enum JackGame.EJackVoiceDramaSelectAnimButton
enum class EJackVoiceDramaSelectAnimButton : uint8_t
{
	EJackVoiceDramaSelectAnimButton__Plus = 0,
	EJackVoiceDramaSelectAnimButton__Minus = 1,
	EJackVoiceDramaSelectAnimButton__XButton = 2,
	EJackVoiceDramaSelectAnimButton__MAX = 3
};



//---------------------------------------------------------------------------
// Script Structs
//---------------------------------------------------------------------------

// ScriptStruct JackGame.JackLDT_Achievement
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Achievement : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackActionData
// 0x00B0
struct FJackActionData
{
	unsigned char                                      UnknownData00[0xB0];                                      // 0x0000(0x00B0) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionScoreResult
// 0x0068
struct FJackActionScoreResult
{
	EJackActionResultType                              ResultType;                                               // 0x0000(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<struct FJackActionData>                     ActionDataList;                                           // 0x0008(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<TWeakObjectPtr<class UJackGameCharacter>>   CasterGameCharacterList;                                  // 0x0018(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<TWeakObjectPtr<class UJackGameCharacter>>   TargetGameCharacterList;                                  // 0x0028(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<int>                                        UseMPList;                                                // 0x0038(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<int>                                        UseGoldList;                                              // 0x0048(0x0010) (Edit, ZeroConstructor, EditConst)
	unsigned char                                      UnknownData01[0x10];                                      // 0x0058(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableActionAIEvaluateScoreCheck
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableActionAIEvaluateScoreCheck : public FTableRowBase
{
	struct FName                                       FunctionName;                                             // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Param0;                                                   // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Param1;                                                   // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Param2;                                                   // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Param3;                                                   // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Param4;                                                   // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Param5;                                                   // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Param6;                                                   // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Param7;                                                   // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackActionCalcValue
// 0x000C
struct FJackActionCalcValue
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionKill
// 0x0010
struct FJackActionKill
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionOddEffectCollect
// 0x0010
struct FJackActionOddEffectCollect
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionValue
// 0x0018
struct FJackActionValue
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionCalcRate
// 0x000C
struct FJackActionCalcRate
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct JackGame.JackSlideActionCalc
// 0x0018
struct FJackSlideActionCalc
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct JackGame.JackSlideAction
// 0x0018
struct FJackSlideAction
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionCalcDamageResult
// 0x0058
struct FJackActionCalcDamageResult
{
	struct FName                                       ActionID;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TWeakObjectPtr<class UJackGameCharacter>           CasterGameCharacter;                                      // 0x0008(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TWeakObjectPtr<class UJackGameCharacter>           TargetGameCharacter;                                      // 0x0010(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	EJackActionDamageType                              DamageType;                                               // 0x0018(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	int                                                Damage;                                                   // 0x001C(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	EJackAttributeParam                                KougekiAttribute;                                         // 0x0020(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
	float                                              AttributeTaisei;                                          // 0x0024(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TEnumAsByte<EJackActionDamageKnockBackStatus>      KnockBackStatus;                                          // 0x0028(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bBlowDeadStatus;                                          // 0x0029(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x002A(0x0006) MISSED OFFSET
	TArray<struct FName>                               InvokeOddEffectIDs;                                       // 0x0030(0x0010) (Edit, ZeroConstructor, EditConst)
	bool                                               bCritical;                                                // 0x0040(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bCounter;                                                 // 0x0041(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bImmediatelyCounter;                                      // 0x0042(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bUkenagasi;                                               // 0x0043(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bMikawasi;                                                // 0x0044(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bTateGuard;                                               // 0x0045(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bBukiGuard;                                               // 0x0046(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bMeityuuMiss;                                             // 0x0047(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bAsutoronGuard;                                           // 0x0048(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bDamageKanzenGuard;                                       // 0x0049(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bButuriKanzenGuard;                                       // 0x004A(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bKaisinKanzenGuard;                                       // 0x004B(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bMahosute;                                                // 0x004C(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bMeganteSokusi;                                           // 0x004D(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bSokusiMukou;                                             // 0x004E(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bYoDamageUp;                                              // 0x004F(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	EJackHP1NokoriType                                 HP1NokoriType;                                            // 0x0050(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bParamNoChange;                                           // 0x0051(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bMP0Damage;                                               // 0x0052(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bHP0Damage;                                               // 0x0053(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackInteractorRange
// 0x0014
struct FJackInteractorRange
{
	float                                              Radius;                                                   // 0x0000(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              BackOffset;                                               // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              Yaw;                                                      // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              PitchUp;                                                  // 0x000C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              PitchDown;                                                // 0x0010(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableActionSecondCheck
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableActionSecondCheck : public FTableRowBase
{
	struct FName                                       FunctionName;                                             // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               SubSecondCheckIDs;                                        // 0x0010(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableAction
// 0x01B0 (0x01B8 - 0x0008)
struct FJackDataTableAction : public FTableRowBase
{
	struct FName                                       DisplayName;                                              // 0x0008(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionDamageID;                                           // 0x0010(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionOddEffectID;                                        // 0x0018(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionMultiAttackID;                                      // 0x0020(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionHitOrderID;                                         // 0x0028(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionNakamaYobiID;                                       // 0x0030(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionSecondCheckID_Baka;                                 // 0x0038(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionSecondCheckID_Ningen;                               // 0x0040(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionSecondCheckID_Kami;                                 // 0x0048(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionTextID;                                             // 0x0050(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SortNo;                                                   // 0x0058(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackActionCategory                                ActionCategory;                                           // 0x005C(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteField;                                            // 0x005D(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteBattle;                                           // 0x005E(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponNot;                                        // 0x005F(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponSwd;                                        // 0x0060(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponDgr;                                        // 0x0061(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponAxe;                                        // 0x0062(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponStk;                                        // 0x0063(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponBoo;                                        // 0x0064(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponTsw;                                        // 0x0065(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponSpr;                                        // 0x0066(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponRod;                                        // 0x0067(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponClw;                                        // 0x0068(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponWhp;                                        // 0x0069(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponShi;                                        // 0x006A(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x006B(0x0001) MISSED OFFSET
	int                                                UseMP;                                                    // 0x006C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AddZonePoint;                                             // 0x0070(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DistanceToTarget;                                         // 0x0074(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAssistFowardJump;                                        // 0x0078(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRotationToTarget;                                        // 0x0079(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x007A(0x0002) MISSED OFFSET
	float                                              RotationDurationTimeByFreeCamera;                         // 0x007C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ShotReservedMoveDistanceToTarget;                         // 0x0080(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHiddenWeaponByActionCamera;                              // 0x0084(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalidBackJumpBySimpleCamera;                           // 0x0085(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackActionTargetType                              Target;                                                   // 0x0086(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackActionExtentTargetType                        ExtentTarget;                                             // 0x0087(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackActionExtentType                              Extent;                                                   // 0x0088(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0089(0x0003) MISSED OFFSET
	float                                              ExtentParam1;                                             // 0x008C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ExtentParam2;                                             // 0x0090(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRandomHit;                                               // 0x0094(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bForceTargetSelect;                                       // 0x0095(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0096(0x0002) MISSED OFFSET
	struct FName                                       Motion_Cast;                                              // 0x0098(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Motion_Shot;                                              // 0x00A0(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               Motion_Extensions;                                        // 0x00A8(0x0010) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance)
	float                                              Motion_Cast_LoopTime;                                     // 0x00B8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Motion_Shot_LoopTime;                                     // 0x00BC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackActionWaitType                                ActionWaitType;                                           // 0x00C0(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x00C1(0x0003) MISSED OFFSET
	float                                              ActionWaitTimeByFreeCamera;                               // 0x00C4(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ActionWaitTimeBySimpleCamera;                             // 0x00C8(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackActionCriticalType                            CriticalType;                                             // 0x00CC(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00CD(0x0003) MISSED OFFSET
	float                                              CriticalHosei;                                            // 0x00D0(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackHitStopPresetType                             HitStopPresetType;                                        // 0x00D4(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackHitCameraShakePresetType                      HitCameraShakePresetType;                                 // 0x00D5(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x00D6(0x0002) MISSED OFFSET
	unsigned char                                      UnknownData07[0x18];                                      // 0x00D6(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableAction.HitEffectClass
	unsigned char                                      UnknownData08[0x18];                                      // 0x00F0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableAction.OverlapDamageSE
	unsigned char                                      UnknownData09[0x18];                                      // 0x0108(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableAction.ActionEffectClass
	unsigned char                                      UnknownData10[0x18];                                      // 0x0120(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableAction.ActionEffectClass2
	bool                                               bAttributeEffectOff;                                      // 0x0138(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x7];                                       // 0x0139(0x0007) MISSED OFFSET
	struct FName                                       ActionCameraID_Player;                                    // 0x0140(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionCameraID_Monster;                                   // 0x0148(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackActionIconType                                ActionIconType;                                           // 0x0150(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData12[0x7];                                       // 0x0151(0x0007) MISSED OFFSET
	struct FName                                       ActionTargetIconID;                                       // 0x0158(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MonsterRenkeiID;                                          // 0x0160(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalidExecute_Miryou;                                   // 0x0168(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMPSyouhiZeroMukou;                                       // 0x0169(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMahosute;                                                // 0x016A(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bJumonHansya;                                             // 0x016B(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bYamabiko;                                                // 0x016C(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bNitouDamage;                                             // 0x016D(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackActionSoundType                               ActionSoundType;                                          // 0x016E(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData13[0x1];                                       // 0x016F(0x0001) MISSED OFFSET
	TArray<EJackActionConsumeCondition>                ActionConsumeConditions;                                  // 0x0170(0x0010) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               Tags;                                                     // 0x0180(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData14[0x10];                                      // 0x0190(0x0010) UNKNOWN PROPERTY: ArrayProperty JackGame.JackDataTableAction.ReferenceClasses
	unsigned char                                      UnknownData15[0x18];                                      // 0x01A0(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableAction.ActionExecClass
};

// ScriptStruct JackGame.JackReferenceParamInfo
// 0x001C
struct FJackReferenceParamInfo
{
	int                                                BaseMonster;                                              // 0x0000(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BaseMin;                                                  // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BaseMax;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackReferenceParam                                ReferenceParam;                                           // 0x000C(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	int                                                ReferenceHoseiMin;                                        // 0x0010(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ReferenceHoseiMax;                                        // 0x0014(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Random;                                                   // 0x0018(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableActionOddEffect
// 0x0080 (0x0088 - 0x0008)
struct FJackDataTableActionOddEffect : public FTableRowBase
{
	TArray<struct FName>                               TempOddEffectIDs;                                         // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       SetSelfOddEffectID;                                       // 0x0018(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FJackReferenceParamInfo                     SuccessPer;                                               // 0x0020(0x001C) (Edit, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<struct FName>                               SetOddEffectIDs;                                          // 0x0040(0x0010) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance)
	TArray<EJackOddEffectCategoryType>                 ClearOddEffectCategories;                                 // 0x0050(0x0010) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               ClearOddEffectStatusIDs;                                  // 0x0060(0x0010) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               ClearOddEffectIDs;                                        // 0x0070(0x0010) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance)
	bool                                               bClearOddEffectConditionGood;                             // 0x0080(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClearOddEffectConditionBad;                              // 0x0081(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0082(0x0006) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionMultiAttackInfo
// 0x0020
struct FJackActionMultiAttackInfo
{
	struct FName                                       OverrideActionDamageID;                                   // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              DamagePer;                                                // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bCriticalDisable;                                         // 0x000C(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bMissDisable;                                             // 0x000D(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bMikawasiDisable;                                         // 0x000E(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bTateGuardDisable;                                        // 0x000F(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bBukiGuardDisable;                                        // 0x0010(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bKnockBackDisable;                                        // 0x0011(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bHitOnlyFirstTarget;                                      // 0x0012(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0013(0x0005) MISSED OFFSET
	struct FName                                       OverrideActionHitOrderID;                                 // 0x0018(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableActionMultiAttack
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableActionMultiAttack : public FTableRowBase
{
	int                                                MultiAttackNum;                                           // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<struct FJackActionMultiAttackInfo>          MultiAttackInfos;                                         // 0x0010(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableActionHitOrder
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableActionHitOrder : public FTableRowBase
{
	EJackActionHitOrderType                            HitOrderType;                                             // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPriorityTarget;                                          // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	float                                              Interval_01;                                              // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Interval_02;                                              // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Interval_03;                                              // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Interval_04;                                              // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Interval_05;                                              // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Interval_06;                                              // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Interval_07;                                              // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Interval_08;                                              // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableActionDamage
// 0x0050 (0x0058 - 0x0008)
struct FJackDataTableActionDamage : public FTableRowBase
{
	EJackActionDamageType                              DamageType;                                               // 0x0008(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackActionDamageCalcType                          DamageCalcType;                                           // 0x0009(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	float                                              DamageCalcParam;                                          // 0x000C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageCalcParamRandom;                                    // 0x0010(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDamageCalcHand;                                          // 0x0014(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	int                                                DamageMonster;                                            // 0x0018(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DamageMin;                                                // 0x001C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DamageMax;                                                // 0x0020(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackReferenceParam                                DamageReferenceParam;                                     // 0x0024(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	int                                                DamageReferenceParam_Min;                                 // 0x0028(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DamageReferenceParam_Max;                                 // 0x002C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DamageRandom;                                             // 0x0030(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageSibariHosei;                                        // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DamageLimit;                                              // 0x0038(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HitPer;                                                   // 0x003C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bKabauEnable;                                             // 0x0040(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCounterEnable;                                           // 0x0041(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMikawasiEnable;                                          // 0x0042(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bTateGuardEnable;                                         // 0x0043(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBukiGuardEnable;                                         // 0x0044(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bKougekiAttributeEnable;                                  // 0x0045(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMetalEnable;                                             // 0x0046(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bButuriDamageKeigenEnable;                                // 0x0047(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBreathDamageKeigenEnable;                                // 0x0048(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOddEffectClearDamageEnable;                              // 0x0049(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bKantuYaminokoromo;                                       // 0x004A(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bGuardMukouEnable;                                        // 0x004B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bFixDamageEnable;                                         // 0x004C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackActionMonsterRaceTokkouType                   MonsterRaceTokkouType;                                    // 0x004D(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackActionTuikaKoukaType                          KougekiHPMPKyuusyuuEnable;                                // 0x004E(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bYoDamageEnable;                                          // 0x004F(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDamageSetOddEffectEnable;                                // 0x0050(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMetalTokkouEnable;                                       // 0x0051(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bKougekiJumonHenkaEnable;                                 // 0x0052(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bKaifukuJumonHenkaEnable;                                 // 0x0053(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDamageKeigenEnable;                                      // 0x0054(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackActionTuikaKoukaType                          WeaponTuikaKoukaType;                                     // 0x0055(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackActionTuikaKoukaType                          TuikaDamageType;                                          // 0x0056(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackActionDamageBlowState>            DamageBlowState;                                          // 0x0057(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackActionEffectTimelineEventEntry
// 0x0010
struct FJackActionEffectTimelineEventEntry
{
	float                                              Time;                                                     // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EJackActionEffectEvent                             Event;                                                    // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	struct FName                                       Parameter;                                                // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackActionEffectMovementPosition
// 0x0030
struct FJackActionEffectMovementPosition
{
	EJackActionEffectSpawnTargetType                   TargetType;                                               // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       TargetSocket;                                             // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RelativeLocation;                                         // 0x0010(0x000C) (Edit, IsPlainOldData)
	struct FRotator                                    RelativeRotation;                                         // 0x001C(0x000C) (Edit, IsPlainOldData)
	TEnumAsByte<EJackActionEffectAxis>                 FrontAxis;                                                // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionEffectParticles
// 0x0028
struct FJackActionEffectParticles
{
	class UParticleSystem*                             ParticlesHuman;                                           // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ParticlesLL;                                              // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ParticlesL;                                               // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ParticlesM;                                               // 0x0018(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UParticleSystem*                             ParticlesS;                                               // 0x0020(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackPostProcessEffectParam
// 0x0010
struct FJackPostProcessEffectParam
{
	struct FName                                       ParamName;                                                // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UCurveBase*                                  ParamCurve;                                               // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackPostProcessEffect
// 0x0020
struct FJackPostProcessEffect
{
	class UMaterialParameterCollection*                MPC;                                                      // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class UMaterialInterface*                          Material;                                                 // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FJackPostProcessEffectParam>         AnimParams;                                               // 0x0010(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackCameraShakeParam
// 0x0010
struct FJackCameraShakeParam
{
	class UClass*                                      CameraShake;                                              // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Scale;                                                    // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionEffectEffect
// 0x00A0
struct FJackActionEffectEffect
{
	class UStaticMesh*                                 StaticMesh;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DeleteDelayTime;                                          // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	class UParticleSystem*                             Particle;                                                 // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FJackActionEffectParticles                  SizeParticles;                                            // 0x0018(0x0028) (Edit)
	class USoundBase*                                  Sound;                                                    // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EJackActionEffectSpawnTargetType                   SpawnTargetType;                                          // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	float                                              IgnoreRadiusFromTarget;                                   // 0x004C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       SpawnSocket;                                              // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RelativeLocation;                                         // 0x0058(0x000C) (Edit, IsPlainOldData)
	struct FRotator                                    RelativeRotation;                                         // 0x0064(0x000C) (Edit, IsPlainOldData)
	bool                                               bAttach;                                                  // 0x0070(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EAttachLocation>                       AttachLocationType;                                       // 0x0071(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAbsoluteLocation;                                        // 0x0072(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAbsoluteRotation;                                        // 0x0073(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAbsoluteScale;                                           // 0x0074(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCameraLocation;                                          // 0x0075(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBeAffectedByMaterialAnimation;                           // 0x0076(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSkelVertSurf;                                            // 0x0077(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FJackPostProcessEffect>              PostProcessEffects;                                       // 0x0078(0x0010) (Edit, ZeroConstructor)
	class UClass*                                      DecalEffect;                                              // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FJackCameraShakeParam>               CameraShakes;                                             // 0x0090(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackActionEffectDecal
// 0x0018
struct FJackActionEffectDecal
{
	class UClass*                                      Effect;                                                   // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BumpNormalSize;                                           // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TrailDecalMinHeight;                                      // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TrailDecalMinDistance;                                    // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TrailDecalAddSize;                                        // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackBlendablePostProcessSettingsData
// 0x0010
struct FJackBlendablePostProcessSettingsData
{
	TWeakObjectPtr<class UJackPlayerCameraComponent>   CameraComponent;                                          // 0x0000(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TWeakObjectPtr<class UMaterialInterface>           Material;                                                 // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackActionAttachedParticle
// 0x0030
struct FJackActionAttachedParticle
{
	class UParticleSystem*                             Particle;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  Sound;                                                    // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bNoAttach;                                                // 0x0018(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	struct FName                                       LocationSocketName;                                       // 0x0020(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       RotationSocketName;                                       // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackActionSpawnedProjectile
// 0x0010
struct FJackActionSpawnedProjectile
{
	class UClass*                                      Class;                                                    // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackActionSpawnedBurstEffect
// 0x0010
struct FJackActionSpawnedBurstEffect
{
	class UClass*                                      Class;                                                    // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackAttachInfo
// 0x0038
struct FJackAttachInfo
{
	EJackAttachTargetType                              TargetType;                                               // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	TWeakObjectPtr<class AActor>                       TargetActor;                                              // 0x0004(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FName                                       TargetActorSocketName;                                    // 0x0010(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FVector                                     RelativeLocation;                                         // 0x0018(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	struct FRotator                                    RelativeRotation;                                         // 0x0024(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	TEnumAsByte<EJackActionEffectAxis>                 FrontAxis;                                                // 0x0030(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionModule
// 0x00B8
struct FJackActionModule
{
	unsigned char                                      UnknownData00[0xB8];                                      // 0x0000(0x00B8) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionHitGroupInfo
// 0x0030
struct FJackActionHitGroupInfo
{
	int                                                HitGroupCount;                                            // 0x0000(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FJackActionModule>                   ActionModules;                                            // 0x0008(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FName                                       ActionHitOrderID;                                         // 0x0018(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                AnyDamageHitCount;                                        // 0x0020(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                ExtentCharacterNum;                                       // 0x0024(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bHitGroupCritical;                                        // 0x0028(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bActionHitFinalGroup;                                     // 0x0029(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bOddEffectFinalGroup;                                     // 0x002A(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x002B(0x0005) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionExtentCharacterHitInfo
// 0x0020
struct FJackActionExtentCharacterHitInfo
{
	int                                                HitGroupCount;                                            // 0x0000(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FJackActionModule>                   HitActionModules;                                         // 0x0008(0x0010) (Edit, ZeroConstructor, EditConst)
	float                                              HitDelayTime;                                             // 0x0018(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionExtentCharacterInfo
// 0x0028
struct FJackActionExtentCharacterInfo
{
	TWeakObjectPtr<class UJackGameCharacter>           TargetGameCharacter;                                      // 0x0000(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                TotalDamageHP;                                            // 0x0008(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                TotalDamageMP;                                            // 0x000C(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TArray<struct FJackActionExtentCharacterHitInfo>   HitInfos;                                                 // 0x0010(0x0010) (Edit, ZeroConstructor, EditConst)
	int                                                ActionDepth;                                              // 0x0020(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bSokusi;                                                  // 0x0024(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bJumonHansya;                                             // 0x0025(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0026(0x0002) MISSED OFFSET
};

// ScriptStruct JackGame.JackCalcActionParam
// 0x0018
struct FJackCalcActionParam
{
	struct FName                                       RenkeiID;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0008(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionResult
// 0x0158
struct FJackActionResult
{
	EJackActionResultType                              ResultType;                                               // 0x0000(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	EJackActionConsumeResultType                       ConsumeResultType;                                        // 0x0001(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0002(0x0006) MISSED OFFSET
	struct FJackActionData                             ActionData;                                               // 0x0008(0x00B0) (Edit, EditConst)
	TWeakObjectPtr<class UJackGameCharacter>           CasterGameCharacter;                                      // 0x00B8(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TWeakObjectPtr<class UJackGameCharacter>           FirstTargetGameCharacter;                                 // 0x00C0(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TWeakObjectPtr<class UJackGameCharacter>           TargetGameCharacter;                                      // 0x00C8(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                UseMP;                                                    // 0x00D0(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                UseGold;                                                  // 0x00D4(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TArray<struct FJackActionModule>                   AllActionModules;                                         // 0x00D8(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FJackActionHitGroupInfo>             HitGroupInfos;                                            // 0x00E8(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FJackActionExtentCharacterInfo>      TargetCharacterInfos;                                     // 0x00F8(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<class UJackGameCharacter*>                  ActionTargetCharacters;                                   // 0x0108(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FJackCalcActionParam                        CalcActionParam;                                          // 0x0118(0x0018) (Edit, EditConst)
	TArray<TWeakObjectPtr<class UJackGameCharacter>>   JumonHansyaGameCharacters;                                // 0x0130(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<TWeakObjectPtr<class UJackGameCharacter>>   ReviveGameCharacters;                                     // 0x0140(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FName                                       ActionVoiceID;                                            // 0x0150(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
};

// ScriptStruct JackGame.JackActionPlayParam
// 0x0290
struct FJackActionPlayParam
{
	struct FName                                       ActionID;                                                 // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FJackActionResult                           ActionResult;                                             // 0x0008(0x0158) (Edit, BlueprintVisi)
	TWeakObjectPtr<class UJackGameCharacter>           CasterGameCharacter;                                      // 0x0160(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UJackGameCharacter>           TargetGameCharacter;                                      // 0x0168(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       Override_Motion_Cast;                                     // 0x0170(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       Override_Motion_Shot;                                     // 0x0178(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	EJackActionPlayType                                ActionPlayType;                                           // 0x0180(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	EJackActionRequestType                             RequestType;                                              // 0x0181(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackItem_Bag>                         BagType;                                                  // 0x0182(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0183(0x0001) MISSED OFFSET
	int                                                DouguId;                                                  // 0x0184(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       SecondCheckID;                                            // 0x0188(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x100];                                     // 0x0190(0x0100) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionMessageArg
// 0x0020
struct FJackActionMessageArg
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
};

// ScriptStruct JackGame.JackMessageArgumentData
// 0x0048
struct FJackMessageArgumentData
{
	struct FString                                     ArgumentName;                                             // 0x0000(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	struct FString                                     ArgumentValue;                                            // 0x0010(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	struct FName                                       ArgumentId;                                               // 0x0020(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	EJackDataTableReferType                            ArgumentTableType;                                        // 0x0028(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0029(0x0018) MISSED OFFSET
	bool                                               ArgumentPriorReplaceFlag;                                 // 0x0041(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               ArgumentListFlag;                                         // 0x0042(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0043(0x0005) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionHitCharacterInfo
// 0x000C
struct FJackActionHitCharacterInfo
{
	TWeakObjectPtr<class UJackGameCharacter>           GameCharacter;                                            // 0x0000(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              HitDelayTime;                                             // 0x0008(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
};

// ScriptStruct JackGame.JackMonsterBattleAI_ActionSlot
// 0x0038
struct FJackMonsterBattleAI_ActionSlot
{
	int                                                SlotID;                                                   // 0x0000(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       ActionID;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       Motion_Cast;                                              // 0x0010(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       Motion_Shot;                                              // 0x0018(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	EJackBattleActionTargetType                        Target_Type;                                              // 0x0020(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	EJackBattleActionSelectType                        Select_Type;                                              // 0x0021(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0022(0x0002) MISSED OFFSET
	int                                                Groupe_Check;                                             // 0x0024(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              Invoke_Rate;                                              // 0x0028(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FName                                       SecondCheckID;                                            // 0x0030(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackActionSlot
// 0x0040
struct FJackActionSlot
{
	struct FName                                       ActionID;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FJackMonsterBattleAI_ActionSlot             MonsterBattleAIActionSlot;                                // 0x0008(0x0038) (Edit)
};

// ScriptStruct JackGame.JackActionBattleTextInfo
// 0x0010
struct FJackActionBattleTextInfo
{
	struct FName                                       TextPackID;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EJackActionTextType                                Timming;                                                  // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackBattleMessageNoun                             PorM;                                                     // 0x0009(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackBattleMessageCompactType                      MatomeType;                                               // 0x000A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x000B(0x0005) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionMessageCompactInfo
// 0x0020
struct FJackActionMessageCompactInfo
{
	int                                                SlideParam;                                               // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	EJackOddEffectConditionType                        ConditionType;                                            // 0x0004(0x0001) (ZeroConstructor, IsPlainOldData)
	EJackBattleMessageCompactType                      ForceMatomeType;                                          // 0x0005(0x0001) (ZeroConstructor, IsPlainOldData)
	EJackBattleMessageCompactSubType                   MatomeSubType;                                            // 0x0006(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0007(0x0001) MISSED OFFSET
	struct FName                                       BattleTextID;                                             // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	class UJackGameCharacter*                          NounGameCharacter;                                        // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       OddEffectID;                                              // 0x0018(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackToggleBaseTrackKey
// 0x0008
struct FJackToggleBaseTrackKey
{
	float                                              Time;                                                     // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bToggle;                                                  // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackAirBubbleAsset
// 0x0010
struct FJackAirBubbleAsset
{
	class UParticleSystem*                             ParticleSystem;                                           // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  Sound;                                                    // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackLDT_Coordinate
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Coordinate : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackParticleDict
// 0x0010
struct FJackParticleDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UParticleSystem*                             Particle;                                                 // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackSoundDict
// 0x0010
struct FJackSoundDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  Sound;                                                    // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackProjectileClassDict
// 0x0010
struct FJackProjectileClassDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      ProjectileClass;                                          // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackWeaponClassDict
// 0x0010
struct FJackWeaponClassDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      WeaponClass;                                              // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackPropClassDict
// 0x0010
struct FJackPropClassDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      PropClass;                                                // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackCameraAnimDict
// 0x0010
struct FJackCameraAnimDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCameraAnim*                                 CameraAnim;                                               // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackCameraShakeDict
// 0x0010
struct FJackCameraShakeDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      CameraShakeClass;                                         // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackForceFeedbackDict
// 0x0010
struct FJackForceFeedbackDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UForceFeedbackEffect*                        ForceFeedback;                                            // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackCurveDict
// 0x0010
struct FJackCurveDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveBase*                                  Curve;                                                    // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackMaterialParameterCollectionDict
// 0x0010
struct FJackMaterialParameterCollectionDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialParameterCollection*                MaterialParameterCollection;                              // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackCollideEffectDict
// 0x0010
struct FJackCollideEffectDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      CollideEffect;                                            // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackStaticMeshDict
// 0x0010
struct FJackStaticMeshDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UStaticMesh*                                 StaticMesh;                                               // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackSkeletalMeshDict
// 0x0010
struct FJackSkeletalMeshDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USkeletalMesh*                               SkeletalMesh;                                             // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackMaterialDict
// 0x0010
struct FJackMaterialDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UMaterialInterface*                          Material;                                                 // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackTextureDict
// 0x0010
struct FJackTextureDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture*                                    Texture;                                                  // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackCharacterFootstepEffectContainer
// 0x0010
struct FJackCharacterFootstepEffectContainer
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackCharacterDamageEffectContainer
// 0x0010
struct FJackCharacterDamageEffectContainer
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackCharacterCoordEffectContainer
// 0x0010
struct FJackCharacterCoordEffectContainer
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackAnimCancelFrameInfo
// 0x0008
struct FJackAnimCancelFrameInfo
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackAnimControlTrackKey
// 0x0010
struct FJackAnimControlTrackKey
{
	float                                              AnimInterpSec;                                            // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlendRate;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SkipInterpSec;                                            // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsApplyAnimationRateFromDT;                              // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackAnimMontageDict
// 0x0010
struct FJackAnimMontageDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UAnimMontage*                                AnimMontage;                                              // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableAnimMontage
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableAnimMontage : public FTableRowBase
{
	class UAnimMontage*                                AnimMontage;                                              // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BlendInTime;                                              // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BlendOutTime;                                             // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TranslationMultiplier;                                    // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackUpdatingDynamicsCondition
// 0x000A
struct FJackUpdatingDynamicsCondition
{
	bool                                               bUpdateUpperDynamicState;                                 // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateLowerDynamicState;                                 // 0x0001(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateBodyExDynamicState;                                // 0x0002(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateHairDynamicState;                                  // 0x0003(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateHairExDynamicState;                                // 0x0004(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateMantleDynamicState;                                // 0x0005(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateOtherDynamicState;                                 // 0x0006(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateCacheVelocity;                                     // 0x0007(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateWindBaseCach;                                      // 0x0008(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bUpdateWindRandomizeCache;                                // 0x0009(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackLookAtNodeParam
// 0x0028
struct FJackLookAtNodeParam
{
	struct FJackLookAtClamp                            LookAtClamp;                                              // 0x0000(0x0020) (Edit, BlueprintVisi)
	float                                              RollRate;                                                 // 0x0020(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              NodeAlpha;                                                // 0x0024(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackFootIKResult
// 0x0160
struct FJackFootIKResult
{
	float                                              Offset;                                                   // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bGotGround;                                               // 0x0004(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	struct FVector                                     EffectorLocation;                                         // 0x0008(0x000C) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnTemplate, EditConst, IsPlainOldData)
	struct FVector                                     EffectorLocationInWorldSpace;                             // 0x0014(0x000C) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnTemplate, EditConst, IsPlainOldData)
	struct FRotator                                    SoleRotationOffset;                                       // 0x0020(0x000C) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnTemplate, EditConst, IsPlainOldData)
	float                                              Alpha;                                                    // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	struct FHitResult                                  HitResult;                                                // 0x0030(0x0088) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnTemplate, EditConst, IsPlainOldData)
	struct FHitResult                                  WaterSurfaceHitResult;                                    // 0x00B8(0x0088) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnTemplate, EditConst, IsPlainOldData)
	float                                              HeightByMeshRotation;                                     // 0x0140(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1C];                                      // 0x0144(0x001C) MISSED OFFSET
};

// ScriptStruct JackGame.JackLDT_CharacterMaterialUpdater
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CharacterMaterialUpdater : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackAnimNotify_PlayMaterialAnimation_ApplyParts
// 0x0005
struct FJackAnimNotify_PlayMaterialAnimation_ApplyParts
{
	bool                                               bApplyCharacterBody;                                      // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyRightWeaponBody;                                    // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyRightWeaponCase;                                    // 0x0002(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyLeftWeaponBody;                                     // 0x0003(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bApplyLeftWeaponCase;                                     // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackLDT_PresetCameraShake
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PresetCameraShake : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PresetForceFeedback
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PresetForceFeedback : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackAttackBurstSphere
// 0x0038
struct FJackAttackBurstSphere
{
	struct FVector                                     Offset;                                                   // 0x0000(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	float                                              StartSize;                                                // 0x000C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              EndSize;                                                  // 0x0010(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              DamageFalloff;                                            // 0x0014(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0018(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERelativeTransformSpace>               SocketSpace;                                              // 0x0020(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	class UClass*                                      AttackHitEffect;                                          // 0x0028(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bRelativeScale;                                           // 0x0030(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackAttackSphere
// 0x0030
struct FJackAttackSphere
{
	struct FVector                                     Offset;                                                   // 0x0000(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	float                                              Radius;                                                   // 0x000C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0010(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERelativeTransformSpace>               SocketSpace;                                              // 0x0018(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	class UClass*                                      AttackHitEffect;                                          // 0x0020(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bRelativeScale;                                           // 0x0028(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackAttackRay
// 0x0048
struct FJackAttackRay
{
	struct FVector                                     Offset;                                                   // 0x0000(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	struct FVector                                     Direction;                                                // 0x000C(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	float                                              Radius;                                                   // 0x0018(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              StartLength;                                              // 0x001C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              EndLength;                                                // 0x0020(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FName                                       SocketName;                                               // 0x0028(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ERelativeTransformSpace>               SocketSpace;                                              // 0x0030(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	class UClass*                                      AttackHitEffect;                                          // 0x0038(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bRelativeScale;                                           // 0x0040(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackBoneHiddenPresetNameList
// 0x0010
struct FJackBoneHiddenPresetNameList
{
	struct FName                                       PresetName;                                               // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsHidden;                                                // 0x0008(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsHiddenWhenAnimEnd;                                     // 0x0009(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsHiddenWhenNotifyEnd;                                   // 0x000A(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x000B(0x0005) MISSED OFFSET
};

// ScriptStruct JackGame.JackLookAtBoneDirectionalSetting
// 0x0008
struct FJackLookAtBoneDirectionalSetting
{
	float                                              MaxAngle;                                                 // 0x0000(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AngleRate;                                                // 0x0004(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackLookAtBoneSetting
// 0x0024
struct FJackLookAtBoneSetting
{
	struct FJackLookAtBoneDirectionalSetting           YawLeft;                                                  // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FJackLookAtBoneDirectionalSetting           YawRight;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FJackLookAtBoneDirectionalSetting           PitchUp;                                                  // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FJackLookAtBoneDirectionalSetting           PitchDown;                                                // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              RollRate;                                                 // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackBattleCommandAI_ExecTurnCommandResult
// 0x02A0
struct FJackBattleCommandAI_ExecTurnCommandResult
{
	struct FJackActionPlayParam                        ActionPlayParam;                                          // 0x0000(0x0290) (Edit, BlueprintVisi)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0290(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackKonranNanimoSinaiInfo
// 0x0010
struct FJackKonranNanimoSinaiInfo
{
	struct FName                                       ActionID;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      Per;                                                      // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackMonsterBattleAIExceptionInfo
// 0x0030
struct FJackMonsterBattleAIExceptionInfo
{
	struct FName                                       ActionID;                                                 // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Motion_Cast;                                              // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Motion_Shot;                                              // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleActionTargetType                        Target_Type;                                              // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleActionSelectType                        Select_Type;                                              // 0x0019(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x001A(0x0002) MISSED OFFSET
	int                                                Groupe_Check;                                             // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Invoke_Rate;                                              // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FName                                       SecondCheckID;                                            // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMonsterBattleAI
// 0x00F0 (0x00F8 - 0x0008)
struct FJackDataTableMonsterBattleAI : public FTableRowBase
{
	EJackBattleIntelligenceType                        IntelligenceType;                                         // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleActionPatternType                       ActionPatternType;                                        // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleMoreActionType                          MoreActionType;                                           // 0x000A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x000B(0x0001) MISSED OFFSET
	int                                                DefaultActionSlotID;                                      // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_01_ActionID;                                       // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_01_Motion_Cast;                                    // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_01_Motion_Shot;                                    // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleActionTargetType                        Action_01_Target_Type;                                    // 0x0028(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleActionSelectType                        Action_01_Select_Type;                                    // 0x0029(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                Action_01_Groupe_Check;                                   // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_02_ActionID;                                       // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_02_Motion_Cast;                                    // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_02_Motion_Shot;                                    // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleActionTargetType                        Action_02_Target_Type;                                    // 0x0048(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleActionSelectType                        Action_02_Select_Type;                                    // 0x0049(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x004A(0x0002) MISSED OFFSET
	int                                                Action_02_Groupe_Check;                                   // 0x004C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_03_ActionID;                                       // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_03_Motion_Cast;                                    // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_03_Motion_Shot;                                    // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleActionTargetType                        Action_03_Target_Type;                                    // 0x0068(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleActionSelectType                        Action_03_Select_Type;                                    // 0x0069(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x006A(0x0002) MISSED OFFSET
	int                                                Action_03_Groupe_Check;                                   // 0x006C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_04_ActionID;                                       // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_04_Motion_Cast;                                    // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_04_Motion_Shot;                                    // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleActionTargetType                        Action_04_Target_Type;                                    // 0x0088(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleActionSelectType                        Action_04_Select_Type;                                    // 0x0089(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x008A(0x0002) MISSED OFFSET
	int                                                Action_04_Groupe_Check;                                   // 0x008C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_05_ActionID;                                       // 0x0090(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_05_Motion_Cast;                                    // 0x0098(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_05_Motion_Shot;                                    // 0x00A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleActionTargetType                        Action_05_Target_Type;                                    // 0x00A8(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleActionSelectType                        Action_05_Select_Type;                                    // 0x00A9(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x00AA(0x0002) MISSED OFFSET
	int                                                Action_05_Groupe_Check;                                   // 0x00AC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_06_ActionID;                                       // 0x00B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_06_Motion_Cast;                                    // 0x00B8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Action_06_Motion_Shot;                                    // 0x00C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleActionTargetType                        Action_06_Target_Type;                                    // 0x00C8(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleActionSelectType                        Action_06_Select_Type;                                    // 0x00C9(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x00CA(0x0002) MISSED OFFSET
	int                                                Action_06_Groupe_Check;                                   // 0x00CC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FJackMonsterBattleAIExceptionInfo>   ExceptionAction;                                          // 0x00D0(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData07[0x18];                                      // 0x00E0(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableMonsterBattleAI.BattleCommandAIClass
};

// ScriptStruct JackGame.JackPreemptiveStrikePersons
// 0x0010
struct FJackPreemptiveStrikePersons
{
	TArray<int>                                        Probability;                                              // 0x0000(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackBattleFieldPermitVolumeInfo
// 0x0030
struct FJackBattleFieldPermitVolumeInfo
{
	class AVolume*                                     Volume;                                                   // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BattleFieldRadius;                                        // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	class AJackLocator*                                Orientation;                                              // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOrientationFlipEnable;                                   // 0x0018(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	TArray<class AJackBattleFieldGenerator_BlockingVolume*> BlockingVolumeArray;                                      // 0x0020(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackBattleFukidasiTalkCondition
// 0x0020
struct FJackBattleFukidasiTalkCondition
{
	EJackBattleFukidasiTalkTarget                      Target;                                                   // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                ValueTargetParam;                                         // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       StringTargetParam;                                        // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleFukidasiTalkCondChara                   TalkCondChara;                                            // 0x0010(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleFukidasiTalkConditionType               CaseType;                                                 // 0x0011(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0012(0x0002) MISSED OFFSET
	int                                                ValueCaseParam;                                           // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       StringCaseParam;                                          // 0x0018(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackBattleFukidasiTalkCommandInfo
// 0x0020
struct FJackBattleFukidasiTalkCommandInfo
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
};

// ScriptStruct JackGame.JackBattleGroup
// 0x0098
struct FJackBattleGroup
{
	TWeakObjectPtr<class AJackCharacter>               Leader;                                                   // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Location;                                                 // 0x0008(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	struct FVector                                     LocalLocation;                                            // 0x0014(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	struct FRotator                                    Direction;                                                // 0x0020(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	float                                              Radius;                                                   // 0x002C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              GroundHeight;                                             // 0x0030(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0034(0x001C) MISSED OFFSET
	int                                                Index;                                                    // 0x0050(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TEnumAsByte<EJackMight>                            Might;                                                    // 0x0054(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	struct FName                                       MonsterID;                                                // 0x0058(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0060(0x0010) MISSED OFFSET
	TArray<TWeakObjectPtr<class AJackCharacter>>       JoinedCharacters;                                         // 0x0070(0x0010) (ZeroConstructor)
	TArray<struct FVector>                             GroupLocations;                                           // 0x0080(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData03[0x8];                                       // 0x0090(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackBattleTroop
// 0x00A8
struct FJackBattleTroop
{
	struct FVector                                     Location;                                                 // 0x0000(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	struct FRotator                                    Direction;                                                // 0x000C(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	float                                              Radius;                                                   // 0x0018(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              HighDensityRate;                                          // 0x001C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x70];                                      // 0x0020(0x0070) MISSED OFFSET
	int                                                Index;                                                    // 0x0090(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMight>                            Might;                                                    // 0x0094(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0095(0x0003) MISSED OFFSET
	TArray<struct FJackBattleGroup>                    JoinedGroups;                                             // 0x0098(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
};

// ScriptStruct JackGame.JackGroupFormation
// 0x0008
struct FJackGroupFormation
{
	float                                              X;                                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackGroupFormations
// 0x0010
struct FJackGroupFormations
{
	TArray<struct FJackGroupFormation>                 GroupFormation;                                           // 0x0000(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackGroupFormationsList
// 0x0010
struct FJackGroupFormationsList
{
	TArray<struct FJackGroupFormations>                GroupFormations;                                          // 0x0000(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackGroupGuestExceptionFormationInfo
// 0x000C
struct FJackGroupGuestExceptionFormationInfo
{
	TEnumAsByte<EJackCharacter>                        CharacterType;                                            // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FJackGroupFormation                         Formation;                                                // 0x0004(0x0008) (Edit)
};

// ScriptStruct JackGame.JackGroupID_Summarize
// 0x0010
struct FJackGroupID_Summarize
{
	TArray<struct FName>                               Ids;                                                      // 0x0000(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackBattleNavigationQueryFilterDict
// 0x0010
struct FJackBattleNavigationQueryFilterDict
{
	class UClass*                                      NavigationQueryFilter;                                    // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      BattleNavigationQueryFilter;                              // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackCommand
// 0x0010
struct FJackCommand
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackCommandBattleInitialize
// 0x0030 (0x0040 - 0x0010)
struct FJackCommandBattleInitialize : public FJackCommand
{
	unsigned char                                      UnknownData00[0x30];                                      // 0x0010(0x0030) MISSED OFFSET
};

// ScriptStruct JackGame.JackBattleMemberChangeCharaInfo
// 0x0050
struct FJackBattleMemberChangeCharaInfo
{
	int                                                Index;                                                    // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                OldIndex;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bShouldDestroy;                                           // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	TWeakObjectPtr<class UJackFriendGameCharacter>     LeaveGameCharacter;                                       // 0x000C(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UJackFriendGameCharacter>     JoinGameCharacter;                                        // 0x0014(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FTransform                                  LeaveCharacterTransform;                                  // 0x0020(0x0030) (Edit, IsPlainOldData)
};

// ScriptStruct JackGame.JackBattleFieldFoliageDitherDetailInfo
// 0x000C
struct FJackBattleFieldFoliageDitherDetailInfo
{
	float                                              OpacityNear;                                              // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Opacity;                                                  // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NearDistanceMul;                                          // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackBattleFieldFoliageDitherInfo
// 0x0028
struct FJackBattleFieldFoliageDitherInfo
{
	float                                              BattleFieldRadius;                                        // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FJackBattleFieldFoliageDitherDetailInfo     DetailInfos[0x3];                                         // 0x0004(0x000C) (Edit)
};

// ScriptStruct JackGame.JackKougekiInfo
// 0x0018
struct FJackKougekiInfo
{
	struct FName                                       NormalActionID;                                           // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       DistantActionID;                                          // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DistantThreshold;                                         // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              DistantBranchPer;                                         // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackPreparationViewData
// 0x0010
struct FJackPreparationViewData
{
	class UClass*                                      CameraDataClass;                                          // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CorrespondingRadius;                                      // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackAutoCameraItemOffset
// 0x0018
struct FJackAutoCameraItemOffset
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScoreRectRedW;                                            // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScoreRectRedH;                                            // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScoreRectRedOffsetZ;                                      // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackAutoCameraScoreRect
// 0x0078
struct FJackAutoCameraScoreRect
{
	struct FName                                       ScoreRectRedSocket;                                       // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScoreRectRedW;                                            // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScoreRectRedH;                                            // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScoreRectRedOffsetZ;                                      // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	TArray<struct FJackAutoCameraItemOffset>           RedOffset;                                                // 0x0018(0x0010) (Edit, ZeroConstructor)
	struct FName                                       ScoreRectBlueSocket;                                      // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScoreRectBlueW;                                           // 0x0030(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScoreRectBlueH;                                           // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScoreRectBlueOffsetZ;                                     // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	TArray<struct FJackAutoCameraItemOffset>           BlueOffset;                                               // 0x0040(0x0010) (Edit, ZeroConstructor)
	struct FName                                       ScoreRectYellowSocket;                                    // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScoreRectYellowW;                                         // 0x0058(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScoreRectYellowH;                                         // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ScoreRectYellowOffsetZ;                                   // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	TArray<struct FJackAutoCameraItemOffset>           YellowOffset;                                             // 0x0068(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackHazukasiiNoroiMessageInfo
// 0x0020
struct FJackHazukasiiNoroiMessageInfo
{
	struct FString                                     TextID1;                                                  // 0x0000(0x0010) (Edit, ZeroConstructor)
	struct FString                                     TextID2;                                                  // 0x0010(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackHitStopPresetInfo
// 0x0002
struct FJackHitStopPresetInfo
{
	EJackHitStopType                                   HitStopType_Normal;                                       // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackHitStopType                                   HitStopType_Critical;                                     // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackHitCameraShakePresetInfo
// 0x0010
struct FJackHitCameraShakePresetInfo
{
	struct FName                                       CameraShake_Normal;                                       // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       CameraShake_Critical;                                     // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackActionCompactMessageInfo
// 0x0050
struct FJackActionCompactMessageInfo
{
	struct FString                                     TextID;                                                   // 0x0000(0x0010) (Edit, ZeroConstructor)
	struct FString                                     GoukeiCompactMessageID;                                   // 0x0010(0x0010) (Edit, ZeroConstructor)
	struct FString                                     HeikinCompactMessageID;                                   // 0x0020(0x0010) (Edit, ZeroConstructor)
	struct FString                                     GoukeiEnemyCompactMessageID;                              // 0x0030(0x0010) (Edit, ZeroConstructor)
	struct FString                                     HeikinEnemyCompactMessageID;                              // 0x0040(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackDamageCompactMessageInfo
// 0x0050
struct FJackDamageCompactMessageInfo
{
	struct FName                                       BattleTextID;                                             // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EJackBattleMessageCompactType                      CompactType;                                              // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FString                                     GoukeiPlayerCompactMessageID;                             // 0x0010(0x0010) (Edit, ZeroConstructor)
	struct FString                                     HeikinPlayerCompactMessageID;                             // 0x0020(0x0010) (Edit, ZeroConstructor)
	struct FString                                     GoukeiEnemyCompactMessageID;                              // 0x0030(0x0010) (Edit, ZeroConstructor)
	struct FString                                     HeikinEnemyCompactMessageID;                              // 0x0040(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackOddEffectCompactMessageInfo
// 0x0050
struct FJackOddEffectCompactMessageInfo
{
	struct FName                                       OddEffectID;                                              // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EJackBattleMessageCompactType                      CompactType;                                              // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FString                                     CompactMessageID;                                         // 0x0010(0x0010) (Edit, ZeroConstructor)
	struct FString                                     HeikinCompactMessageID;                                   // 0x0020(0x0010) (Edit, ZeroConstructor)
	struct FString                                     EnemyCompactMessageID;                                    // 0x0030(0x0010) (Edit, ZeroConstructor)
	struct FString                                     HeikinEnemyCompactMessageID;                              // 0x0040(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackPafuPafuMessageInfo
// 0x0018
struct FJackPafuPafuMessageInfo
{
	TEnumAsByte<EJackCharacter>                        TargetCharacterType;                                      // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     TextID;                                                   // 0x0008(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackActionBalloonDelayInfo
// 0x0010
struct FJackActionBalloonDelayInfo
{
	struct FName                                       ActionID;                                                 // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackPopupBalloon>                     BalloonType;                                              // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              DelaySec;                                                 // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackBattleResultExpInfo
// 0x0014
struct FJackBattleResultExpInfo
{
	TWeakObjectPtr<class UJackGameCharacter>           GameCharacter;                                            // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Exp;                                                      // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                FieldExp;                                                 // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSibariExp;                                               // 0x0010(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackDropItemStructs
// 0x0038
struct FJackDropItemStructs
{
	struct FName                                       ItemName;                                                 // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FString                                     Owner;                                                    // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	class UJackGameCharacter*                          OwnerCharacter;                                           // 0x0018(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                RareBox;                                                  // 0x0020(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                Rarity;                                                   // 0x0024(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                Probability;                                              // 0x0028(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SortNo;                                                   // 0x002C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                Random;                                                   // 0x0030(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackBattleResultFormations
// 0x0010
struct FJackBattleResultFormations
{
	TArray<struct FVector>                             Formation;                                                // 0x0000(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackBattleSelectionCharacterInfo
// 0x0018
struct FJackBattleSelectionCharacterInfo
{
	TWeakObjectPtr<class AJackCharacter>               Character;                                                // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UJackMaterialUpdaterHandle>   MaterialUpdaterHandle;                                    // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class AJackCharacter>               MaterialAnimationCharacter;                               // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackOddEffect_OnTurnStartResult
// 0x0028
struct FJackOddEffect_OnTurnStartResult
{
	TArray<struct FName>                               ClearOddEffectIDArray;                                    // 0x0000(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FJackActionModule>                   ActionModules;                                            // 0x0010(0x0010) (Edit, ZeroConstructor, EditConst)
	bool                                               bSkipTurn;                                                // 0x0020(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackOddEffect_OnTurnEndResult
// 0x0020
struct FJackOddEffect_OnTurnEndResult
{
	TArray<struct FName>                               ClearOddEffectIDArray;                                    // 0x0000(0x0010) (Edit, ZeroConstructor, EditConst)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0010(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackBattleExtraToubatuCountInfo
// 0x0010
struct FJackBattleExtraToubatuCountInfo
{
	struct FName                                       MonsterID;                                                // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                ToubatuCount;                                             // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackZoneStartParameter
// 0x0020
struct FJackZoneStartParameter
{
	struct FName                                       ActionCameraID;                                           // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       AnimMontage;                                              // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TotalSequenceTime;                                        // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Notify_ZoneSet;                                           // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Notify_Message;                                           // 0x0018(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackZonePointInvokeInfo
// 0x0008
struct FJackZonePointInvokeInfo
{
	float                                              ZonePointPer;                                             // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ZoneInvokePer;                                            // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackCharacterZonePointInfo
// 0x0008
struct FJackCharacterZonePointInfo
{
	TEnumAsByte<EJackCharacter>                        CharacterType;                                            // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              ZonePoint;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackDamageZonePointInfo
// 0x0008
struct FJackDamageZonePointInfo
{
	float                                              DamagePer;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              ZonePoint;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackBGMControlTrackKey
// 0x0018
struct FJackBGMControlTrackKey
{
	float                                              TimeVar;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       BGMID;                                                    // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsStackCall;                                             // 0x0010(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              PrevMusicFOTime;                                          // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackBlendAnimOverrideTrackKeyInfo
// 0x0010
struct FJackBlendAnimOverrideTrackKeyInfo
{
	float                                              TimeVar;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	class UAnimSequence*                               AnimSeq;                                                  // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackBlendAnimPlayTrackKey
// 0x0004
struct FJackBlendAnimPlayTrackKey
{
	float                                              AnimInterpSec;                                            // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackEffects
// 0x0040
struct FJackEffects
{
	class UParticleSystem*                             Effect;                                                   // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  Sound;                                                    // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAttached;                                                // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FName                                       SocketName;                                               // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EAttachLocation>                       AttachLocationType;                                       // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
	struct FVector                                     OffsetLocation;                                           // 0x0024(0x000C) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    OffsetRotation;                                           // 0x0030(0x000C) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDecalData
// 0x0038
struct FJackDecalData
{
	class UMaterialInterface*                          DecalMaterial;                                            // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DecalBaseSize;                                            // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DecalRandomRangeSize;                                     // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DecalMaxHeight;                                           // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LifeSpan;                                                 // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxTextureRotateRandomDegree;                             // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxTexturePositionRandom;                                 // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UCurveLinearColor*                           ColorCurve;                                               // 0x0020(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bApplyCurveAlphaOnly;                                     // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              FadeOutTime;                                              // 0x002C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bStaticMeshDecal;                                         // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackCollideEffects
// 0x0038 (0x0078 - 0x0040)
struct FJackCollideEffects : public FJackEffects
{
	struct FJackDecalData                              Decal;                                                    // 0x0040(0x0038) (Edit, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackCaptionTrackKey
// 0x0088
struct FJackCaptionTrackKey
{
	float                                              TimeVar;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       TextID;                                                   // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bCloseFlag;                                               // 0x0010(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              CaptionCloseSec;                                          // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoLipSyncEnable;                                       // 0x0018(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	float                                              AutoLipSyncSec;                                           // 0x001C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AutoLipSyncStartOffset;                                   // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LipChangeSec;                                             // 0x0024(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseVowelLip;                                             // 0x0028(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackVowel                                         StartVowelType;                                           // 0x0029(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	float                                              StartVowelSec;                                            // 0x002C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EJackVowel                                         EndVowelType;                                             // 0x0030(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              EndVowelSec;                                              // 0x0034(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LipSyncApplyRate;                                         // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackPipipiType>                       PipipiOverride;                                           // 0x003C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	class UAnimSequence*                               NodReaction;                                              // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bNodReactionLoop;                                         // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	class UAnimSequence*                               ManuralLipNodReaction;                                    // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bManuralLipNodReactionLoop;                               // 0x0058(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bUseManuralLipNodReactionApplyRate;                       // 0x0059(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x2];                                       // 0x005A(0x0002) MISSED OFFSET
	float                                              NodReactionApplyRate;                                     // 0x005C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              NodReactionFOTime;                                        // 0x0060(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FName                                       TalkerID;                                                 // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bDynamicTextID;                                           // 0x0070(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	struct FName                                       DynamicTextLabel;                                         // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              JumpWaitSec;                                              // 0x0080(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackCaptionLipInfo
// 0x0048
struct FJackCaptionLipInfo
{
	bool                                               bLipSyncEnable;                                           // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              LipSyncSec;                                               // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LipSyncStartOffset;                                       // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LipChangeSec;                                             // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bUseVowel;                                                // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	EJackVowel                                         StartVowelType;                                           // 0x0011(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0012(0x0002) MISSED OFFSET
	float                                              StartVowelSec;                                            // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	EJackVowel                                         EndVowelType;                                             // 0x0018(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	float                                              EndVowelSec;                                              // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              LipSyncApplyRate;                                         // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	TArray<class USoundBase*>                          VoiceAssets;                                              // 0x0028(0x0010) (ZeroConstructor)
	class UDataTable*                                  LipPoseDataBase;                                          // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData)
	class UDataTable*                                  VoiceTimelineDataBase;                                    // 0x0040(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackNodInfo
// 0x0018
struct FJackNodInfo
{
	class UAnimSequence*                               AnimSequence;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bLoop;                                                    // 0x0008(0x0001) (ZeroConstructor, IsPlainOldData)
	bool                                               bUseManualLipApplyRate;                                   // 0x0009(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	float                                              ApplyRate;                                                // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              FOTime;                                                   // 0x0010(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackCaptionTrackShowSerifuInfo
// 0x00B8
struct FJackCaptionTrackShowSerifuInfo
{
	TWeakObjectPtr<class AMatineeActor>                RequestMatinee;                                           // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0008(0x0020) MISSED OFFSET
	struct FJackCaptionLipInfo                         LipSyncInfo;                                              // 0x0028(0x0048)
	struct FJackNodInfo                                NodInfo;                                                  // 0x0070(0x0018)
	unsigned char                                      UnknownData01[0x30];                                      // 0x0088(0x0030) MISSED OFFSET
};

// ScriptStruct JackGame.JackCaptionTrackSynchroInfo
// 0x000C
struct FJackCaptionTrackSynchroInfo
{
	TWeakObjectPtr<class AMatineeActor>                RequestMatinee;                                           // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0008(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackVoiceTimelineExecutor
// 0x0028
struct FJackVoiceTimelineExecutor
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	TArray<TWeakObjectPtr<class AActor>>               TargetNPCWeak;                                            // 0x0008(0x0010) (ZeroConstructor)
	TArray<class UJackVoiceTimelineTrack*>             VoiceTimelineTracks;                                      // 0x0018(0x0010) (ZeroConstructor)
};

// ScriptStruct JackGame.JackLipSyncController
// 0x0190
struct FJackLipSyncController
{
	unsigned char                                      UnknownData00[0x68];                                      // 0x0000(0x0068) MISSED OFFSET
	TArray<class USoundBase*>                          VoiceAssets;                                              // 0x0068(0x0010) (ZeroConstructor)
	class UAudioComponent*                             AudioComponent;                                           // 0x0078(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UDataTable*                                  LipPoseDataTable;                                         // 0x0080(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0xD8];                                      // 0x0088(0x00D8) MISSED OFFSET
	struct FJackVoiceTimelineExecutor                  VoiceTimelineExecutor;                                    // 0x0160(0x0028)
	unsigned char                                      UnknownData02[0x8];                                       // 0x0188(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackCaptureCharacterInfo
// 0x00B0
struct FJackCaptureCharacterInfo
{
	unsigned char                                      UnknownData00[0x30];                                      // 0x0000(0x0030) MISSED OFFSET
	class UClass*                                      CharacterClass;                                           // 0x0030(0x0008) (ZeroConstructor, IsPlainOldData)
	class AJackCharacter*                              Character;                                                // 0x0038(0x0008) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x70];                                      // 0x0040(0x0070) MISSED OFFSET
};

// ScriptStruct JackGame.JackZukanMotionDirectionalLightParameter
// 0x0010
struct FJackZukanMotionDirectionalLightParameter
{
	float                                              Intensity;                                                // 0x0000(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x0004(0x000C) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackZukanMotionPointLightParameter
// 0x001C
struct FJackZukanMotionPointLightParameter
{
	bool                                               bEnable;                                                  // 0x0000(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Intensity;                                                // 0x0004(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     Position;                                                 // 0x0008(0x000C) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              AttenuationRadius;                                        // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SourceRadius;                                             // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackCharacterCoordinateLODInfo
// 0x0010
struct FJackCharacterCoordinateLODInfo
{
	TArray<struct FSkeletalMeshOverrideLODInfo>        LODInfo;                                                  // 0x0000(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
};

// ScriptStruct JackGame.JackActiveTokugiSpecialConditionSetting
// 0x0020
struct FJackActiveTokugiSpecialConditionSetting
{
	struct FName                                       ActiveTokugiID;                                           // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               MustEquippedItemID;                                       // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	struct FName                                       MustPossessionItemID;                                     // 0x0018(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackCharacterTickIntervalSetting
// 0x0008
struct FJackCharacterTickIntervalSetting
{
	float                                              CameraDistance;                                           // 0x0000(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                TickInterval;                                             // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackCharacterDisplayLimitSetting
// 0x0010
struct FJackCharacterDisplayLimitSetting
{
	struct FName                                       PersistentLevelName;                                      // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                DisplayNum;                                               // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackCoin_ExchageItem
// 0x0018
struct FJackCoin_ExchageItem
{
	struct FName                                       PrizeId;                                                  // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       ItemID;                                                   // 0x0008(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                ExchangeNumber;                                           // 0x0010(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bExchange;                                                // 0x0014(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bSoldOut;                                                 // 0x0015(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0016(0x0002) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableCoinShop
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableCoinShop : public FTableRowBase
{
	struct FString                                     TalkTypeID;                                               // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                ExchangeGold;                                             // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableCoinExchange
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableCoinExchange : public FTableRowBase
{
	struct FName                                       ItemID;                                                   // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ExchangeNumber;                                           // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackExchange>                         ExchangeType;                                             // 0x0014(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	struct FName                                       QuestionItemName;                                         // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       QuestionItemExplanation;                                  // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackCommandSample5
// 0x0008 (0x0018 - 0x0010)
struct FJackCommandSample5 : public FJackCommand
{
	int                                                HogeParameter;                                            // 0x0010(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackCommandSample4
// 0x0008 (0x0018 - 0x0010)
struct FJackCommandSample4 : public FJackCommand
{
	int                                                HogeParameter;                                            // 0x0010(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackCommandSample3
// 0x0008 (0x0018 - 0x0010)
struct FJackCommandSample3 : public FJackCommand
{
	int                                                HogeParameter;                                            // 0x0010(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackCoordSoundTrackKey
// 0x0018
struct FJackCoordSoundTrackKey
{
	float                                              TimeVar;                                                  // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackCoordSound>                       CoordSoundType;                                           // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	struct FName                                       SocketBoneName;                                           // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Volume;                                                   // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackCrossFadeTrackKey
// 0x000C
struct FJackCrossFadeTrackKey
{
	float                                              TimeVar;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              StartWait;                                                // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FadeSec;                                                  // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackEquipmentClassificationInfo
// 0x0020
struct FJackEquipmentClassificationInfo
{
	struct FName                                       HandednessUnsheathedSocketName;                           // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       HandednessSheathedSocketName;                             // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       HandUnsheathedSocketName;                                 // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       HandSheathedSocketName;                                   // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackEquipmentClassificationInfoDict
// 0x0050
struct FJackEquipmentClassificationInfoDict
{
	TEnumAsByte<EJackItem_Classification>              ClassificationType;                                       // 0x0000(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              MeshScale;                                                // 0x0004(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHiddenInField;                                           // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FJackEquipmentClassificationInfo            BodyInfo;                                                 // 0x0010(0x0020) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackEquipmentClassificationInfo            CaseInfo;                                                 // 0x0030(0x0020) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackEventBattleMonsterDeployInfo
// 0x0010
struct FJackEventBattleMonsterDeployInfo
{
	struct FName                                       MonsterID;                                                // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsKeyMonster;                                            // 0x0008(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bTextureMipLevelsToBeResident;                            // 0x0009(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x000A(0x0006) MISSED OFFSET
};

// ScriptStruct JackGame.JackBattleResultOverrideVoiceInfo
// 0x0010
struct FJackBattleResultOverrideVoiceInfo
{
	TEnumAsByte<EJackCharacter>                        CharacterType;                                            // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       VoiceID;                                                  // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableEventBattle
// 0x0140 (0x0148 - 0x0008)
struct FJackDataTableEventBattle : public FTableRowBase
{
	TArray<struct FJackEventBattleMonsterDeployInfo>   MonsterDeployInfos;                                       // 0x0008(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	float                                              BattleFieldRadius;                                        // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleNigeruConditionType                     NigeruConditionType;                                      // 0x001C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBattleFieldNigeruInvalid;                                // 0x001D(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackEventBattleRaidState>             RaidState;                                                // 0x001E(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSkipCrashEffect;                                         // 0x001F(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0020(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEventBattle.CrashEffectSe
	bool                                               bSkipMonsterAppear;                                       // 0x0038(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSkipResult;                                              // 0x0039(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSkipResultZenmetu;                                       // 0x003A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackFadeColor>                        StartFadeColor;                                           // 0x003B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StartFadeTime;                                            // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackFadeColor>                        EndFadeColor;                                             // 0x0040(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              EndFadeTime;                                              // 0x0044(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AppearDisplayName;                                        // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AppearDisplayName2;                                       // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AppearDisplayName3;                                       // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AppearDisplayName4;                                       // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AppearDisplayName5;                                       // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AppearOverwriteMessages;                                  // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AppearAddMessages;                                        // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackEventBattleAppearLine>            AppearLineState;                                          // 0x0080(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0081(0x0003) MISSED OFFSET
	float                                              AppearCameraStartWaitTime;                                // 0x0084(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AppearPlayTime;                                           // 0x0088(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AppearAccompanyingAnimationDelayTime;                     // 0x008C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PreparationCameraAngle_Roll;                              // 0x0090(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PreparationCameraAngle_Pitch;                             // 0x0094(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PreparationCameraAngle_Yaw;                               // 0x0098(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FirstCameraAngle_Roll;                                    // 0x009C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FirstCameraAngle_Pitch;                                   // 0x00A0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FirstCameraAngle_Yaw;                                     // 0x00A4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                EndRoundCount;                                            // 0x00A8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bToubatuEffectEnable;                                     // 0x00AC(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x00AD(0x0003) MISSED OFFSET
	struct FName                                       OverrideToubatuTextID;                                    // 0x00B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NerusenActionCount;                                       // 0x00B8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET
	TArray<struct FJackBattleResultOverrideVoiceInfo>  BattleResultOverrideVoiceInfos;                           // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       HiddenExclusionTag;                                       // 0x00D0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x18];                                      // 0x00D8(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableEventBattle.CameraDataClass
	unsigned char                                      UnknownData06[0x18];                                      // 0x00F0(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableEventBattle.CameraDataClass_Simple
	unsigned char                                      UnknownData07[0x18];                                      // 0x0108(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableEventBattle.CameraDataClass_PreparationView
	float                                              OverrideBattleFieldInfoRadius;                            // 0x0120(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIgnoreFastModeByMonsterAppear;                           // 0x0124(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0125(0x0003) MISSED OFFSET
	struct FString                                     MapJumpInfo;                                              // 0x0128(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     StartEventInfo;                                           // 0x0138(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackEventBattlePlayerInfo
// 0x001C
struct FJackEventBattlePlayerInfo
{
	bool                                               bBattleStartLocationDirectionValid;                       // 0x0000(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	struct FVector                                     BattleStartLocation;                                      // 0x0004(0x000C) (Edit, EditConst, IsPlainOldData)
	struct FVector                                     BattleStartDirection;                                     // 0x0010(0x000C) (Edit, EditConst, IsPlainOldData)
};

// ScriptStruct JackGame.JackEventBattleMonsterInfo
// 0x0024
struct FJackEventBattleMonsterInfo
{
	int                                                MonsterIndex;                                             // 0x0000(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	struct FVector                                     BattleStartLocation;                                      // 0x0004(0x000C) (Edit, EditConst, IsPlainOldData)
	struct FVector                                     BattleStartDirection;                                     // 0x0010(0x000C) (Edit, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x8];                                       // 0x001C(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackEyeLookAtTrackInfo
// 0x0008
struct FJackEyeLookAtTrackInfo
{
	float                                              IntrpSpeed;                                               // 0x0000(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              IntrpSec;                                                 // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackVowelSetting
// 0x0018
struct FJackVowelSetting
{
	TArray<EJackVowel>                                 NotFollowVowels;                                          // 0x0000(0x0010) (Edit, ZeroConstructor)
	float                                              SecondNoteOffsetTime;                                     // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SecondNoteBlendTime;                                      // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackEyeCloseFacialPose
// 0x0010
struct FJackEyeCloseFacialPose
{
	struct FName                                       PoseName;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsLeftEyeClose;                                          // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bIsRightEyeClose;                                         // 0x0009(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x000A(0x0006) MISSED OFFSET
};

// ScriptStruct JackGame.JackFacialAnimationBlendInfo
// 0x0020
struct FJackFacialAnimationBlendInfo
{
	struct FName                                       CurveName;                                                // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableFacialAnimCurve
// 0x0038 (0x0040 - 0x0008)
struct FJackDataTableFacialAnimCurve : public FTableRowBase
{
	struct FName                                       CurveName;                                                // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                RankingPriority;                                          // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                L_EyeFormIndex;                                           // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                R_EyeFormIndex;                                           // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	TArray<struct FName>                               UnHideBones;                                              // 0x0020(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               HideBones;                                                // 0x0030(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackFacialInfo_Eye
// 0x0010
struct FJackFacialInfo_Eye
{
	TWeakObjectPtr<class UAnimMontage>                 Animation;                                                // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BlinkCycleMinSec;                                         // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BlinkCycleMaxSec;                                         // 0x000C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackFacialInfo_Mouth
// 0x0008
struct FJackFacialInfo_Mouth
{
	TWeakObjectPtr<class UAnimMontage>                 Animation;                                                // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackFacialPresetTrackKey
// 0x0020
struct FJackFacialPresetTrackKey
{
	float                                              TimeVar;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       PresetName;                                               // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlendSec;                                                 // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FaceWeight;                                               // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsDisableState;                                           // 0x0018(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	EJackMatineeFacialReferanceState                   FacialState;                                              // 0x0019(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x001A(0x0006) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableShop
// 0x00F0 (0x00F8 - 0x0008)
struct FJackDataTableShop : public FTableRowBase
{
	struct FName                                       MapId;                                                    // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ShopName;                                                 // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackShop>                             ShopType;                                                 // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	struct FString                                     TalkTypeID;                                               // 0x0020(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              SaleRate;                                                 // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ScenarioSequenceNo;                                       // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_001;                                               // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_002;                                               // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_003;                                               // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_004;                                               // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_005;                                               // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_006;                                               // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_007;                                               // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_008;                                               // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_009;                                               // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_010;                                               // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_011;                                               // 0x0088(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_012;                                               // 0x0090(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_013;                                               // 0x0098(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_014;                                               // 0x00A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_015;                                               // 0x00A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_016;                                               // 0x00B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_017;                                               // 0x00B8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_018;                                               // 0x00C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_019;                                               // 0x00C8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_020;                                               // 0x00D0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_021;                                               // 0x00D8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_022;                                               // 0x00E0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_023;                                               // 0x00E8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_024;                                               // 0x00F0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableInn
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableInn : public FTableRowBase
{
	struct FString                                     TalkTypeID;                                               // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                BasePrice;                                                // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableChurch
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableChurch : public FTableRowBase
{
	TEnumAsByte<EJackChurch>                           ChurchType;                                               // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FString                                     TalkTypeID;                                               // 0x0010(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	EJackChurchFukkatunojumon                          FukkatunojumonType;                                       // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackChurchFukkatunojumon                          TenseiType;                                               // 0x0021(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0022(0x0006) MISSED OFFSET
	struct FName                                       RestartID;                                                // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableBank
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableBank : public FTableRowBase
{
	struct FString                                     TalkTypeID;                                               // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackCameraDataDict
// 0x0010
struct FJackCameraDataDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      CameraDataClass;                                          // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackLDT_NPCList
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_NPCList : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackFlagJumperKeyValue
// 0x0018
struct FJackFlagJumperKeyValue
{
	float                                              TimeVar;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       FlagName;                                                 // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FName                                       JumpLabelName;                                            // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackFootIKData
// 0x0078
struct FJackFootIKData
{
	struct FName                                       SocketName;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEnabled;                                                 // 0x0008(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              TraceUpperDistance;                                       // 0x000C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              TraceLowerDistance;                                       // 0x0010(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bSeparateLimitDistanceFromTrace;                          // 0x0014(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	float                                              UpperLimitDistance;                                       // 0x0018(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              LowerLimitDistance;                                       // 0x001C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              UpperActiveDistance;                                      // 0x0020(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              LowerActiveDistance;                                      // 0x0024(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              LengthFromSocketToSole;                                   // 0x0028(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              SweepedSphereRadius;                                      // 0x002C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FVector                                     TraceOffsetInComponentSpace;                              // 0x0030(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	float                                              ReferencePoseLength;                                      // 0x003C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              MinReferencePoseLength;                                   // 0x0040(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FVector                                     MinCheckLocationWithMeshRoot;                             // 0x0044(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	float                                              SocketToGroundHalfHeight;                                 // 0x0050(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bSeparateRotationRangeElements;                           // 0x0054(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
	struct FRotator                                    MinSeparateRotation;                                      // 0x0058(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	struct FRotator                                    MaxSeparateRotation;                                      // 0x0064(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	float                                              SeparateRotationApplyHeight;                              // 0x0070(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEasingFunc>                           SeparateRotationApplyEasingFunc;                          // 0x0074(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0075(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackFootIKDict
// 0x03A0
struct FJackFootIKDict
{
	struct FJackFootIKData                             Data;                                                     // 0x0000(0x0078) (Edit, BlueprintVisi, DisableEditOnInstance)
	struct FJackFootIKResult                           Result;                                                   // 0x0078(0x0160) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnTemplate, EditConst)
	unsigned char                                      UnknownData00[0x1B8];                                     // 0x01D8(0x01B8) MISSED OFFSET
	bool                                               bResultValidate;                                          // 0x0390(0x0001) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0xF];                                       // 0x0391(0x000F) MISSED OFFSET
};

// ScriptStruct JackGame.JackFootSoundTrackKey
// 0x0018
struct FJackFootSoundTrackKey
{
	float                                              TimeVar;                                                  // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	EJackCharacterFootstepType                         FootstepType;                                             // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	struct FName                                       SocketBoneName;                                           // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Volume;                                                   // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackArmIKResult
// 0x0040
struct FJackArmIKResult
{
	struct FTransform                                  EffectorTransform;                                        // 0x0000(0x0030) (Edit, BlueprintVisi, IsPlainOldData)
	float                                              Alpha;                                                    // 0x0030(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0034(0x000C) MISSED OFFSET
};

// ScriptStruct JackGame.JackPartyTalkDescription
// 0x0070
struct FJackPartyTalkDescription
{
	bool                                               bFound;                                                   // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0001(0x0001) MISSED OFFSET
	bool                                               bCamp;                                                    // 0x0002(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bPriority;                                                // 0x0003(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       TextID;                                                   // 0x0008(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        CharacterID;                                              // 0x0010(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	EJackPartyTalkIdleMotion                           IdleMotion;                                               // 0x0011(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackScenarioID>                       ScenarioID;                                               // 0x0012(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5];                                       // 0x0013(0x0005) MISSED OFFSET
	struct FName                                       DataTableKey;                                             // 0x0018(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x50];                                      // 0x0020(0x0050) MISSED OFFSET
};

// ScriptStruct JackGame.JackAttackTargetInfo
// 0x000C
struct FJackAttackTargetInfo
{
	TWeakObjectPtr<class UJackGameCharacter>           TargetGameCharacter;                                      // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                CurrentHitCount;                                          // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackAttackInfo
// 0x0180
struct FJackAttackInfo
{
	struct FJackActionResult                           ActionResult;                                             // 0x0000(0x0158) (Edit)
	int                                                CurrentHitGroupCount;                                     // 0x0158(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                CurrentActionHitRequestCount;                             // 0x015C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bKoukaDisable;                                            // 0x0160(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bPopupBalloonDisable;                                     // 0x0161(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bPendingDead;                                             // 0x0162(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0163(0x0005) MISSED OFFSET
	TArray<struct FJackAttackTargetInfo>               AttackTargetInfos;                                        // 0x0168(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate)
	bool                                               bUseDefaultHitEffectSub;                                  // 0x0178(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0179(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackGameCharacterParameters
// 0x004C
struct FJackGameCharacterParameters
{
	int                                                Tikara;                                                   // 0x0000(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                Minomamori;                                               // 0x0004(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                Subayasa;                                                 // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                Kiyousa;                                                  // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                Miryoku;                                                  // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                KougekiMaryoku;                                           // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                KaifukuMaryoku;                                           // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                MaxHP;                                                    // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                MaxMP;                                                    // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                Kougekiryoku;                                             // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                Syubiryoku;                                               // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              HPKyuuSyuuRate;                                           // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              MPKyuuSyuuRate;                                           // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              TateGuardRate;                                            // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              BukiGuardRate;                                            // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              MikawasiRate;                                             // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              CriticalRate;                                             // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              ZoneOnRate;                                               // 0x0044(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              MeityuuRate;                                              // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
};

// ScriptStruct JackGame.JackGameCharacterEquippedItem
// 0x0010
struct FJackGameCharacterEquippedItem
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	TEnumAsByte<EJackEquipmentRegion>                  Region;                                                   // 0x0008(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDecodeInfo
// 0x0068
struct FJackDecodeInfo
{
	TEnumAsByte<EJackFukkatunojumonPlatform>           PlatformType;                                             // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackFukkatunojumonSpell>              SpellType;                                                // 0x0001(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackFukkatunojumon>                   JumonType;                                                // 0x0002(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0003(0x0005) MISSED OFFSET
	struct FString                                     PlayerName;                                               // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	int                                                FukkatunojumonScenarioProgress;                           // 0x0018(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                FukkatunojumonReturnScenarioProgress;                     // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ScenarioProgress;                                         // 0x0020(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                ReturnScenarioProgress;                                   // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                RestartPointNumber;                                       // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FName                                       MapStart;                                                 // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FukkatunojumonLevel;                                      // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                FukkatunojumonGold;                                       // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Exp;                                                      // 0x0040(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                Gold;                                                     // 0x0044(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                ItemSet;                                                  // 0x0048(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	TArray<int>                                        ItemIds;                                                  // 0x0050(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	bool                                               bNewGame;                                                 // 0x0060(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bSpecialGame;                                             // 0x0061(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bStoreGame;                                               // 0x0062(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bNewGamePlus;                                             // 0x0063(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayGo;                                                  // 0x0064(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bInvalidSpell;                                            // 0x0065(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0066(0x0002) MISSED OFFSET
};

// ScriptStruct JackGame.JackScenarioTitleInfo
// 0x0028
struct FJackScenarioTitleInfo
{
	bool                                               bScenarioStartFlag;                                       // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     ScenarioTitleName;                                        // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	int                                                RestartPoint;                                             // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ScenarioProgress;                                         // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       ScenarioID;                                               // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableKaziAction
// 0x0058 (0x0060 - 0x0008)
struct FJackDataTableKaziAction : public FTableRowBase
{
	struct FName                                       ActionName;                                               // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionComment;                                            // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionComment1;                                           // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                GetLV;                                                    // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Kaisin_Percentage;                                        // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SortIndex;                                                // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FName                                       ActionType;                                               // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NeedCP;                                                   // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NumData_01;                                               // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NumData_02;                                               // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NumData_03;                                               // 0x0044(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0048(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableKaziAction.IconTexture
};

// ScriptStruct JackGame.JackFusigiKaziMaterialParameter
// 0x0078
struct FJackFusigiKaziMaterialParameter
{
	float                                              Brightness_Base;                                          // 0x0000(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              HueShift_Base;                                            // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BrightnessAdd_Base;                                       // 0x0008(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	struct FVector                                     BasePatternColorA;                                        // 0x0014(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	struct FVector                                     BasePatternColorB;                                        // 0x0020(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	struct FVector                                     OutlineColor;                                             // 0x002C(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	struct FVector                                     OutlineColorFinish;                                       // 0x0038(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	struct FVector                                     OutlineColorOver;                                         // 0x0044(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	float                                              OutlinePower;                                             // 0x0050(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              OutlinePowerFinish;                                       // 0x0054(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              OutlinePowerOver;                                         // 0x0058(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FVector                                     OverrideColor;                                            // 0x005C(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	struct FVector                                     SubOutlineColor;                                          // 0x0068(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	float                                              SubOutlinePower;                                          // 0x0074(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackGameFlagDefinitionTableDic
// 0x0010
struct FJackGameFlagDefinitionTableDic
{
	TEnumAsByte<EJackGameFlagCategory>                 Category;                                                 // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	class UDataTable*                                  DefinitionTable;                                          // 0x0008(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackScreenPercentageSetting
// 0x0018
struct FJackScreenPercentageSetting
{
	struct FName                                       TypeName;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              ConsoleModeScreenPercentage;                              // 0x0008(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	float                                              HandheldModeScreenPercentage;                             // 0x000C(0x0004) (Edit, ZeroConstructor, Config, IsPlainOldData)
	bool                                               bDynamicResolution;                                       // 0x0010(0x0001) (Edit, ZeroConstructor, Config, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackGuestNPCLoadedResourceInfo
// 0x0010
struct FJackGuestNPCLoadedResourceInfo
{
	TArray<class UJackStreamObjectsHolder*>            ObjectsHolders;                                           // 0x0000(0x0010) (ZeroConstructor, Transient)
};

// ScriptStruct JackGame.JackMapJumpVolumeInfo
// 0x0007
struct FJackMapJumpVolumeInfo
{
	TEnumAsByte<EJackFadeColor>                        FadeColor;                                                // 0x0000(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackFadeTime>                         FadeTime;                                                 // 0x0001(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackBGMControl>                       BGMControl;                                               // 0x0002(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackFadeTime>                         BGMFadeTime;                                              // 0x0003(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayMapChangeAnimation;                                  // 0x0004(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUnmountVehicle;                                          // 0x0005(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMapChangeSound>                   PlayMapChangeSound;                                       // 0x0006(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackTravelMapInfo
// 0x0007
struct FJackTravelMapInfo
{
	struct FJackMapJumpVolumeInfo                      MapJumpVolumeInfo;                                        // 0x0000(0x0007) (Edit, BlueprintVisi, BlueprintReadOnly)
};

// ScriptStruct JackGame.JackLDT_UITabiNoKokoroe
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UITabiNoKokoroe : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_EquipmentCoordinate
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_EquipmentCoordinate : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackSerifuAutomationFlags
// 0x0005
struct FJackSerifuAutomationFlags
{
	bool                                               bEnabled;                                                 // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bAutoIncrementTalkCount;                                  // 0x0001(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bTalkCountBranch;                                         // 0x0002(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bWeatherBranch;                                           // 0x0003(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bTimeBranch;                                              // 0x0004(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackLDT_DamageMaterialAnimation
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_DamageMaterialAnimation : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackWorldParticleContainer
// 0x0010
struct FJackWorldParticleContainer
{
	class AActor*                                      OwnerActor;                                               // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UParticleSystemComponent*                    Particle;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct JackGame.JackLDT_FriendCharacterPreset
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_FriendCharacterPreset : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackUMGAnimSet
// 0x0038
struct FJackUMGAnimSet
{
	class UCurveFloat*                                 MoveCurve;                                                // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   MoveOffset;                                               // 0x0008(0x0008) (Edit, BlueprintVisi, IsPlainOldData)
	TEnumAsByte<EJackUMGAnimMove>                      MoveType;                                                 // 0x0010(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	class UCurveFloat*                                 ScaleCurve;                                               // 0x0018(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ScaleParam;                                               // 0x0020(0x0008) (Edit, BlueprintVisi, IsPlainOldData)
	class UCurveFloat*                                 FadeCurve;                                                // 0x0028(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              DelayTime;                                                // 0x0030(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackHitStopData
// 0x0010
struct FJackHitStopData
{
	class UCurveFloat*                                 SlomoCurve;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bSlomoWorld;                                              // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackUIStickToButtonBindState
// 0x0005
struct FJackUIStickToButtonBindState
{
	unsigned char                                      UnknownData00[0x5];                                       // 0x0000(0x0005) MISSED OFFSET
};

// ScriptStruct JackGame.JackNameTrackKey
// 0x0010
struct FJackNameTrackKey
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              TimeVar;                                                  // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackItemGetLinkFlag
// 0x0018
struct FJackItemGetLinkFlag
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackGameFlagCategory>                 FlagCategory;                                             // 0x0008(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FName                                       FlagName;                                                 // 0x0010(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackItemInnerCountMax
// 0x0010
struct FJackItemInnerCountMax
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                InnerCountMax;                                            // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackItemPresentTitle
// 0x0020
struct FJackItemPresentTitle
{
	struct FName                                       DlcId;                                                    // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FString                                     TitleName;                                                // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	bool                                               VestedFlag;                                               // 0x0018(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackItemPresent
// 0x0010
struct FJackItemPresent
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                ItemCount;                                                // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackItemPresentPackage
// 0x0048
struct FJackItemPresentPackage
{
	bool                                               InstalledFlag;                                            // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     TitleName;                                                // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	struct FString                                     ExplanatoryText;                                          // 0x0018(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	int                                                Gold;                                                     // 0x0028(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	TArray<struct FJackItemPresent>                    ItemList;                                                 // 0x0030(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	int                                                TripleDlcNo;                                              // 0x0040(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackLipSyncEnableTrackInfo
// 0x0004
struct FJackLipSyncEnableTrackInfo
{
	float                                              LipChangeSec;                                             // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackFontDict
// 0x0060
struct FJackFontDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FSlateFontInfo                              Font;                                                     // 0x0008(0x0058) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackLocatorCourse
// 0x0018
struct FJackLocatorCourse
{
	struct FName                                       ID;                                                       // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<class AJackLocator*>                        Locators;                                                 // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct JackGame.JackLocatorDict
// 0x0010
struct FJackLocatorDict
{
	struct FName                                       Key;                                                      // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class AJackLocator*                                Locator;                                                  // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackLookAtTrackInfo
// 0x000C
struct FJackLookAtTrackInfo
{
	float                                              IntrpSpeed;                                               // 0x0000(0x0004) (ZeroConstructor, Deprecated, IsPlainOldData)
	float                                              IntrpSec;                                                 // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bOverrideInterpCurve;                                     // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EEasingFunc>                           InterpCurve;                                              // 0x0009(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bNeckLookAt;                                              // 0x000A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x000B(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackLDT_MapStart
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MapStart : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackMaterialCoordinateInfo
// 0x0028
struct FJackMaterialCoordinateInfo
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	TArray<class UMaterialInterface*>                  OriginalMaterials;                                        // 0x0008(0x0010) (ZeroConstructor)
	TArray<class UMaterialInterface*>                  OverrideMaterials;                                        // 0x0018(0x0010) (ZeroConstructor)
};

// ScriptStruct JackGame.JackLDT_TemporaryMaterialCoordinate
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TemporaryMaterialCoordinate : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MaterialCoordinateType
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MaterialCoordinateType : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackMEControlTrackKey
// 0x0020
struct FJackMEControlTrackKey
{
	float                                              TimeVar;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       MeId;                                                     // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsResumeBGM;                                             // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              PrevMusicFOTime;                                          // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  SoundAsset;                                               // 0x0018(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMedal_StampPressPage
// 0x0020
struct FJackMedal_StampPressPage
{
	int                                                StampNumber;                                              // 0x0000(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FName>                               ItemIDList;                                               // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	TEnumAsByte<EJackMedal_StampPage>                  PageType;                                                 // 0x0018(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bComplete;                                                // 0x0019(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x001A(0x0006) MISSED OFFSET
};

// ScriptStruct JackGame.JackMedal_StampPress
// 0x0018
struct FJackMedal_StampPress
{
	int                                                StampNumber;                                              // 0x0000(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       ItemID;                                                   // 0x0008(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMedal_StampPage>                  CompletePageType;                                         // 0x0010(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackMedal_ExchageItem
// 0x0018
struct FJackMedal_ExchageItem
{
	struct FName                                       ExchangeId;                                               // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       ItemID;                                                   // 0x0008(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                ExchangeNumber;                                           // 0x0010(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bExchange;                                                // 0x0014(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bSoldOut;                                                 // 0x0015(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0016(0x0002) MISSED OFFSET
};

// ScriptStruct JackGame.JackMeosiSlotVariableReelParam
// 0x000C
struct FJackMeosiSlotVariableReelParam
{
	int                                                InitPos_Left;                                             // 0x0000(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                InitPos_Center;                                           // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                InitPos_Right;                                            // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMeosiSlotVariableStateParam
// 0x0068
struct FJackMeosiSlotVariableStateParam
{
	TEnumAsByte<EJackMeosiSlotSettingValue>            SettingValue;                                             // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsBonusEstablished;                                      // 0x0001(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSpecialBonusRising;                                    // 0x0002(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsLatent;                                                // 0x0003(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                LatentPeriod;                                             // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotInternalProbabilityStatus> InternalProbabilityStatus;                                // 0x0008(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                NumGame;                                                  // 0x000C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                NumTotalGame;                                             // 0x0010(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                NumKilledEnemy;                                           // 0x0014(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                CeilingValue;                                             // 0x0018(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                Level;                                                    // 0x001C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                NumOrb;                                                   // 0x0020(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                NumFeed;                                                  // 0x0024(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                NumBonusStock;                                            // 0x0028(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                NumBigBonusTimes;                                         // 0x002C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                NumSpecialBonusTimes;                                     // 0x0030(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	TArray<int>                                        PartyMonsterId;                                           // 0x0038(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	TArray<int>                                        LotteriedHsHandCount;                                     // 0x0048(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	TArray<int>                                        StopedHsHandCount;                                        // 0x0058(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
};

// ScriptStruct JackGame.JackMeosiSlotVariable
// 0x0078
struct FJackMeosiSlotVariable
{
	struct FJackMeosiSlotVariableReelParam             ReelParam;                                                // 0x0000(0x000C) (Edit, BlueprintVisi)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FJackMeosiSlotVariableStateParam            StateParam;                                               // 0x0010(0x0068) (Edit, BlueprintVisi)
};

// ScriptStruct JackGame.JackMeosiSlotDataRoboHighlight
// 0x0003
struct FJackMeosiSlotDataRoboHighlight
{
	bool                                               bIsBonus;                                                 // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSuperBonus;                                            // 0x0001(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsTotalBonus;                                            // 0x0002(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMeosiSlotSquare
// 0x0008
struct FJackMeosiSlotSquare
{
	bool                                               bIsValid;                                                 // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                Pos;                                                      // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMeosiSlotWinningInfo
// 0x0018
struct FJackMeosiSlotWinningInfo
{
	TEnumAsByte<EJackMeosiSlotPicture>                 Picture;                                                  // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<struct FJackMeosiSlotSquare>                PayLineSquares;                                           // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
};

// ScriptStruct JackGame.JackMeosiSlotGameResult
// 0x0020
struct FJackMeosiSlotGameResult
{
	TArray<struct FJackMeosiSlotWinningInfo>           WinningInfos;                                             // 0x0000(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	bool                                               bWasExactlyPressSucceeded;                                // 0x0010(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bWasBonusWinning;                                         // 0x0011(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bWasSpecialBonusRising;                                   // 0x0012(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0013(0x0001) MISSED OFFSET
	int                                                NumGottenCoin;                                            // 0x0014(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bWasSpecialBgRising;                                      // 0x0018(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackMeosiSlotStateInitialParam
// 0x0070
struct FJackMeosiSlotStateInitialParam
{
	TEnumAsByte<EJackMiniGameTableCoinType>            TableType;                                                // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                NumCoin;                                                  // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FJackMeosiSlotVariableStateParam            VariableParam;                                            // 0x0008(0x0068) (Edit, BlueprintVisi)
};

// ScriptStruct JackGame.JackMeosiSlotReelInitialParam
// 0x000C
struct FJackMeosiSlotReelInitialParam
{
	struct FJackMeosiSlotVariableReelParam             Variable;                                                 // 0x0000(0x000C) (Edit, BlueprintVisi)
};

// ScriptStruct JackGame.JackMeosiSlotMonsterTexture
// 0x0018
struct FJackMeosiSlotMonsterTexture
{
	class UTexture2D*                                  PartyTexture;                                             // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  EnemyTexture;                                             // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  IconTexture;                                              // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMeosiSlotSoundEffect
// 0x0008
struct FJackMeosiSlotSoundEffect
{
	TEnumAsByte<EJackMeosiSlotSoundEffect>             Type;                                                     // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Delay;                                                    // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMeosiSlotMonster
// 0x0048
struct FJackMeosiSlotMonster
{
	struct FName                                       Key;                                                      // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FString                                     Name;                                                     // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	class UTexture*                                    PartyTexture;                                             // 0x0018(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    EnemyTexture;                                             // 0x0020(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	class UTexture*                                    IconTexture;                                              // 0x0028(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsRare;                                                  // 0x0030(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                MaxHP;                                                    // 0x0034(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                HP;                                                       // 0x0038(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bPhysicalResistance;                                      // 0x003C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMagicalResistance;                                       // 0x003D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Rank;                                                     // 0x003E(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x003F(0x0001) MISSED OFFSET
	int                                                LvUp;                                                     // 0x0040(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterSize>             Size;                                                     // 0x0044(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsHero;                                                  // 0x0045(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterID>               ID;                                                       // 0x0046(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0047(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackMeosiSlotYakumonoFlash
// 0x0001
struct FJackMeosiSlotYakumonoFlash
{
	bool                                               bIsValid;                                                 // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMeosiSlotUnionChallengeState
// 0x0028
struct FJackMeosiSlotUnionChallengeState
{
	TEnumAsByte<EJackMeosiSlotUnionSlime>              UnionSlimeID;                                             // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                UnionSlimeGameCnt;                                        // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                UnionSlimeFirstNum;                                       // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<int>                                        UnionSlimeKeyTime;                                        // 0x0010(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	int                                                UnionSlimeNum;                                            // 0x0020(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotUnionGameResult>         UnionResult;                                              // 0x0024(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackMeosiSlotItem
// 0x0020
struct FJackMeosiSlotItem
{
	struct FString                                     Name;                                                     // 0x0000(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	class UTexture*                                    Texture;                                                  // 0x0010(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotBalloon>                 BalloonType;                                              // 0x0018(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotItemSpec>                ItemID;                                                   // 0x0019(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x001A(0x0006) MISSED OFFSET
};

// ScriptStruct JackGame.JackMeosiSlotTreasureBox
// 0x0030
struct FJackMeosiSlotTreasureBox
{
	TEnumAsByte<EJackMeosiSlotTreasureBox>             BoxType;                                                  // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotItem>                    ItemType;                                                 // 0x0001(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                ItemCount;                                                // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FJackMeosiSlotItem                          ItemParam;                                                // 0x0008(0x0020) (Edit, BlueprintVisi)
	TEnumAsByte<EJackMeosiSlotScenarioTBoxOpenTiming>  OpenTiming;                                               // 0x0028(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackMeosiSlotSpecialTrainingState
// 0x0010
struct FJackMeosiSlotSpecialTrainingState
{
	TEnumAsByte<EJackMeosiSlotSpTrainingAuraColor>     AuraColor;                                                // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotSpTrainingAct>           ActType;                                                  // 0x0001(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotSpTrainingButton>        PushButton;                                               // 0x0002(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0003(0x0001) MISSED OFFSET
	int                                                SetNum;                                                   // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                GameNum;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotSpTrainingGameState>     GameState;                                                // 0x000C(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsChangeAuraColor;                                       // 0x000D(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
};

// ScriptStruct JackGame.JackMeosiSlotShimofuriChance
// 0x0028
struct FJackMeosiSlotShimofuriChance
{
	bool                                               bIsSuper;                                                 // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsSuccess;                                               // 0x0001(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsBound;                                                 // 0x0002(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotCutinColor>              Color;                                                    // 0x0003(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsWinning;                                               // 0x0004(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	TArray<struct FJackMeosiSlotMonster>               AppearMonsters;                                           // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	struct FString                                     MeId;                                                     // 0x0018(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
};

// ScriptStruct JackGame.JackMeosiSlotReelSoundEffectSet
// 0x0018
struct FJackMeosiSlotReelSoundEffectSet
{
	struct FJackMeosiSlotSoundEffect                   StartSoundEffect;                                         // 0x0000(0x0008) (Edit, BlueprintVisi)
	TArray<struct FJackMeosiSlotSoundEffect>           StopSoundEffectList;                                      // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
};

// ScriptStruct JackGame.JackMeosiSlotReelLightOff
// 0x0010
struct FJackMeosiSlotReelLightOff
{
	TArray<bool>                                       LightOffTimes;                                            // 0x0000(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
};

// ScriptStruct JackGame.JackMeosiSlotPseudoContinuation_Dev
// 0x0002
struct FJackMeosiSlotPseudoContinuation_Dev
{
	bool                                               bIsValid;                                                 // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotCutinColor>              Color;                                                    // 0x0001(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMeosiSlotPseudoContinuation
// 0x0001
struct FJackMeosiSlotPseudoContinuation
{
	bool                                               bIsValid;                                                 // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMeosiSlotFrameLamp
// 0x0002
struct FJackMeosiSlotFrameLamp
{
	TEnumAsByte<EJackMeosiSlotFireLampColor>           Color;                                                    // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotEffectKeyType>           KeyType;                                                  // 0x0001(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMeosiSlotFireLamp
// 0x0003
struct FJackMeosiSlotFireLamp
{
	TEnumAsByte<EJackMeosiSlotFireLampColor>           Color;                                                    // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsLargeSize;                                             // 0x0001(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotEffectKeyType>           KeyType;                                                  // 0x0002(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMeosiSlotDrakeeEffect
// 0x0004
struct FJackMeosiSlotDrakeeEffect
{
	TEnumAsByte<EJackMeosiSlotDrakeeEffect>            Type1;                                                    // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotDrakeeEffect>            Type2;                                                    // 0x0001(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotDrakeeEffect>            Type3;                                                    // 0x0002(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotDrakeeColor>             Color;                                                    // 0x0003(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMeosiSlotDoorEmission
// 0x0001
struct FJackMeosiSlotDoorEmission
{
	bool                                               bIsValid;                                                 // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMeosiSlotChanceCutinStepUp
// 0x0010
struct FJackMeosiSlotChanceCutinStepUp
{
	TArray<TEnumAsByte<EJackMeosiSlotCutinColor>>      Colors;                                                   // 0x0000(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
};

// ScriptStruct JackGame.JackMeosiSlotChanceCutinDefault
// 0x0001
struct FJackMeosiSlotChanceCutinDefault
{
	TEnumAsByte<EJackMeosiSlotCutinColor>              Color;                                                    // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMeosiSlotAttack
// 0x0018
struct FJackMeosiSlotAttack
{
	int                                                Damage;                                                   // 0x0000(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotAttackClass>             Class;                                                    // 0x0004(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotAttackEffect>            Effect;                                                   // 0x0005(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	struct FName                                       TextID;                                                   // 0x0008(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsDeadly;                                                // 0x0010(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackMeosiSlotBattleAction
// 0x0028
struct FJackMeosiSlotBattleAction
{
	TEnumAsByte<EJackMeosiSlotBattleAction>            Type;                                                     // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FJackMeosiSlotAttack                        Attack;                                                   // 0x0008(0x0018) (Edit, BlueprintVisi)
	TEnumAsByte<EJackMeosiSlotMonsterBehavior>         Behavior;                                                 // 0x0020(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackMeosiSlotBattleReaction
// 0x0018
struct FJackMeosiSlotBattleReaction
{
	TEnumAsByte<EJackMeosiSlotBattleReaction>          Type;                                                     // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                Damage;                                                   // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       Avoidance_TextID;                                         // 0x0008(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsDamageInvalid;                                         // 0x0010(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackMeosiSlotBattle
// 0x00F0
struct FJackMeosiSlotBattle
{
	struct FJackMeosiSlotMonster                       PartyMonster;                                             // 0x0000(0x0048) (Edit, BlueprintVisi)
	struct FJackMeosiSlotMonster                       EnemyMonster;                                             // 0x0048(0x0048) (Edit, BlueprintVisi)
	TEnumAsByte<EJackMeosiSlotBattleActor>             Actor;                                                    // 0x0090(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotBattleActor>             Reactor;                                                  // 0x0091(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0092(0x0006) MISSED OFFSET
	struct FJackMeosiSlotBattleAction                  Action;                                                   // 0x0098(0x0028) (Edit, BlueprintVisi)
	struct FJackMeosiSlotBattleReaction                Reaction;                                                 // 0x00C0(0x0018) (Edit, BlueprintVisi)
	TEnumAsByte<EJackMeosiSlotBattleResult>            Result;                                                   // 0x00D8(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsComebackWin;                                           // 0x00D9(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bWillBeEnemyRecruited;                                    // 0x00DA(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x00DB(0x0001) MISSED OFFSET
	int                                                NumEnemy;                                                 // 0x00DC(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotBattleSequence>          Sequence;                                                 // 0x00E0(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00E1(0x0003) MISSED OFFSET
	int                                                NumElapsedGame;                                           // 0x00E4(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsComebackAfterResult;                                   // 0x00E8(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsIchigekiWin;                                           // 0x00E9(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsIchigekiWinMode;                                       // 0x00EA(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x00EB(0x0005) MISSED OFFSET
};

// ScriptStruct JackGame.JackMeosiSlotBarChance
// 0x0001
struct FJackMeosiSlotBarChance
{
	TEnumAsByte<EJackMeosiSlotBarBackColor>            Color;                                                    // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackKeyStatus
// 0x0040
struct FJackKeyStatus
{
	unsigned char                                      UnknownData00[0xE];                                       // 0x0000(0x000E) MISSED OFFSET
	bool                                               Down;                                                     // 0x000E(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Pressed;                                                  // 0x000F(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Released;                                                 // 0x0010(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Repeated;                                                 // 0x0011(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2E];                                      // 0x0012(0x002E) MISSED OFFSET
};

// ScriptStruct JackGame.JackPokerHandInfo
// 0x0018
struct FJackPokerHandInfo
{
	TEnumAsByte<EJackPokerHand>                        HandType;                                                 // 0x0000(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<int>                                        HitCards;                                                 // 0x0008(0x0010) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct JackGame.JackRouletteGameInfo
// 0x0018
struct FJackRouletteGameInfo
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct JackGame.JackRouletteBetCoinSaveData
// 0x0008
struct FJackRouletteBetCoinSaveData
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackMiniGameRouletteDebugBetCoinInfo
// 0x000C
struct FJackMiniGameRouletteDebugBetCoinInfo
{
	int                                                X;                                                        // 0x0000(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                Y;                                                        // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                CoinNum;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackSlotStartInfo
// 0x000B
struct FJackSlotStartInfo
{
	TEnumAsByte<EJackSlotHitLineType>                  HitLineNo;                                                // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackSlotSetNumberType>                NumberLine;                                               // 0x0001(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMiniGameSlotHand>                 HandType;                                                 // 0x0002(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsQueenSlime;                                            // 0x0003(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackSlotResultType>                   Result;                                                   // 0x0004(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsLottey;                                                // 0x0005(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bReach;                                                   // 0x0006(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bMetalSpin;                                               // 0x0007(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bFreeSpin;                                                // 0x0008(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIsJackPot;                                               // 0x0009(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x000A(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackSlotResultInfo
// 0x0010
struct FJackSlotResultInfo
{
	TEnumAsByte<EJackMiniGameSlotHand>                 HandType;                                                 // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                Count;                                                    // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackSlotResultType>                   Result;                                                   // 0x0008(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                ResultBit;                                                // 0x000C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMiniGameSlotAnimAssetList
// 0x0020
struct FJackMiniGameSlotAnimAssetList
{
	class UAnimSequence*                               AnimStand;                                                // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AnimReach;                                                // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AnimWin;                                                  // 0x0010(0x0008) (ZeroConstructor, IsPlainOldData)
	class UAnimSequence*                               AnimWinIn;                                                // 0x0018(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMonsterData
// 0x00C8
struct FJackMonsterData
{
	unsigned char                                      UnknownData00[0xC8];                                      // 0x0000(0x00C8) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMonster
// 0x0100 (0x0108 - 0x0008)
struct FJackDataTableMonster : public FTableRowBase
{
	struct FName                                       DisplayName;                                              // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MonsterPhysicalPropertyID;                                // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MonsterDropID;                                            // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MonsterFieldAIID;                                         // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SibariMonsterFieldAIID;                                   // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MonsterBattleAIID;                                        // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SibariMonsterBattleAIID;                                  // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MonsterAppearID;                                          // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MonsterZukanID;                                           // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MonsterZukanMemoID;                                       // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackMonsterRace                                   MonsterRace;                                              // 0x0058(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	int                                                Lv;                                                       // 0x005C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SibariLv;                                                 // 0x0060(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SibariLvHosei;                                            // 0x0064(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxHP;                                                    // 0x0068(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxMP;                                                    // 0x006C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Subayasa;                                                 // 0x0070(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Kiyousa;                                                  // 0x0074(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Miryoku;                                                  // 0x0078(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Kougekiryoku;                                             // 0x007C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Syubiryoku;                                               // 0x0080(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                KougekiMaryoku;                                           // 0x0084(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                KaifukuMaryoku;                                           // 0x0088(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Omosa;                                                    // 0x008C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SibariParameterID;                                        // 0x0090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<float>                                      AttributeParams;                                          // 0x0098(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       ZoneOddEffectID;                                          // 0x00A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InitialZonePointMin;                                      // 0x00B0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InitialZonePointMax;                                      // 0x00B4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BattleInitOddEffectID;                                    // 0x00B8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBoss;                                                    // 0x00C0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMetal;                                                   // 0x00C1(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bFly;                                                     // 0x00C2(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMugenHP;                                                 // 0x00C3(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMugenMP;                                                 // 0x00C4(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCopyMonster;                                             // 0x00C5(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIgnoreCopyTarget;                                        // 0x00C6(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x00C7(0x0001) MISSED OFFSET
	float                                              HpRateMin;                                                // 0x00C8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              HpRateMax;                                                // 0x00CC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ReincarnationMonsterId;                                   // 0x00D0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ReincarnationRate;                                        // 0x00D8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x00DC(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData03[0x18];                                      // 0x00DC(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableMonster.MonsterClass
	TArray<int>                                        TripleMonsters;                                           // 0x00F8(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableMonsterDrop
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableMonsterDrop : public FTableRowBase
{
	int                                                Exp;                                                      // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SibariExpHosei;                                           // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Gold;                                                     // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FName                                       NormalItem;                                               // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NormalProbability;                                        // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FName                                       RareItem;                                                 // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                RareProbability;                                          // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bNotSteal;                                                // 0x0034(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDisplayItemSyousai;                                      // 0x0035(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
};

// ScriptStruct JackGame.JackLDT_Monster
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Monster : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackAIStateStructs
// 0x0038
struct FJackAIStateStructs
{
	struct FName                                       CurrentState;                                             // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bIsSensingPlayer;                                         // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bIsMovementStrong;                                        // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bIsDepopping;                                             // 0x000A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bFreeWanderring;                                          // 0x000B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bSleeping;                                                // 0x000C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bAwake;                                                   // 0x000D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bDamageHit;                                               // 0x000E(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bAngry;                                                   // 0x000F(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bFeelOugonNoTsume;                                        // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bFinishPatrol;                                            // 0x0011(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bEncountEnable;                                           // 0x0012(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bInteractingBySword;                                      // 0x0013(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bIgnoreMakikomi;                                          // 0x0014(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bKeepSymbolWhenRoundSweep;                                // 0x0015(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x22];                                      // 0x0016(0x0022) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMonsterDeploy
// 0x0220 (0x0228 - 0x0008)
struct FJackDataTableMonsterDeploy : public FTableRowBase
{
	struct FName                                       GeneratorId;                                              // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MonsterID;                                                // 0x0010(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       DeployedInstanceName;                                     // 0x0018(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       SubstituteEventBattleID;                                  // 0x0020(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                DefaultCount;                                             // 0x0028(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              DefaultDensity;                                           // 0x002C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              LifeSpan;                                                 // 0x0030(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              RandomDistanceMin;                                        // 0x0034(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              RandomDistanceMax;                                        // 0x0038(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	EJackBattleNigeruConditionType                     NigeruCondition;                                          // 0x003C(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bRepop;                                                   // 0x003D(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x003E(0x0002) MISSED OFFSET
	float                                              RepopIntervalSeconds;                                     // 0x0040(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bSnapToGroundOnPop;                                       // 0x0044(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bDepopWhenBattleFinished;                                 // 0x0045(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackVehicleModelId>                   DropVehicleType;                                          // 0x0046(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0047(0x0001) MISSED OFFSET
	struct FName                                       MovingBounds;                                             // 0x0048(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                ActiveTimeStart;                                          // 0x0050(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                ActiveTimeEnd;                                            // 0x0054(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMonsterActiveWeather>             ActiveWeather1;                                           // 0x0058(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMonsterActiveWeather>             ActiveWeather2;                                           // 0x0059(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMonsterActiveScenario>            ActiveScenario;                                           // 0x005A(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x005B(0x0001) MISSED OFFSET
	int                                                PartyMonsterTotalLimit;                                   // 0x005C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       PartyMonsterId1;                                          // 0x0060(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterMin1;                                         // 0x0068(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterMax1;                                         // 0x006C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              PartyMonsterLotteryRate1;                                 // 0x0070(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	struct FName                                       PartyMonsterId2;                                          // 0x0078(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterMin2;                                         // 0x0080(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterMax2;                                         // 0x0084(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              PartyMonsterLotteryRate2;                                 // 0x0088(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	struct FName                                       PartyMonsterId3;                                          // 0x0090(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterMin3;                                         // 0x0098(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterMax3;                                         // 0x009C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              PartyMonsterLotteryRate3;                                 // 0x00A0(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x00A4(0x0004) MISSED OFFSET
	struct FName                                       PartyMonsterId4;                                          // 0x00A8(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterMin4;                                         // 0x00B0(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterMax4;                                         // 0x00B4(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              PartyMonsterLotteryRate4;                                 // 0x00B8(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET
	struct FName                                       PartyMonsterId5;                                          // 0x00C0(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterMin5;                                         // 0x00C8(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterMax5;                                         // 0x00CC(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              PartyMonsterLotteryRate5;                                 // 0x00D0(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x00D4(0x0004) MISSED OFFSET
	struct FName                                       PartyMonsterId6;                                          // 0x00D8(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterMin6;                                         // 0x00E0(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterMax6;                                         // 0x00E4(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              PartyMonsterLotteryRate6;                                 // 0x00E8(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x00EC(0x0004) MISSED OFFSET
	struct FName                                       PartyMonsterId7;                                          // 0x00F0(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterMin7;                                         // 0x00F8(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterMax7;                                         // 0x00FC(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              PartyMonsterLotteryRate7;                                 // 0x0100(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	struct FName                                       PartyMonsterId8;                                          // 0x0108(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterMin8;                                         // 0x0110(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                PartyMonsterMax8;                                         // 0x0114(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              PartyMonsterLotteryRate8;                                 // 0x0118(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData10[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
	struct FName                                       MetalEncountId;                                           // 0x0120(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              SpPartyRate;                                              // 0x0128(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	struct FName                                       SpPartyMonsterId1;                                        // 0x0130(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SpPartyMonsterMin1;                                       // 0x0138(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SpPartyMonsterMax1;                                       // 0x013C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       SpPartyMonsterId2;                                        // 0x0140(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SpPartyMonsterMin2;                                       // 0x0148(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SpPartyMonsterMax2;                                       // 0x014C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       SpPartyMonsterId3;                                        // 0x0150(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SpPartyMonsterMin3;                                       // 0x0158(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SpPartyMonsterMax3;                                       // 0x015C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       SpPartyMonsterId4;                                        // 0x0160(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SpPartyMonsterMin4;                                       // 0x0168(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SpPartyMonsterMax4;                                       // 0x016C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       SpPartyMonsterId5;                                        // 0x0170(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SpPartyMonsterMin5;                                       // 0x0178(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SpPartyMonsterMax5;                                       // 0x017C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       SpPartyMonsterId6;                                        // 0x0180(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SpPartyMonsterMin6;                                       // 0x0188(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SpPartyMonsterMax6;                                       // 0x018C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       SpPartyMonsterId7;                                        // 0x0190(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SpPartyMonsterMin7;                                       // 0x0198(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SpPartyMonsterMax7;                                       // 0x019C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       SpPartyMonsterId8;                                        // 0x01A0(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SpPartyMonsterMin8;                                       // 0x01A8(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SpPartyMonsterMax8;                                       // 0x01AC(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMonsterPopCondition>              PopCondition;                                             // 0x01B0(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData12[0x7];                                       // 0x01B1(0x0007) MISSED OFFSET
	struct FName                                       PopConditionMontageKey;                                   // 0x01B8(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMonsterPatrolMode>                PatrolMode;                                               // 0x01C0(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData13[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET
	struct FName                                       PatrolCourse;                                             // 0x01C8(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMonsterPatrolMovingMethod>        PatrolMovingMethod;                                       // 0x01D0(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData14[0x3];                                       // 0x01D1(0x0003) MISSED OFFSET
	float                                              PatrolPointWaitTime;                                      // 0x01D4(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       PatrolPointMontageKey;                                    // 0x01D8(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMonsterDepopBehavior>             DepopBehavior;                                            // 0x01E0(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData15[0x7];                                       // 0x01E1(0x0007) MISSED OFFSET
	struct FName                                       DepopLocatorKeyName;                                      // 0x01E8(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMonsterReaction>                  ReactionForMonster;                                       // 0x01F0(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData16[0x7];                                       // 0x01F1(0x0007) MISSED OFFSET
	struct FName                                       ReactionTargetName;                                       // 0x01F8(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReactionMontageKey;                                       // 0x0200(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                ReactionFrequency;                                        // 0x0208(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMonsterFollowerFormation>         FollowerFormation;                                        // 0x020C(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMonsterFollowerReactionMode>      FollowerReactionMode;                                     // 0x020D(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMonsterApproachAction>            ApproachActionType;                                       // 0x020E(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData17[0x1];                                       // 0x020F(0x0001) MISSED OFFSET
	struct FName                                       ApproachTargetName;                                       // 0x0210(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       ApproachActionMontageKey;                                 // 0x0218(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                ApproachActionFrequency;                                  // 0x0220(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData18[0x4];                                       // 0x0224(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackPopDistanceParams
// 0x0018
struct FJackPopDistanceParams
{
	float                                              Radius;                                                   // 0x0000(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              VisibleDistance;                                          // 0x0004(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ActiveDistance;                                           // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PopDistance;                                              // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PopVirticalWidth;                                         // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ThresholdWidth;                                           // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackPopDistanceParamsByPL
// 0x0018
struct FJackPopDistanceParamsByPL
{
	struct FName                                       PersistentLevelName;                                      // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FJackPopDistanceParams>              DistanceParameters;                                       // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct JackGame.JackMESaveCategoryVolume
// 0x0008
struct FJackMESaveCategoryVolume
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackMusicMiscControlTrackKey
// 0x000C
struct FJackMusicMiscControlTrackKey
{
	float                                              TimeVar;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bExecResumeBGM;                                           // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	float                                              ResumeBGMFadeInTime;                                      // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackOddEffectAttachedParticle
// 0x0038
struct FJackOddEffectAttachedParticle
{
	class UParticleSystem*                             Particle;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class USoundBase*                                  Sound;                                                    // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShouldSetActor;                                          // 0x0018(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	int                                                TranslucencySortPriority;                                 // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBeAffectedByMaterialAnimation;                           // 0x0020(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAttach;                                                  // 0x0021(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EAttachLocation>                       AttachLocationType;                                       // 0x0022(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAbsoluteLocation;                                        // 0x0023(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAbsoluteRotation;                                        // 0x0024(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAbsoluteScale;                                           // 0x0025(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCameraLocation;                                          // 0x0026(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSkelVertSurf;                                            // 0x0027(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FJackCameraShakeParam>               CameraShakes;                                             // 0x0028(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackOddEffectData
// 0x0058
struct FJackOddEffectData
{
	struct FName                                       OddEffectID;                                              // 0x0000(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TWeakObjectPtr<class UJackOddEffectDatabase>       OddEffectDB;                                              // 0x0008(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TWeakObjectPtr<class UDataTable>                   DT_OddEffect;                                             // 0x0010(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x40];                                      // 0x0018(0x0040) MISSED OFFSET
};

// ScriptStruct JackGame.JackLDT_OddEffect
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_OddEffect : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackPauseTrackKey
// 0x0004
struct FJackPauseTrackKey
{
	float                                              TimeVar;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackPhotoModeCharaSettingCommon
// 0x0010
struct FJackPhotoModeCharaSettingCommon
{
	TArray<TEnumAsByte<EJackPhotoModeEmoteAnim>>       LookAtDisableEmote;                                       // 0x0000(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackPhotoModeCharaSetting
// 0x0008 (0x0018 - 0x0010)
struct FJackPhotoModeCharaSetting : public FJackPhotoModeCharaSettingCommon
{
	TEnumAsByte<EJackCharacter>                        Character;                                                // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackUIInputDelegateInfo
// 0x0010
struct FJackUIInputDelegateInfo
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackLDT_LevelStreamingStatus
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_LevelStreamingStatus : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackPreloadDataListLevelStatus
// 0x0030
struct FJackPreloadDataListLevelStatus
{
	struct FString                                     Package;                                                  // 0x0000(0x0010) (ZeroConstructor)
	struct FString                                     PackageName;                                              // 0x0010(0x0010) (ZeroConstructor)
	int                                                StreamingStatus;                                          // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LODIndex;                                                 // 0x0024(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bPlayerInside;                                            // 0x0028(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackPresetMaterialKey
// 0x0010
struct FJackPresetMaterialKey
{
	float                                              TimeVar;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       MaterialName;                                             // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackSpectacularShowMonsterData
// 0x0028
struct FJackSpectacularShowMonsterData
{
	int                                                MaxLevel;                                                 // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<struct FName>                               SuccessMonstersID;                                        // 0x0008(0x0010) (Edit, ZeroConstructor)
	TArray<struct FName>                               FailureMonstersID;                                        // 0x0018(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackSpectacularShowData
// 0x0020
struct FJackSpectacularShowData
{
	struct FName                                       ScenarioFlagStart;                                        // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       ScenarioFlagEnd;                                          // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<struct FJackSpectacularShowMonsterData>     MonsterData;                                              // 0x0010(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackRenkeiFormation
// 0x0008
struct FJackRenkeiFormation
{
	float                                              X;                                                        // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Y;                                                        // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackResetAnimDynamicsTrackKey
// 0x0004
struct FJackResetAnimDynamicsTrackKey
{
	float                                              TimeVar;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackRigidBodyPhysicsBlendWeightInfo
// 0x0080
struct FJackRigidBodyPhysicsBlendWeightInfo
{
	struct FName                                       BaseBoneName;                                             // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              BaseBoneBlendWeight;                                      // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              IncrementalBlendWeight;                                   // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x70];                                      // 0x0010(0x0070) MISSED OFFSET
};

// ScriptStruct JackGame.JackAnimSimulationPartsInfo
// 0x01B0
struct FJackAnimSimulationPartsInfo
{
	unsigned char                                      UnknownData00[0x1A0];                                     // 0x0000(0x01A0) MISSED OFFSET
	float                                              AnimDynamicsBlendSpeed;                                   // 0x01A0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AnimExpressionBlendSpeed;                                 // 0x01A4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x8];                                       // 0x01A8(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackRotationInfo
// 0x002C
struct FJackRotationInfo
{
	EJackRotationLayer                                 RotationLayer;                                            // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	EJackRotationProcessType                           RotationProcessType;                                      // 0x0001(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bRotationRequest;                                         // 0x0002(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	bool                                               bRotationPlaying;                                         // 0x0003(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	struct FVector                                     RotationTargetLocation;                                   // 0x0004(0x000C) (Edit, DisableEditOnTemplate, IsPlainOldData)
	TWeakObjectPtr<class AActor>                       RotationTargetActor;                                      // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              RotationDurationTime;                                     // 0x0018(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              RotationParameter1;                                       // 0x001C(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	float                                              RotationParameter2;                                       // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	TEnumAsByte<EEasingFunc>                           RotationParameterEasing;                                  // 0x0024(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	float                                              CurrentTime;                                              // 0x0028(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
};

// ScriptStruct JackGame.JackOptionData
// 0x0040
struct FJackOptionData
{
	unsigned char                                      UnknownData00[0x40];                                      // 0x0000(0x0040) MISSED OFFSET
};

// ScriptStruct JackGame.JackMiniGameData
// 0xBAA8
struct FJackMiniGameData
{
	unsigned char                                      UnknownData00[0xBAA8];                                    // 0x0000(0xBAA8) MISSED OFFSET
};

// ScriptStruct JackGame.JackScheduledNPCMoveParameter
// 0x0010
struct FJackScheduledNPCMoveParameter
{
	class UBlendSpaceBase*                             BlendSpace;                                               // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MaxSpeed;                                                 // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackTalkParameter
// 0x0058
struct FJackTalkParameter
{
	TWeakObjectPtr<class UAnimMontage>                 BridgeAnimMontage;                                        // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UAnimMontage>                 StartAnimMontage;                                         // 0x0008(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UAnimMontage>                 EndAnimMontage;                                           // 0x0010(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class UAnimMontage>                 EndWaitAnimMontage;                                       // 0x0018(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackNPCTalkGazeMode>                  FrontGazeMode;                                            // 0x0020(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackNPCTalkGazeMode>                  BehindGazeMode;                                           // 0x0021(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0022(0x0006) MISSED OFFSET
	struct FName                                       FrontMessageName;                                         // 0x0028(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       BehindMessageName;                                        // 0x0030(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       StartEventName;                                           // 0x0038(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       SequenceEventName;                                        // 0x0040(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       EndEventName;                                             // 0x0048(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayAnimation;                                           // 0x0050(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bUseCommonTalkCamera;                                     // 0x0051(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreSetGamePlayerCondition;                            // 0x0052(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bDisableTalkSoonAfterTalk;                                // 0x0053(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackHazukasiiNoroiTalkParam
// 0x0020
struct FJackHazukasiiNoroiTalkParam
{
	struct FName                                       TextID_PreMotion;                                         // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       TextID_PostMotion;                                        // 0x0008(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       StartAnimationID;                                         // 0x0010(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       EndAnimationID;                                           // 0x0018(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackHazukasiiNoroiTalk
// 0x0018
struct FJackHazukasiiNoroiTalk
{
	TEnumAsByte<EJackCharacter>                        CharacterType;                                            // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	TArray<struct FJackHazukasiiNoroiTalkParam>        HazukasiiNoroiTalkParam;                                  // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
};

// ScriptStruct JackGame.JackScheduledNPCAppendObjectInfo
// 0x0018
struct FJackScheduledNPCAppendObjectInfo
{
	TArray<class UObject*>                             AppendObjectList;                                         // 0x0000(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0010(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackSetLowerFacePoseKeyValue
// 0x0020
struct FJackSetLowerFacePoseKeyValue
{
	float                                              TimeVar;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       FacialName;                                               // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlendSec;                                                 // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FaceWeight;                                               // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsDisableState;                                           // 0x0018(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	EJackMatineeFacialReferanceState                   FacialState;                                              // 0x0019(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x001A(0x0006) MISSED OFFSET
};

// ScriptStruct JackGame.JackSetUpperFacePoseKeyValue
// 0x0020
struct FJackSetUpperFacePoseKeyValue
{
	float                                              TimeVar;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       FacialName;                                               // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BlendSec;                                                 // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              FaceWeight;                                               // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               IsDisableState;                                           // 0x0018(0x0001) (ZeroConstructor, Deprecated, IsPlainOldData)
	EJackMatineeFacialReferanceState                   FacialState;                                              // 0x0019(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x001A(0x0006) MISSED OFFSET
};

// ScriptStruct JackGame.JackSetWorldTimeTrackInfo
// 0x0004
struct FJackSetWorldTimeTrackInfo
{
	float                                              IntrpSec;                                                 // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackSoundRainFootstepAssets
// 0x0028
struct FJackSoundRainFootstepAssets
{
	class USoundBase*                                  Human;                                                    // 0x0000(0x0008) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  SizeS;                                                    // 0x0008(0x0008) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  SizeM;                                                    // 0x0010(0x0008) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  SizeL;                                                    // 0x0018(0x0008) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	class USoundBase*                                  SizeLL;                                                   // 0x0020(0x0008) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackSoundMiscControlTrackKey
// 0x0008
struct FJackSoundMiscControlTrackKey
{
	float                                              TimeVar;                                                  // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bUseEnableAnimNotifyFootstepSound;                        // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableAnimNotifyFootstepSound;                           // 0x0005(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
};

// ScriptStruct JackGame.JackSynchroCaptionTrackKey
// 0x0008
struct FJackSynchroCaptionTrackKey
{
	float                                              Time;                                                     // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               PlayToEnd;                                                // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackTextDataTableContainer
// 0x0010
struct FJackTextDataTableContainer
{
	TEnumAsByte<EJackTextCategory>                     Category;                                                 // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	class UDataTable*                                  DataTable;                                                // 0x0008(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUIKeyRepeatSetting
// 0x0020
struct FJackUIKeyRepeatSetting
{
	float                                              StartTime;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              IntervalTime;                                             // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<TEnumAsByte<EJackKeys>>                     EnableRepeatKeys;                                         // 0x0008(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0018(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackMapSymbolTextureDic
// 0x0018
struct FJackMapSymbolTextureDic
{
	EJackMapSymbol                                     Type;                                                     // 0x0000(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	class UTexture2D*                                  Texture;                                                  // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                DrawPriority;                                             // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackMapJourneyInfo
// 0x0020
struct FJackMapJourneyInfo
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
};

// ScriptStruct JackGame.JackMapUserData
// 0x0010
struct FJackMapUserData
{
	struct FName                                       MapVolumeID;                                              // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              UserZoomFactor;                                           // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableUmaRaceMapData
// 0x0048 (0x0050 - 0x0008)
struct FJackDataTableUmaRaceMapData : public FTableRowBase
{
	int                                                Number;                                                   // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Gold;                                                     // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Gold_H;                                                   // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                LapNum;                                                   // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_N_01;                                              // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_N_02;                                              // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_H_01;                                              // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_H_02;                                              // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_N_Rank02;                                          // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_H_Rank02;                                          // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUsualRoute;                                              // 0x0048(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInnerCourse;                                             // 0x0049(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bNightRace;                                               // 0x004A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x004B(0x0005) MISSED OFFSET
};

// ScriptStruct JackGame.JackUmaRaceCameraAnimData
// 0x0018
struct FJackUmaRaceCameraAnimData
{
	class UCameraAnim*                                 CameraAnim;                                               // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              PlayTime;                                                 // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              PlayRate;                                                 // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bIsOrbitRotation;                                         // 0x0010(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              StartTime;                                                // 0x0014(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUmaRaceResultParameter
// 0x0028
struct FJackUmaRaceResultParameter
{
	class AJackVehicleUmaRace*                         Character;                                                // 0x0000(0x0008) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TArray<float>                                      LapTimes;                                                 // 0x0008(0x0010) (BlueprintVisi, ZeroConstructor)
	float                                              TotalTime;                                                // 0x0018(0x0004) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	class AJackUmaRaceUnit*                            Unit;                                                     // 0x0020(0x0008) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGCursorMoveSetting
// 0x0018
struct FJackUMGCursorMoveSetting
{
	class UJackUMGItemBase*                            SelectedItem;                                             // 0x0000(0x0008) (BlueprintVisi, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                KeyDirection;                                             // 0x0008(0x0004) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	class UJackUMGItemBase*                            MoveTarget;                                               // 0x0010(0x0008) (BlueprintVisi, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableRenkei
// 0x0138 (0x0140 - 0x0008)
struct FJackDataTableRenkei : public FTableRowBase
{
	struct FName                                       RenkeiID;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AchievementID;                                            // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DisplayName;                                              // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackActionIconType                                ActionIconType;                                           // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	struct FName                                       Description2;                                             // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Description4;                                             // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackRenkeiCategory>                   RenkeiCategory;                                           // 0x0038(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	struct FName                                       DoRenkeiID;                                               // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SelectActionID;                                           // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DisplayFlag;                                              // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NeedFlag;                                                 // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NeedItemID;                                               // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OwnerCharacter;                                           // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackRenkeiMember>                     ActionCameraDefenderReference;                            // 0x0070(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	struct FName                                       CharacterA;                                               // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NeedActionID_A;                                           // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               NeedZone_A;                                               // 0x0088(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               RefreshZone_A;                                            // 0x0089(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x008A(0x0006) MISSED OFFSET
	struct FName                                       CharacterB;                                               // 0x0090(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NeedActionID_B;                                           // 0x0098(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               NeedZone_B;                                               // 0x00A0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               RefreshZone_B;                                            // 0x00A1(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x00A2(0x0006) MISSED OFFSET
	struct FName                                       CharacterC;                                               // 0x00A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NeedActionID_C;                                           // 0x00B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               NeedZone_C;                                               // 0x00B8(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               RefreshZone_C;                                            // 0x00B9(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x00BA(0x0006) MISSED OFFSET
	struct FName                                       CharacterD;                                               // 0x00C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NeedActionID_D;                                           // 0x00C8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               NeedZone_D;                                               // 0x00D0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               RefreshZone_D;                                            // 0x00D1(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x6];                                       // 0x00D2(0x0006) MISSED OFFSET
	struct FName                                       RenkeiCutInID;                                            // 0x00D8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeColorR_Cut;                                           // 0x00E0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeColorG_Cut;                                           // 0x00E4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeColorB_Cut;                                           // 0x00E8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeTime_Cut;                                             // 0x00EC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeColorR;                                               // 0x00F0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeColorG;                                               // 0x00F4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeColorB;                                               // 0x00F8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeTime;                                                 // 0x00FC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeColorR_Result;                                        // 0x0100(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeColorG_Result;                                        // 0x0104(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeColorB_Result;                                        // 0x0108(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeTime_Result;                                          // 0x010C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionCutIn_FormationID;                                  // 0x0110(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionCutIn_CameraID;                                     // 0x0118(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionCutIn_AnimMontage;                                  // 0x0120(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ActionCutIn_Time;                                         // 0x0128(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
	struct FName                                       ActionCutIn_TextID;                                       // 0x0130(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TripleRenkeiNo;                                           // 0x0138(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x4];                                       // 0x013C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGItemContainer
// 0x0050
struct FJackUMGItemContainer
{
	TEnumAsByte<EJackUMGItemContainerType>             Type;                                                     // 0x0000(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       Tag;                                                      // 0x0008(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Value;                                                    // 0x0010(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FText                                       Text;                                                     // 0x0018(0x0018) (BlueprintVisi, BlueprintReadOnly)
	class UMaterial*                                   Material;                                                 // 0x0030(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UTexture2D*                                  Texture;                                                  // 0x0038(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UObject*                                     Object;                                                   // 0x0040(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsVisible;                                                // 0x0048(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGTabiNoKokoroePageData
// 0x0050
struct FJackUMGTabiNoKokoroePageData
{
	struct FString                                     TitleText;                                                // 0x0000(0x0010) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor)
	struct FString                                     MainText;                                                 // 0x0010(0x0010) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor)
	bool                                               bDisplayTexture;                                          // 0x0020(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	class UTexture2D*                                  TopTexture;                                               // 0x0028(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0030(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackUMGTabiNoKokoroePageData.TopTextureAsset
	int                                                PageIndex;                                                // 0x0048(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGSoubiData
// 0x0070
struct FJackUMGSoubiData
{
	TEnumAsByte<EJackCharacter>                        CharaType;                                                // 0x0000(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackItem_Bag>                         BagType;                                                  // 0x0001(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                IndexInBag;                                               // 0x0004(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackEquipmentRegion>                  RegionType;                                               // 0x0008(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FName                                       ID;                                                       // 0x0010(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       Name;                                                     // 0x0018(0x0018) (BlueprintVisi, BlueprintReadOnly)
	class UTexture2D*                                  Icon;                                                     // 0x0030(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       RegionCaption;                                            // 0x0038(0x0018) (BlueprintVisi, BlueprintReadOnly)
	struct FText                                       Description;                                              // 0x0050(0x0018) (BlueprintVisi, BlueprintReadOnly)
	TEnumAsByte<EJackItem_Classification>              ClassType;                                                // 0x0068(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsChange;                                                 // 0x0069(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsBothHands;                                              // 0x006A(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x5];                                       // 0x006B(0x0005) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGMitameItemInfo
// 0x0030
struct FJackUMGMitameItemInfo
{
	TEnumAsByte<EJackUMGMitameSoubiState>              State;                                                    // 0x0000(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       ItemID;                                                   // 0x0008(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FText                                       ItemName;                                                 // 0x0010(0x0018) (BlueprintVisi, BlueprintReadOnly)
	class UTexture2D*                                  ItemIcon;                                                 // 0x0028(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGSoubiWindowMitameAdjust
// 0x000C
struct FJackUMGSoubiWindowMitameAdjust
{
	float                                              TitlePanelSizeX;                                          // 0x0000(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              StatusPanelSizeX;                                         // 0x0004(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              SetumeiPanelPosX;                                         // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGRequiredMaterialInfo
// 0x0020
struct FJackUMGRequiredMaterialInfo
{
	int                                                Index;                                                    // 0x0000(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       ItemID;                                                   // 0x0008(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumHaving;                                                // 0x0010(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumNeed;                                                  // 0x0014(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bEnough;                                                  // 0x0018(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bCanBuy;                                                  // 0x0019(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x001A(0x0006) MISSED OFFSET
};

// ScriptStruct JackGame.JackUIItemBulkBuyingInfo
// 0x0010
struct FJackUIItemBulkBuyingInfo
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                Count;                                                    // 0x0008(0x0004) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGBagEventTag
// 0x0038
struct FJackUMGBagEventTag
{
	struct FName                                       Common;                                                   // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Equipment;                                                // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Daizinamono;                                              // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       DouguSeiri;                                               // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       MedalStamp;                                               // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       RecipeBook;                                               // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Exchanges;                                                // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGActionIcons
// 0x0078
struct FJackUMGActionIcons
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackUMGActionIcons.Bouken
	unsigned char                                      UnknownData01[0x18];                                      // 0x0018(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackUMGActionIcons.Jakutai
	unsigned char                                      UnknownData02[0x18];                                      // 0x0030(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackUMGActionIcons.Kaifuku
	unsigned char                                      UnknownData03[0x18];                                      // 0x0048(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackUMGActionIcons.Kougeki
	unsigned char                                      UnknownData04[0x18];                                      // 0x0060(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackUMGActionIcons.Sien
};

// ScriptStruct JackGame.JackUMGParamPercentFlags
// 0x0012
struct FJackUMGParamPercentFlags
{
	bool                                               Unknown;                                                  // 0x0000(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Kougekiryoku;                                             // 0x0001(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Syubiryoku;                                               // 0x0002(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               MPKyuuSyuuRate;                                           // 0x0003(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               TateGuardRate;                                            // 0x0004(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               MikawasiRate;                                             // 0x0005(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               CriticalRate;                                             // 0x0006(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               ZoneOnRate;                                               // 0x0007(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Kiyousa;                                                  // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Subayasa;                                                 // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               KougekiMaryoku;                                           // 0x000A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               KaifukuMaryoku;                                           // 0x000B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               MaxHP;                                                    // 0x000C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               MaxMP;                                                    // 0x000D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Miryoku;                                                  // 0x000E(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Minomamori;                                               // 0x000F(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               Tikara;                                                   // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               BukiGuardRate;                                            // 0x0011(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGCanOnlyBuyOnceItem
// 0x0010
struct FJackUMGCanOnlyBuyOnceItem
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SystemFlagId;                                             // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGItemClassRefineData
// 0x001F
struct FJackUMGItemClassRefineData
{
	EJackUMGItemClassRefineType                        Unknown;                                                  // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Sword;                                                    // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Dagger;                                                   // 0x0002(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Ax;                                                       // 0x0003(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Stick;                                                    // 0x0004(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Boomerang;                                                // 0x0005(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        DoubleSword;                                              // 0x0006(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Spear;                                                    // 0x0007(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Staff;                                                    // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Claw;                                                     // 0x0009(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Whip;                                                     // 0x000A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Shield;                                                   // 0x000B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        LargeShield;                                              // 0x000C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Clothes;                                                  // 0x000D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Armor;                                                    // 0x000E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Robe;                                                     // 0x000F(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Hat;                                                      // 0x0010(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Helmet;                                                   // 0x0011(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        FaceAccessory;                                            // 0x0012(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        NeckAccessory;                                            // 0x0013(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        FingerAccessory;                                          // 0x0014(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        HandAccessory;                                            // 0x0015(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        ArmAccessory;                                             // 0x0016(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        ShoesAccessory;                                           // 0x0017(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        FootAccessory;                                            // 0x0018(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        EtcAccessory;                                             // 0x0019(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        UsableItem;                                               // 0x001A(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Daizinamono;                                              // 0x001B(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Material;                                                 // 0x001C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        RecipeBook;                                               // 0x001D(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	EJackUMGItemClassRefineType                        Exchange;                                                 // 0x001E(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGItemClassRefineName
// 0x00A0
struct FJackUMGItemClassRefineName
{
	struct FName                                       Unknown;                                                  // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Sword;                                                    // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Dagger;                                                   // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Ax;                                                       // 0x0018(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Stick;                                                    // 0x0020(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Boomerang;                                                // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       DoubleSword;                                              // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Spear;                                                    // 0x0038(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Staff;                                                    // 0x0040(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Claw;                                                     // 0x0048(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Whip;                                                     // 0x0050(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Shield;                                                   // 0x0058(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Armor;                                                    // 0x0060(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Helmet;                                                   // 0x0068(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Accessory;                                                // 0x0070(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Usable;                                                   // 0x0078(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Daizinamono;                                              // 0x0080(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Material;                                                 // 0x0088(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       RecipeBook;                                               // 0x0090(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       Exchange;                                                 // 0x0098(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackLDT_GameFlagDataScenario
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_GameFlagDataScenario : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackUMGScenarioFlag
// 0x0030
struct FJackUMGScenarioFlag
{
	struct FJackLDT_GameFlagDataScenario               ID1;                                                      // 0x0000(0x0010) (Edit, DisableEditOnInstance)
	bool                                               Value1;                                                   // 0x0010(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FJackLDT_GameFlagDataScenario               ID2;                                                      // 0x0018(0x0010) (Edit, DisableEditOnInstance)
	bool                                               Value2;                                                   // 0x0028(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGScenarioFlagName
// 0x0040
struct FJackUMGScenarioFlagName
{
	struct FJackUMGScenarioFlag                        Scenario;                                                 // 0x0000(0x0030) (Edit, DisableEditOnInstance)
	struct FName                                       NameId;                                                   // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               Value;                                                    // 0x0038(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGActionBagInfo
// 0x0008
struct FJackUMGActionBagInfo
{
	TEnumAsByte<EJackItem_Bag>                         BagType;                                                  // 0x0000(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        CharType;                                                 // 0x0001(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                ItemIndex;                                                // 0x0004(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGItemListInfo
// 0x0018
struct FJackUMGItemListInfo
{
	TEnumAsByte<EJackItem_Bag>                         BagType;                                                  // 0x0000(0x0001) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                IndexInBag;                                               // 0x0004(0x0004) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       ItemID;                                                   // 0x0008(0x0008) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackEquipmentRegion>                  EquipmentInRegion;                                        // 0x0010(0x0001) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGGetItemData
// 0x0010
struct FJackUMGGetItemData
{
	bool                                               Flag;                                                     // 0x0000(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                EnumIndex;                                                // 0x0004(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                IntValue;                                                 // 0x0008(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FloatValue;                                               // 0x000C(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGEquipmentParam
// 0x0038
struct FJackUMGEquipmentParam
{
	int                                                ParamNumber;                                              // 0x0000(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackItem_ParameterType>               ParamEnumType;                                            // 0x0004(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	struct FText                                       ParamName;                                                // 0x0008(0x0018) (BlueprintVisi, BlueprintReadOnly)
	int                                                ItemBase;                                                 // 0x0020(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Present;                                                  // 0x0024(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Changed;                                                  // 0x0028(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              PresentFloat;                                             // 0x002C(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ChangedFloat;                                             // 0x0030(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsMajor;                                                  // 0x0034(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsDisplay;                                                // 0x0035(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPercent;                                                // 0x0036(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x0037(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGItemGetInfo
// 0x0020
struct FJackUMGItemGetInfo
{
	struct FName                                       MapId;                                                    // 0x0000(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SortNo;                                                   // 0x0008(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bReference;                                               // 0x000C(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackUMGItemPlacedAcquisition>         IconType;                                                 // 0x000D(0x0001) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
	struct FString                                     Caption;                                                  // 0x0010(0x0010) (BlueprintVisi, ZeroConstructor)
};

// ScriptStruct JackGame.JackUMGItemQualityData
// 0x0018
struct FJackUMGItemQualityData
{
	struct FName                                       OddEffectID;                                              // 0x0000(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       TextID;                                                   // 0x0008(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // 0x0010(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPercent;                                                // 0x0014(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsValid;                                                  // 0x0015(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0016(0x0002) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGItemQualityParams
// 0x0038
struct FJackUMGItemQualityParams
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TArray<struct FJackUMGItemQualityData>             MajorParams;                                              // 0x0008(0x0010) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FJackUMGItemQualityData>             SpecalParams;                                             // 0x0018(0x0010) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor)
	TArray<struct FName>                               OddEffectIds;                                             // 0x0028(0x0010) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor)
};

// ScriptStruct JackGame.JackUMGTuyosaRenkeiCharacterData
// 0x0028
struct FJackUMGTuyosaRenkeiCharacterData
{
	TEnumAsByte<EJackCharacter>                        CharacterType;                                            // 0x0000(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FString                                     ActionName;                                               // 0x0008(0x0010) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor)
	class UTexture2D*                                  ActionIcon;                                               // 0x0018(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bNeedZone;                                                // 0x0020(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGTaneIdToTextIdRec
// 0x0010
struct FJackUMGTaneIdToTextIdRec
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TextID;                                                   // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGJoutaiMiruMember
// 0x0020
struct FJackUMGJoutaiMiruMember
{
	TEnumAsByte<EJackCharacter>                        CharType;                                                 // 0x0000(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FText                                       CharName;                                                 // 0x0008(0x0018) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackUMGFaceIconTexture
// 0x0030
struct FJackUMGFaceIconTexture
{
	class UTexture2D*                                  AliveTexture;                                             // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  DeadTexture;                                              // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  ZoneTexture;                                              // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  BustTexture;                                              // 0x0018(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  EyeTexture;                                               // 0x0020(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  FaceTexture;                                              // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGOddEffectStatus
// 0x0018
struct FJackUMGOddEffectStatus
{
	struct FName                                       OddEffectID;                                              // 0x0000(0x0008) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SlideRank;                                                // 0x0008(0x0004) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                RemainTurn;                                               // 0x000C(0x0004) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SortNumber;                                               // 0x0010(0x0004) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableLevelUp
// 0x0048 (0x0050 - 0x0008)
struct FJackDataTableLevelUp : public FTableRowBase
{
	int                                                RequiredExp;                                              // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Tikara;                                                   // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Minomamori;                                               // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Subayasa;                                                 // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Kiyousa;                                                  // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Miryoku;                                                  // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                KougekiMaryoku;                                           // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                KaifukuMaryoku;                                           // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxHP;                                                    // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxMP;                                                    // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TokugiPoint;                                              // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FName                                       Jumon0;                                                   // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Jumon1;                                                   // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Jumon2;                                                   // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackSibariSettings
// 0x000B
struct FJackSibariSettings
{
	unsigned char                                      UnknownData00[0xB];                                       // 0x0000(0x000B) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGRestartListData
// 0x0030
struct FJackUMGRestartListData
{
	bool                                               bIsOnData;                                                // 0x0000(0x0001) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	EJackUMGRestartMenuType                            RestartMenu;                                              // 0x0001(0x0001) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0002(0x0006) MISSED OFFSET
	struct FName                                       PointTag;                                                 // 0x0008(0x0008) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FText                                       TextData;                                                 // 0x0010(0x0018) (BlueprintVisi)
	float                                              LostGoldRate;                                             // 0x0028(0x0004) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGDefaultSoundSetting
// 0x0008
struct FJackUMGDefaultSoundSetting
{
	EJackAudioVolume                                   BgmVolume;                                                // 0x0000(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EJackAudioVolume                                   SeVolume;                                                 // 0x0001(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EJackAudioVolume                                   VoiceVolume;                                              // 0x0002(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableP001Voice;                                         // 0x0003(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EJackBGMDiscVersion                                BGMDiscVersion;                                           // 0x0004(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bUseDQ8BGM;                                               // 0x0005(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackVoice>                            VoiceType;                                                // 0x0006(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bEnableAutomaticFeedOfSpeech;                             // 0x0007(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGRecipeParam
// 0x0058
struct FJackUMGRecipeParam
{
	bool                                               Valid;                                                    // 0x0000(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                ParamNumber;                                              // 0x0004(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackItem_ParameterType>               ParamEnumType;                                            // 0x0008(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FText                                       ParamName;                                                // 0x0010(0x0018) (BlueprintVisi, BlueprintReadOnly)
	int                                                Param0;                                                   // 0x0028(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Param0Float;                                              // 0x002C(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPercent0;                                               // 0x0030(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                Param1;                                                   // 0x0034(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Param1Float;                                              // 0x0038(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPercent1;                                               // 0x003C(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	int                                                Param2;                                                   // 0x0040(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Param2Float;                                              // 0x0044(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPercent2;                                               // 0x0048(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	int                                                Param3;                                                   // 0x004C(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              Param3Float;                                              // 0x0050(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsPercent3;                                               // 0x0054(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0055(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackQuestReward
// 0x0020
struct FJackQuestReward
{
	EJackQuestRewardType                               RewardType;                                               // 0x0000(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       EventItemId;                                              // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Tokugi;                                                   // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PowerUpText;                                              // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGFusigiPossibleList
// 0x0020
struct FJackUMGFusigiPossibleList
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       RecipeId;                                                 // 0x0008(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Rank;                                                     // 0x0010(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsRecipe;                                                 // 0x0014(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	int                                                ZukanNo;                                                  // 0x0018(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackSenreki_ItemCategory>             Category;                                                 // 0x001C(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackItem_Classification>              Classification;                                           // 0x001D(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               IsReigaiStar;                                             // 0x001E(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x1];                                       // 0x001F(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableSyuurenjouRewardInfo
// 0x0020
struct FJackDataTableSyuurenjouRewardInfo
{
	struct FName                                       AcquiredFlagName;                                         // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Conditions;                                               // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FName                                       ItemEventGetId;                                           // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       HiddenName;                                               // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableSyuurenjou
// 0x0128 (0x0130 - 0x0008)
struct FJackDataTableSyuurenjou : public FTableRowBase
{
	struct FName                                       Title;                                                    // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Description;                                              // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ScoreGameFlagName;                                        // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ClearedFlagName;                                          // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DisplayConditions0;                                       // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DisplayConditions1;                                       // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OpenConditions0;                                          // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OpenConditions1;                                          // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NeedMemberCount;                                          // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BattleCount;                                              // 0x004C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BattleId0;                                                // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BattleName0;                                              // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BattleMemberCount0;                                       // 0x0060(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FName                                       BattleId1;                                                // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BattleName1;                                              // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BattleMemberCount1;                                       // 0x0078(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	struct FName                                       BattleId2;                                                // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BattleName2;                                              // 0x0088(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BattleMemberCount2;                                       // 0x0090(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
	struct FName                                       BattleId3;                                                // 0x0098(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BattleName3;                                              // 0x00A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BattleMemberCount3;                                       // 0x00A8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
	struct FJackDataTableSyuurenjouRewardInfo          RewardInfo0;                                              // 0x00B0(0x0020) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDataTableSyuurenjouRewardInfo          RewardInfo1;                                              // 0x00D0(0x0020) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDataTableSyuurenjouRewardInfo          RewardInfo2;                                              // 0x00F0(0x0020) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDataTableSyuurenjouRewardInfo          RewardInfo3;                                              // 0x0110(0x0020) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackUMGWidgetAnimData
// 0x0010
struct FJackUMGWidgetAnimData
{
	class UWidgetAnimation*                            Animation;                                                // 0x0000(0x0008) (Edit, BlueprintVisi, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                NumLoop;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGBalloonInfo
// 0x0068
struct FJackUMGBalloonInfo
{
	int                                                Digit;                                                    // 0x0000(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<int>                                        Num;                                                      // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	struct FVector                                     Wpos;                                                     // 0x0018(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	struct FVector2D                                   Lpos;                                                     // 0x0024(0x0008) (Edit, BlueprintVisi, IsPlainOldData)
	struct FVector2D                                   LposOff;                                                  // 0x002C(0x0008) (Edit, BlueprintVisi, IsPlainOldData)
	struct FVector2D                                   DigitOffset;                                              // 0x0034(0x0008) (Edit, BlueprintVisi, IsPlainOldData)
	struct FVector2D                                   DigitScale;                                               // 0x003C(0x0008) (Edit, BlueprintVisi, IsPlainOldData)
	TEnumAsByte<EJackPopupBalloon>                     Type;                                                     // 0x0044(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x23];                                      // 0x0045(0x0023) MISSED OFFSET
};

// ScriptStruct JackGame.JackZukanMotionMonsterAnimData
// 0x0018
struct FJackZukanMotionMonsterAnimData
{
	struct FName                                       AnimKey;                                                  // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLoop;                                                    // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRepeat;                                                  // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	struct FVector                                     TargetPosOffset;                                          // 0x000C(0x000C) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackZukanMotionWeaponAnimData
// 0x0030
struct FJackZukanMotionWeaponAnimData
{
	TEnumAsByte<EJackEquippedWeaponStyle>              WeaponStyle;                                              // 0x0000(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackZukanMotionEquippedShieldFlag                 EquippedShieldFlag;                                       // 0x0001(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0002(0x0006) MISSED OFFSET
	unsigned char                                      UnknownData01[0x18];                                      // 0x0002(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackZukanMotionWeaponAnimData.AnimSequenceAsset
	struct FName                                       RightWeaponAnimMontageKey;                                // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       LeftWeaponAnimMontageKey;                                 // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMonsterZukanMotion
// 0x00C0 (0x00C8 - 0x0008)
struct FJackDataTableMonsterZukanMotion : public FTableRowBase
{
	float                                              InitCameraZoom;                                           // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ZoomOutCameraFovAngle;                                    // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ZoomInCameraFovAngle;                                     // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ZoomSpeed;                                                // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FarCameraDist;                                            // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NearCameraDist;                                           // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   FarCameraPos;                                             // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   NearCameraPos;                                            // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              FarCameraPitch;                                           // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NearCameraPitch;                                          // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FarCameraSlideSpeed;                                      // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NearCameraSlideSpeed;                                     // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     TargetPos;                                                // 0x0040(0x000C) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    InitialRotation;                                          // 0x004C(0x000C) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEnableLookAt;                                            // 0x0058(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	struct FVector                                     LookAtLocation;                                           // 0x005C(0x000C) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   SlideTargetOrigin;                                        // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   FarSlideTargetSize;                                       // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   NearSlideTargetSize;                                      // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInBattle;                                                // 0x0080(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	TArray<struct FJackZukanMotionMonsterAnimData>     MonsterAnimDataList;                                      // 0x0088(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FJackZukanMotionWeaponAnimData>      WeaponAnimList;                                           // 0x0098(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FJackZukanMotionDirectionalLightParameter> DirectionalLightParameterList;                            // 0x00A8(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FJackZukanMotionPointLightParameter> PointLightParameterList;                                  // 0x00B8(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackUMGCharacterUIPresetData
// 0x0030
struct FJackUMGCharacterUIPresetData
{
	class UClass*                                      WidgetClass;                                              // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   DrawSize;                                                 // 0x0008(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   DrawOffset;                                               // 0x0010(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   Pivot;                                                    // 0x0018(0x0008) (Edit, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     PostionOffset;                                            // 0x0020(0x000C) (Edit, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEnableDeviceZTest;                                       // 0x002C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUse3dWidget;                                             // 0x002D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x002E(0x0002) MISSED OFFSET
};

// ScriptStruct JackGame.JackFukubikiLotteryInfo
// 0x0008
struct FJackFukubikiLotteryInfo
{
	EJackFukubikiLotteryResult                         Result;                                                   // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                Rate;                                                     // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGHpMpItemInfo
// 0x0028
struct FJackUMGHpMpItemInfo
{
	class UJackUMGWidgetBase*                          HpMpItem;                                                 // 0x0000(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	unsigned char                                      UnknownData00[0x20];                                      // 0x0008(0x0020) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGScenarioFukidasiInfo
// 0x0048
struct FJackUMGScenarioFukidasiInfo
{
	EJackBattleFukidasiPlaySec                         PlaySec;                                                  // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	class UWidgetAnimation*                            NextAnim;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        CharaType;                                                // 0x0010(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FName                                       FaceIconID;                                               // 0x0018(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FString                                     Text;                                                     // 0x0020(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	float                                              TimeSec;                                                  // 0x0030(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              DelaySec;                                                 // 0x0034(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bOpen;                                                    // 0x0038(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0xF];                                       // 0x0039(0x000F) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGMapTextItemGroup
// 0x0040
struct FJackUMGMapTextItemGroup
{
	struct FName                                       ConfigID;                                                 // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	TArray<TWeakObjectPtr<class UJackUMGMapTextLocationNameItem>> LocationNameItems;                                        // 0x0008(0x0010) (ExportObject, ZeroConstructor)
	TArray<TWeakObjectPtr<class UJackUMGMapTextImageItem>> ArrowItems;                                               // 0x0018(0x0010) (ExportObject, ZeroConstructor)
	TArray<TWeakObjectPtr<class UJackUMGMapTextImageItem>> MapSymbolItems;                                           // 0x0028(0x0010) (ExportObject, ZeroConstructor)
	unsigned char                                      UnknownData00[0x8];                                       // 0x0038(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGMainMapOverlayItemInfo
// 0x001C
struct FJackUMGMainMapOverlayItemInfo
{
	TWeakObjectPtr<class UWidget>                      Widget;                                                   // 0x0000(0x0008) (Edit, BlueprintVisi, ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bIsChildOfGridPanel;                                      // 0x0008(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bMapGimmickItem;                                          // 0x0009(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	struct FVector2D                                   InitialPosition;                                          // 0x000C(0x0008) (Edit, BlueprintVisi, IsPlainOldData)
	struct FVector2D                                   InitialSize;                                              // 0x0014(0x0008) (Edit, BlueprintVisi, IsPlainOldData)
};

// ScriptStruct JackGame.JackSerifuPrintSpeedDict
// 0x0008
struct FJackSerifuPrintSpeedDict
{
	TEnumAsByte<EJackSpeed>                            SpeedID;                                                  // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              WaitSecondsPerCharacter;                                  // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGFontColor
// 0x0024
struct FJackUMGFontColor
{
	struct FLinearColor                                Base;                                                     // 0x0000(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, IsPlainOldData)
	struct FLinearColor                                Border;                                                   // 0x0010(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, IsPlainOldData)
	float                                              BorderWidth;                                              // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGFontColorSet
// 0x060C
struct FJackUMGFontColorSet
{
	struct FJackUMGFontColor                           White_Black;                                              // 0x0000(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Gray_Black;                                               // 0x0024(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Red_Black;                                                // 0x0048(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Orange_Black;                                             // 0x006C(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Yellow_Black;                                             // 0x0090(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Green_Black;                                              // 0x00B4(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Lime_Black;                                               // 0x00D8(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Blue_Black;                                               // 0x00FC(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Yellow_Brown;                                             // 0x0120(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Orange_Brown;                                             // 0x0144(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Brown_Transparent;                                        // 0x0168(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Brown_Cream;                                              // 0x018C(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Green_Darkgreen;                                          // 0x01B0(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Lime_Darkgreen;                                           // 0x01D4(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Yellow_Darkyellow;                                        // 0x01F8(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Orange_Darkorange;                                        // 0x021C(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Red_Darkred;                                              // 0x0240(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Yellow_Darkbrown;                                         // 0x0264(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Brown_Beige;                                              // 0x0288(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Brown_Orange;                                             // 0x02AC(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Blue_LightBlue;                                           // 0x02D0(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           LightYellow_Brown;                                        // 0x02F4(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           White_Brown;                                              // 0x0318(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Blue_Black_3;                                             // 0x033C(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Rarity_S;                                                 // 0x0360(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Rarity_A;                                                 // 0x0384(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Rarity_B;                                                 // 0x03A8(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Rarity_C;                                                 // 0x03CC(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Rarity_D;                                                 // 0x03F0(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Rarity_E;                                                 // 0x0414(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Rarity_F;                                                 // 0x0438(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Brown_Yellow;                                             // 0x045C(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Grey_Transparent;                                         // 0x0480(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           LightBlue_Black;                                          // 0x04A4(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           LightBlue_Black_3;                                        // 0x04C8(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Yellow_Darkyellow_Map;                                    // 0x04EC(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           Battle_Scenario_Fukidasi;                                 // 0x0510(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           VoiceDrama_Normal;                                        // 0x0534(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           VoiceDrama_Gray;                                          // 0x0558(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           VoiceDrama_LogYellow;                                     // 0x057C(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           VoiceDrama_LogBlue;                                       // 0x05A0(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           VoiceDrama_FastForward;                                   // 0x05C4(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
	struct FJackUMGFontColor                           VoiceDrama_Pafupafu;                                      // 0x05E8(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly)
};

// ScriptStruct JackGame.JackUMGItemDataAllocator
// 0x0028
struct FJackUMGItemDataAllocator
{
	TArray<class UJackUMGItemData*>                    Uses;                                                     // 0x0000(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0010(0x0018) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGLoadedCache
// 0x0010
struct FJackUMGLoadedCache
{
	class UObject*                                     ObjectRef;                                                // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FSoftObjectPath                             AssetRef;                                                 // 0x0008(0x0008)
};

// ScriptStruct JackGame.JackUMGLoadMenuAssetsInfo
// 0x0010
struct FJackUMGLoadMenuAssetsInfo
{
	TEnumAsByte<EJackUMGMenuId>                        MenuId;                                                   // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	class UJackStreamObjectsHolder*                    ObjectsHolder;                                            // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGCursorSaveTarget
// 0x0010
struct FJackUMGCursorSaveTarget
{
	int                                                Index;                                                    // 0x0000(0x0004) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       Name;                                                     // 0x0008(0x0008) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackTextureRenderTargetDict
// 0x0010
struct FJackTextureRenderTargetDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTextureRenderTarget*                        RenderTarget;                                             // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackNameTagDict
// 0x0010
struct FJackNameTagDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       Value;                                                    // 0x0008(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGMedalStampAnimData
// 0x0028
struct FJackUMGMedalStampAnimData
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
	TEnumAsByte<EJackMedalStampAnimFlag>               AnimFlag;                                                 // 0x0004(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0005(0x0003) MISSED OFFSET
	int                                                TargetIndex;                                              // 0x0008(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                StampCount;                                               // 0x000C(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                MedalCount;                                               // 0x0010(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FName                                       ItemID;                                                   // 0x0018(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMedal_StampPage>                  PageType;                                                 // 0x0020(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
	float                                              WaitTime;                                                 // 0x0024(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackSerifuWindowMoveTextLabelInfo
// 0x0010
struct FJackSerifuWindowMoveTextLabelInfo
{
	class UCurveFloat*                                 Curve;                                                    // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              Time;                                                     // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackSerifuWindowShakeWindowInfo
// 0x0010
struct FJackSerifuWindowShakeWindowInfo
{
	class UCurveVector*                                Curve;                                                    // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              Multiplier;                                               // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              Time;                                                     // 0x000C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGSerifuWindowEmojiData
// 0x0020
struct FJackUMGSerifuWindowEmojiData
{
	struct FName                                       Key;                                                      // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UTexture2D*                                  Texture;                                                  // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Size;                                                     // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Length;                                                   // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackSerifuWindowEmojiFlag                         Flag;                                                     // 0x0018(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGSerifuTextParseResult
// 0x0020
struct FJackUMGSerifuTextParseResult
{
	struct FName                                       TextID;                                                   // 0x0000(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumPages;                                                 // 0x0008(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                NumLines;                                                 // 0x000C(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                Length;                                                   // 0x0010(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bWithSelectTag;                                           // 0x0014(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bWithEndTag;                                              // 0x0015(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bButtonWait;                                              // 0x0016(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x9];                                       // 0x0017(0x0009) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGSerifuWindowDebug
// 0x000C
struct FJackUMGSerifuWindowDebug
{
	int                                                MainState;                                                // 0x0000(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PrevState;                                                // 0x0004(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SubState;                                                 // 0x0008(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMessageSoundTagDict
// 0x0000 (0x0010 - 0x0010)
struct FJackMessageSoundTagDict : public FJackSoundDict
{

};

// ScriptStruct JackGame.JackTokugiPanelAtariBonus
// 0x0008
struct FJackTokugiPanelAtariBonus
{
	TEnumAsByte<EJackCharacter>                        CharacterType;                                            // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	int                                                BonusSkillPoint;                                          // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGTokugiPanelAdjoinData
// 0x0008
struct FJackUMGTokugiPanelAdjoinData
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGTokugiPanelAnimData
// 0x0040
struct FJackUMGTokugiPanelAnimData
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
	TEnumAsByte<EJackTokugiPanelAnimCategory>          AnimCategory;                                             // 0x0004(0x0001) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackTokugiPanelAnimFlag>              AnimFlag;                                                 // 0x0005(0x0001) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0006(0x0002) MISSED OFFSET
	class UJackUMGTokugiPanelData*                     PanelData;                                                // 0x0008(0x0008) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	class UJackUMGTokugiPanelSkillLineData*            SkillLineData;                                            // 0x0010(0x0008) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FJackUMGTokugiPanelAdjoinData               AdjoinData;                                               // 0x0018(0x0008) (BlueprintVisi, BlueprintReadOnly)
	TArray<int>                                        AnimIndexList;                                            // 0x0020(0x0010) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor)
	bool                                               ChangeCanOpenState;                                       // 0x0030(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	float                                              WaitTime;                                                 // 0x0034(0x0004) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	EJackTokugiPanelMessageAnimFlag                    MessageType;                                              // 0x0038(0x0001) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGTouchPadScrollContentData
// 0x0088
struct FJackUMGTouchPadScrollContentData
{
	bool                                               bInitialized;                                             // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	class UPanelWidget*                                MainPanel;                                                // 0x0008(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UCanvasPanelSlot*                            ScrollContentSlot;                                        // 0x0010(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UWidget*                                     ScrollContent;                                            // 0x0018(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	TArray<class UTextBlock*>                          TextBlockArray;                                           // 0x0020(0x0010) (ExportObject, ZeroConstructor)
	TArray<class UImage*>                              ImageArray;                                               // 0x0030(0x0010) (ExportObject, ZeroConstructor)
	struct FVector2D                                   ScrollContentSize;                                        // 0x0040(0x0008) (IsPlainOldData)
	struct FVector2D                                   TextMarginSize;                                           // 0x0048(0x0008) (IsPlainOldData)
	struct FVector2D                                   ScrollParentSize;                                         // 0x0050(0x0008) (IsPlainOldData)
	float                                              ScrollPosTarget;                                          // 0x0058(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	class UImage*                                      ScrollBarImage;                                           // 0x0060(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              ScrollBarSize;                                            // 0x0068(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	class UPanelWidget*                                TouchPadInfoPanel;                                        // 0x0070(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	bool                                               bUseTagMode;                                              // 0x0078(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0079(0x0003) MISSED OFFSET
	float                                              LineHeight;                                               // 0x007C(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LineTextLabelCount;                                       // 0x0080(0x0004) (ZeroConstructor, IsPlainOldData)
	int                                                LineImageCount;                                           // 0x0084(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackVoiceDramaTagData
// 0x0030
struct FJackVoiceDramaTagData
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	TArray<struct FString>                             ArgString;                                                // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, EditConst)
	TArray<int>                                        ArgInt;                                                   // 0x0018(0x0010) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, EditConst)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0028(0x0004) MISSED OFFSET
	bool                                               bIsExecuted;                                              // 0x002C(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableVoiceDrama
// 0x0068 (0x0070 - 0x0008)
struct FJackDataTableVoiceDrama : public FTableRowBase
{
	struct FString                                     SceneTitle;                                               // 0x0008(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FString                                     TalkerName;                                               // 0x0018(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FString                                     Text;                                                     // 0x0028(0x0010) (Edit, ZeroConstructor, EditConst)
	bool                                               bPageSkip;                                                // 0x0038(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	struct FString                                     ScenarioTag_Head;                                         // 0x0040(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FString                                     ScenarioTag_Foot;                                         // 0x0050(0x0010) (Edit, ZeroConstructor, EditConst)
	uint32_t                                           SoundStartMSec;                                           // 0x0060(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	uint32_t                                           SoundEndMSec;                                             // 0x0064(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                SoundMSec;                                                // 0x0068(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackVoiceDramaHDPafuPafuTargetNPC
// 0x0088
struct FJackVoiceDramaHDPafuPafuTargetNPC
{
	int                                                Health;                                                   // 0x0000(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	TArray<int>                                        FacialChangeNums;                                         // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor)
	TArray<class UTexture2D*>                          FacialImages;                                             // 0x0018(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor)
	int                                                FacialNowIndex;                                           // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsVoicePlay;                                             // 0x002C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsFade;                                                  // 0x002D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsKnockout;                                              // 0x002E(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x11];                                      // 0x002F(0x0011) MISSED OFFSET
	class UJackUMGVoiceDramaHDPafuPafu*                PafuPafu;                                                 // 0x0040(0x0008) (Edit, BlueprintVisi, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UJackPafuPafuVoiceManager*                   VoiceManager;                                             // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	class UImage*                                      TargetImage;                                              // 0x0050(0x0008) (Edit, BlueprintVisi, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	class UImage*                                      TargetImageBack;                                          // 0x0058(0x0008) (Edit, BlueprintVisi, ExportObject, BlueprintReadOnly, ZeroConstructor, InstancedReference, IsPlainOldData)
	float                                              Alpha;                                                    // 0x0060(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              AlphaBack;                                                // 0x0064(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              FacialChangeSpeed;                                        // 0x0068(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bIsShake;                                                 // 0x006C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x006D(0x0003) MISSED OFFSET
	float                                              ShakeHeightMax;                                           // 0x0070(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              ShakeSpeed;                                               // 0x0074(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                ShakeCounter;                                             // 0x0078(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ImageOriginPosition;                                      // 0x007C(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackVoiceDramaHDTutorial
// 0x0010
struct FJackVoiceDramaHDTutorial
{
	int                                                ProgressCount;                                            // 0x0000(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	class UJackPafuPafuVoiceManager*                   VoiceManager;                                             // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackVoiceDramaSelectButtonAnimation
// 0x0018
struct FJackVoiceDramaSelectButtonAnimation
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct JackGame.JackVoiceTrackInfo
// 0x000C
struct FJackVoiceTrackInfo
{
	bool                                               bIsUseRandomLipSync;                                      // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              LipChangeSec;                                             // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              LipApplyRate;                                             // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackBulletWeaponConfig
// 0x0028
struct FJackBulletWeaponConfig
{
	float                                              WeaponSpread;                                             // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TargetingSpreadMod;                                       // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FiringSpreadIncrement;                                    // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FiringSpreadMax;                                          // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WeaponRange;                                              // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                HitDamage;                                                // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UClass*                                      DamageType;                                               // 0x0018(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ClientSideHitLeeway;                                      // 0x0020(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AllowedViewDotHitDir;                                     // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackWindControlInfo
// 0x0001
struct FJackWindControlInfo
{
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel;                                                // 0x0000(0x0001) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackCorrectWeatherForWeatherReport
// 0x0002
struct FJackCorrectWeatherForWeatherReport
{
	TEnumAsByte<EJackWorldWeather>                     Weather;                                                  // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     CorrectWeather;                                           // 0x0001(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackActionNakamaYobiInfo
// 0x0018
struct FJackActionNakamaYobiInfo
{
	struct FName                                       ZouenMonsterID;                                           // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ZouenNumMin;                                              // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ZouenNumMax;                                              // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                ZouenNumLimit;                                            // 0x0010(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackKeyframeEvent
// 0x0010
struct FJackKeyframeEvent
{
	float                                              Time;                                                     // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	struct FName                                       Event;                                                    // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackDamageInfo
// 0x0001
struct FJackDamageInfo
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackCalcOddEffectResult
// 0x0140
struct FJackCalcOddEffectResult
{
	struct FJackActionData                             ActionData;                                               // 0x0000(0x00B0) (Edit, EditConst)
	struct FJackOddEffectData                          OddEffectData;                                            // 0x00B0(0x0058) (Edit, EditConst)
	TWeakObjectPtr<class UJackGameCharacter>           CasterGameCharacter;                                      // 0x0108(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	TWeakObjectPtr<class UJackGameCharacter>           TargetGameCharacter;                                      // 0x0110(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	float                                              SuccessPer;                                               // 0x0118(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bSuccess;                                                 // 0x011C(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x011D(0x0003) MISSED OFFSET
	float                                              FinalTaisei;                                              // 0x0120(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bCritical;                                                // 0x0124(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bOverwriteFail;                                           // 0x0125(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0126(0x0002) MISSED OFFSET
	struct FName                                       InvalidReasonOddEffectID;                                 // 0x0128(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bMahosute;                                                // 0x0130(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               bDamageKanzenGuardFail;                                   // 0x0131(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData02[0xE];                                       // 0x0132(0x000E) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionScore
// 0x0078
struct FJackActionScore
{
	struct FJackActionCalcDamageResult                 DamageResult;                                             // 0x0000(0x0058) (Edit, EditConst)
	TArray<struct FJackCalcOddEffectResult>            SetOddEffectResult;                                       // 0x0058(0x0010) (Edit, ZeroConstructor, EditConst)
	TArray<struct FJackCalcOddEffectResult>            ClearOddEffectResult;                                     // 0x0068(0x0010) (Edit, ZeroConstructor, EditConst)
};

// ScriptStruct JackGame.JackActionCalcOddEffectParam
// 0x0020
struct FJackActionCalcOddEffectParam
{
	int                                                ActionDepth;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0004(0x0018) MISSED OFFSET
	int                                                HitGroupCount;                                            // 0x001C(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
};

// ScriptStruct JackGame.JackActionCalcDamageParam
// 0x0050
struct FJackActionCalcDamageParam
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
	struct FName                                       OverrideActionDamageID;                                   // 0x0020(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                HitGroupCount;                                            // 0x0028(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                HitCount;                                                 // 0x002C(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                AnyDamageHitCount;                                        // 0x0030(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                ExtentCharacterNum;                                       // 0x0034(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                TargetHP;                                                 // 0x0038(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                TargetMP;                                                 // 0x003C(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                ReverseDamage;                                            // 0x0040(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0xC];                                       // 0x0044(0x000C) MISSED OFFSET
};

// ScriptStruct JackGame.JackAnimInstanceProxy
// 0x0050 (0x0520 - 0x04D0)
struct FJackAnimInstanceProxy : public FAnimInstanceProxy
{
	unsigned char                                      UnknownData00[0x50];                                      // 0x04D0(0x0050) MISSED OFFSET
};

// ScriptStruct JackGame.JackAnimNode_FootPlacementIK
// 0x00A0 (0x0110 - 0x0070)
struct FJackAnimNode_FootPlacementIK : public FAnimNode_SkeletalControlBase
{
	bool                                               bActive;                                                  // 0x0070(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0071(0x0007) MISSED OFFSET
	struct FBoneReference                              IKBone;                                                   // 0x0078(0x0018) (Edit, BlueprintVisi)
	struct FVector                                     EffectorLocation;                                         // 0x0090(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	struct FVector                                     JointTargetLocation;                                      // 0x009C(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	TEnumAsByte<EBoneControlSpace>                     JointTargetLocationSpace;                                 // 0x00A8(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x00A9(0x0007) MISSED OFFSET
	struct FName                                       JointTargetSpaceBoneName;                                 // 0x00B0(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      bAllowStretching : 1;                                     // 0x00B8(0x0001) (Edit, BlueprintVisi)
	unsigned char                                      UnknownData02[0x3];                                       // 0x00B9(0x0003) MISSED OFFSET
	struct FVector2D                                   StretchLimits;                                            // 0x00BC(0x0008) (Edit, BlueprintVisi, IsPlainOldData)
	float                                              HitZOffset;                                               // 0x00C4(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              BlendTime;                                                // 0x00C8(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bAllowUnderZ;                                             // 0x00CC(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0xB];                                       // 0x00CD(0x000B) MISSED OFFSET
	struct FName                                       EffectorSocketName;                                       // 0x00D8(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FRotator                                    Rotation;                                                 // 0x00E0(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	struct FRotator                                    MinRotation;                                              // 0x00EC(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	struct FRotator                                    MaxRotation;                                              // 0x00F8(0x000C) (Edit, BlueprintVisi, IsPlainOldData)
	TEnumAsByte<EBoneModificationMode>                 RotationMode;                                             // 0x0104(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EBoneControlSpace>                     RotationSpace;                                            // 0x0105(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0xA];                                       // 0x0106(0x000A) MISSED OFFSET
};

// ScriptStruct JackGame.JackAnimNode_InterruptIK
// 0x0020 (0x0050 - 0x0030)
struct FJackAnimNode_InterruptIK : public FAnimNode_Base
{
	struct FPoseLink                                   Source;                                                   // 0x0030(0x0018) (Edit, BlueprintVisi)
	bool                                               bByPass;                                                  // 0x0048(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackAnimNode_LipSync
// 0x00B8 (0x00E8 - 0x0030)
struct FJackAnimNode_LipSync : public FAnimNode_Base
{
	unsigned char                                      UnknownData00[0xB8];                                      // 0x0030(0x00B8) MISSED OFFSET
};

// ScriptStruct JackGame.JackAnimNode_MatineeAnimation
// 0x01F8 (0x0228 - 0x0030)
struct FJackAnimNode_MatineeAnimation : public FAnimNode_Base
{
	struct FPoseLink                                   Source;                                                   // 0x0030(0x0018) (Edit, BlueprintVisi)
	struct FPoseLink                                   AdditiveIdentity;                                         // 0x0048(0x0018) (Edit, BlueprintVisi)
	bool                                               bActive;                                                  // 0x0060(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0xEF];                                      // 0x0061(0x00EF) MISSED OFFSET
	TArray<struct FBlendSampleData>                    BlendSampleDataCache;                                     // 0x0150(0x0010) (ZeroConstructor)
	struct FBlendFilter                                BlendFilter;                                              // 0x0160(0x0090)
	float                                              InternalTimeAccumulator;                                  // 0x01F0(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x34];                                      // 0x01F4(0x0034) MISSED OFFSET
};

// ScriptStruct JackGame.JackAnimNode_ScaleBone
// 0x0070 (0x00E0 - 0x0070)
struct FJackAnimNode_ScaleBone : public FAnimNode_SkeletalControlBase
{
	unsigned char                                      UnknownData00[0x70];                                      // 0x0070(0x0070) MISSED OFFSET
};

// ScriptStruct JackGame.JackAnimNode_ScheduledNPC
// 0x0190 (0x01C0 - 0x0030)
struct FJackAnimNode_ScheduledNPC : public FAnimNode_Base
{
	unsigned char                                      UnknownData00[0x190];                                     // 0x0030(0x0190) MISSED OFFSET
};

// ScriptStruct JackGame.JackPrgCameraParameter
// 0x0020
struct FJackPrgCameraParameter
{
	TWeakObjectPtr<class AJackCharacter>               MainCaster;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TWeakObjectPtr<class AJackCharacter>               MainTarget;                                               // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	TArray<TWeakObjectPtr<class AJackCharacter>>       ViewTarget;                                               // 0x0010(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackNextActionCameraData
// 0x0020
struct FJackNextActionCameraData
{
	TEnumAsByte<EJackBattleActionCameraPlayConditions> PlayConditions;                                           // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Time;                                                     // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              InterpTime;                                               // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<struct FName>                               NextCamera;                                               // 0x0010(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackActionCameraDataTypeDataElementNextCamera
// 0x0010
struct FJackActionCameraDataTypeDataElementNextCamera
{
	TArray<struct FJackNextActionCameraData>           NextCameraNoArray;                                        // 0x0000(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackKeyframeFloat
// 0x0008
struct FJackKeyframeFloat
{
	float                                              Time;                                                     // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              Value;                                                    // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackBattleActionCameraDataTypeDataElementCurve
// 0x0010
struct FJackBattleActionCameraDataTypeDataElementCurve
{
	TArray<struct FJackKeyframeFloat>                  KeyframeArray;                                            // 0x0000(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackKeyframeVector
// 0x0010
struct FJackKeyframeVector
{
	float                                              Time;                                                     // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	struct FVector                                     Value;                                                    // 0x0004(0x000C) (Edit, IsPlainOldData)
};

// ScriptStruct JackGame.JackBattleActionCameraDataTypeDataElementCurveVector
// 0x0010
struct FJackBattleActionCameraDataTypeDataElementCurveVector
{
	TArray<struct FJackKeyframeVector>                 KeyframeArray;                                            // 0x0000(0x0010) (Edit, ZeroConstructor)
};

// ScriptStruct JackGame.JackBattleActionCameraDataTypeData
// 0x00D8
struct FJackBattleActionCameraDataTypeData
{
	TEnumAsByte<EJackBattleActionCameraEyeLocationCategory> EyeLocationCategory;                                      // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackBattleActionCameraAtCategory>     AttackerTarget;                                           // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackBattleActionCameraAtCategory>     DefenderTarget;                                           // 0x0002(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackBattleActionCameraTimingCategory> TrackingStopCategory;                                     // 0x0003(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              TrackingStopTime;                                         // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackBattleActionCameraHiddenCharacterCategory> HiddenCharacterCategory;                                  // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackBattleActionCameraLengthAdjustCategory> LengthAdjustCategory;                                     // 0x0009(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	float                                              LimitSelection;                                           // 0x000C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        SelectCharacter;                                          // 0x0010(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FName                                       SelectMonsterID;                                          // 0x0018(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SelectLengthAdjust;                                       // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FName                                       AttackerSocketName;                                       // 0x0028(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       DefenderSocketName;                                       // 0x0030(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EyeInterpTime;                                            // 0x0038(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              AtInterpTime;                                             // 0x003C(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              OtherInterpTime;                                          // 0x0040(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              EndTime;                                                  // 0x0044(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackBattleActionCameraLoopCategory>   LoopParam;                                                // 0x0048(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FJackActionCameraDataTypeDataElementNextCamera NextCamera;                                               // 0x0050(0x0010) (Edit)
	struct FJackBattleActionCameraDataTypeDataElementCurve AtToEyeYaw;                                               // 0x0060(0x0010) (Edit)
	struct FJackBattleActionCameraDataTypeDataElementCurve AtToEyePitch;                                             // 0x0070(0x0010) (Edit)
	struct FJackBattleActionCameraDataTypeDataElementCurve AtToEyeLength;                                            // 0x0080(0x0010) (Edit)
	struct FJackBattleActionCameraDataTypeDataElementCurve AtRateBetweenAttackerDefender;                            // 0x0090(0x0010) (Edit)
	struct FJackBattleActionCameraDataTypeDataElementCurve Roll;                                                     // 0x00A0(0x0010) (Edit)
	struct FJackBattleActionCameraDataTypeDataElementCurveVector EyeOffset;                                                // 0x00B0(0x0010) (Edit)
	struct FJackBattleActionCameraDataTypeDataElementCurveVector AtOffset;                                                 // 0x00C0(0x0010) (Edit)
	bool                                               bSystemUse;                                               // 0x00D0(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackCalcActionInfo
// 0x0038
struct FJackCalcActionInfo
{
	unsigned char                                      UnknownData00[0x38];                                      // 0x0000(0x0038) MISSED OFFSET
};

// ScriptStruct JackGame.JackDyingCalcRate
// 0x000C
struct FJackDyingCalcRate
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct JackGame.JackRenkeiAction
// 0x00D0
struct FJackRenkeiAction
{
	unsigned char                                      UnknownData00[0xD0];                                      // 0x0000(0x00D0) MISSED OFFSET
};

// ScriptStruct JackGame.JackPossibleAction
// 0x0018
struct FJackPossibleAction
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct JackGame.JackBattleCommandAI_ExecActionCount
// 0x0010
struct FJackBattleCommandAI_ExecActionCount
{
	struct FName                                       ActionID;                                                 // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                ExecCount;                                                // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackBattleCommandAI_ExecHistory
// 0x0020
struct FJackBattleCommandAI_ExecHistory
{
	TArray<struct FJackBattleCommandAI_ExecActionCount> ExecActionCounts;                                         // 0x0000(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate)
	TArray<struct FName>                               ExecLatestActionIDs;                                      // 0x0010(0x0010) (Edit, ZeroConstructor, DisableEditOnTemplate)
};

// ScriptStruct JackGame.JackAIAction
// 0x00A8
struct FJackAIAction
{
	unsigned char                                      UnknownData00[0xA8];                                      // 0x0000(0x00A8) MISSED OFFSET
};

// ScriptStruct JackGame.JackLevelDifferenceParam
// 0x000C
struct FJackLevelDifferenceParam
{
	float                                              Rate;                                                     // 0x0000(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              UpperLimit;                                               // 0x0004(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                Level;                                                    // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackBattleResFukidasiInfo
// 0x0018
struct FJackBattleResFukidasiInfo
{
	float                                              DelayTime;                                                // 0x0000(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData)
	float                                              DelayNowTime;                                             // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0008(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackBattleFukidasiVoiceInfo
// 0x0028
struct FJackBattleFukidasiVoiceInfo
{
	class UJackBattleVoicePlayer*                      VoicePlayer;                                              // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData)
	struct FName                                       VoiceID;                                                  // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData)
	int                                                DelayDel;                                                 // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData)
	unsigned char                                      UnknownData00[0xC];                                       // 0x0014(0x000C) MISSED OFFSET
	bool                                               bPlay2D;                                                  // 0x0020(0x0001) (Edit, ZeroConstructor, DisableEditOnTemplate, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackBattleFukidasiInfo
// 0x0018
struct FJackBattleFukidasiInfo
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct JackGame.JackBattleFukidasiConditionCharaInfo
// 0x0010
struct FJackBattleFukidasiConditionCharaInfo
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackBattleFukidasiTalkCommandTicket
// 0x0030
struct FJackBattleFukidasiTalkCommandTicket
{
	unsigned char                                      UnknownData00[0x30];                                      // 0x0000(0x0030) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionMissDelayInfo
// 0x0010
struct FJackActionMissDelayInfo
{
	struct FName                                       ActionID;                                                 // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DelaySec;                                                 // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackBattleFukidasiText
// 0x0028
struct FJackBattleFukidasiText
{
	struct FName                                       CharacterID;                                              // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TextID;                                                   // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleFukidasiTextVoiceType                   VoiceType;                                                // 0x0010(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleFukidasiTextVoiceType                   VoiceTypeNE;                                              // 0x0011(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0012(0x0006) MISSED OFFSET
	struct FName                                       FaceIconID;                                               // 0x0018(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       StringParam;                                              // 0x0020(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackBattleFukidasiTextContainer
// 0x0010
struct FJackBattleFukidasiTextContainer
{
	struct FName                                       TextID;                                                   // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleFukidasiTextEnableType                  EnableType;                                               // 0x0008(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackBattleZenmetuMemberChangeInfo
// 0x0010
struct FJackBattleZenmetuMemberChangeInfo
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackBattleCharacterRelocationInfo
// 0x0040
struct FJackBattleCharacterRelocationInfo
{
	unsigned char                                      UnknownData00[0x40];                                      // 0x0000(0x0040) MISSED OFFSET
};

// ScriptStruct JackGame.JackBattlePrgCameraInfo
// 0x00B8
struct FJackBattlePrgCameraInfo
{
	unsigned char                                      UnknownData00[0x6C];                                      // 0x0000(0x006C) MISSED OFFSET
	TWeakObjectPtr<class AJackCharacter>               CharaA;                                                   // 0x006C(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AJackCharacter>               CharaB;                                                   // 0x0074(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	TArray<TWeakObjectPtr<class AJackCharacter>>       ViewCharas;                                               // 0x0080(0x0010) (ZeroConstructor, Transient)
	TWeakObjectPtr<class AJackCharacter>               Attacker;                                                 // 0x0090(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	TWeakObjectPtr<class AJackCharacter>               TrackingCharacter;                                        // 0x0098(0x0008) (ZeroConstructor, Transient, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x00A0(0x0018) MISSED OFFSET
};

// ScriptStruct JackGame.JackBattlePrgCameraScore
// 0x0024
struct FJackBattlePrgCameraScore
{
	unsigned char                                      UnknownData00[0x24];                                      // 0x0000(0x0024) MISSED OFFSET
};

// ScriptStruct JackGame.JackCommandSample2
// 0x0000 (0x0010 - 0x0010)
struct FJackCommandSample2 : public FJackCommand
{

};

// ScriptStruct JackGame.JackFieldAttackDamageEvent
// 0x0008 (0x0018 - 0x0010)
struct FJackFieldAttackDamageEvent : public FDamageEvent
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0010(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionModuleDamageEvent
// 0x0018 (0x0028 - 0x0010)
struct FJackActionModuleDamageEvent : public FDamageEvent
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0010(0x0018) MISSED OFFSET
};

// ScriptStruct JackGame.JackActionDamageEvent
// 0x0198 (0x01A8 - 0x0010)
struct FJackActionDamageEvent : public FDamageEvent
{
	unsigned char                                      UnknownData00[0x198];                                     // 0x0010(0x0198) MISSED OFFSET
};

// ScriptStruct JackGame.JackPoisonDamageEvent
// 0x0008 (0x0018 - 0x0010)
struct FJackPoisonDamageEvent : public FDamageEvent
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0010(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackRadialDamageEvent
// 0x0090 (0x00D0 - 0x0040)
struct FJackRadialDamageEvent : public FRadialDamageEvent
{
	unsigned char                                      UnknownData00[0x90];                                      // 0x0040(0x0090) MISSED OFFSET
};

// ScriptStruct JackGame.JackPointDamageEvent
// 0x0090 (0x0138 - 0x00A8)
struct FJackPointDamageEvent : public FPointDamageEvent
{
	unsigned char                                      UnknownData00[0x90];                                      // 0x00A8(0x0090) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableAchievement
// 0x0050 (0x0058 - 0x0008)
struct FJackDataTableAchievement : public FTableRowBase
{
	struct FName                                       AchievementNameID;                                        // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DescriptionID;                                            // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackAchievementRarity>                Rarity;                                                   // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackAchievementCategory>              Category;                                                 // 0x0019(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackAchievementCondition>             Condition;                                                // 0x001A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x001B(0x0005) MISSED OFFSET
	struct FString                                     StringParameter;                                          // 0x0020(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                NumericalParameter;                                       // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackAchievementTiming>                Timing;                                                   // 0x0034(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                CategoryNo;                                               // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PhoneticNo;                                               // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TripleAchievementNo;                                      // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FName                                       UE4AchievementName;                                       // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUE4AchievementOnly;                                      // 0x0050(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUE4AchievementReload;                                    // 0x0051(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDisabledInTrial;                                         // 0x0052(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x0053(0x0005) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableActionTargetIcon
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableActionTargetIcon : public FTableRowBase
{
	TArray<struct FName>                               OddEffectStatusList;                                      // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableActionBattleText
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableActionBattleText : public FTableRowBase
{
	TArray<struct FJackActionBattleTextInfo>           BattleTextInfos;                                          // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableActionAI
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableActionAI : public FTableRowBase
{
	struct FName                                       ActionID;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RenkeiID;                                                 // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackPlayerAIActionCategory>           CategoryType;                                             // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackPlayerAIActionControl>            ControlType;                                              // 0x0019(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               StrategyFlagGangan;                                       // 0x001A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               StrategyFlagBattiri;                                      // 0x001B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               StrategyFlagIroiro;                                       // 0x001C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               StrategyFlagInoti;                                        // 0x001D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               StrategyFlagMPTukauna;                                    // 0x001E(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x001F(0x0001) MISSED OFFSET
	float                                              ScoreCorrectionFactor;                                    // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableActionCameraData
// 0x00F0 (0x00F8 - 0x0008)
struct FJackDataTableActionCameraData : public FTableRowBase
{
	TEnumAsByte<EJackBattleActionCameraAtCategory>     AttackerTarget;                                           // 0x0008(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackBattleActionCameraAtCategory>     DefenderTarget;                                           // 0x0009(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackBattleActionCameraTimingCategory> TrackingStopCategory;                                     // 0x000A(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x000B(0x0001) MISSED OFFSET
	float                                              TrackingStopTime;                                         // 0x000C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackBattleActionCameraHiddenCharacterCategory> HiddenCharacterCategory;                                  // 0x0010(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackBattleActionCameraLengthAdjustCategory> LengthAdjustCategory;                                     // 0x0011(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0012(0x0002) MISSED OFFSET
	float                                              LimitSelection;                                           // 0x0014(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        SelectCharacter;                                          // 0x0018(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	struct FName                                       SelectMonsterID;                                          // 0x0020(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              SelectLengthAdjust;                                       // 0x0028(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackBattleActionCameraEyeLocationCategory> EyeLocationCategory;                                      // 0x002C(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	struct FName                                       AttackerSocketName;                                       // 0x0030(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DefenderSocketName;                                       // 0x0038(0x0008) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EyeInterpTime;                                            // 0x0040(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AtInterpTime;                                             // 0x0044(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              OtherInterpTime;                                          // 0x0048(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EndTime;                                                  // 0x004C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackBattleActionCameraLoopCategory>   LoopParam;                                                // 0x0050(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSystemUse;                                               // 0x0051(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x0052(0x0006) MISSED OFFSET
	TArray<struct FName>                               NextCamera1;                                              // 0x0058(0x0010) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance)
	TEnumAsByte<EJackBattleActionCameraPlayConditions> PlayConditions1;                                          // 0x0068(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0069(0x0003) MISSED OFFSET
	float                                              NextCameraStartTime1;                                     // 0x006C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NextCameraInterpTime1;                                    // 0x0070(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	TArray<struct FName>                               ActionCameraInfos1;                                       // 0x0078(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               ActionCameraInfos2;                                       // 0x0088(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               ActionCameraInfos3;                                       // 0x0098(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               ActionCameraInfos4;                                       // 0x00A8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               ActionCameraInfos5;                                       // 0x00B8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               ActionCameraInfos6;                                       // 0x00C8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               ActionCameraInfos7;                                       // 0x00D8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               ActionCameraInfos8;                                       // 0x00E8(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableActionNakamaYobi
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableActionNakamaYobi : public FTableRowBase
{
	EJackNakamaYobiSpawnLocationType                   SpawnLocationType;                                        // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FName                                       SpawnLocationParameter;                                   // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FJackActionNakamaYobiInfo>           ZouenMonsterInfos;                                        // 0x0018(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableActionTag
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableActionTag : public FTableRowBase
{
	bool                                               Dummy;                                                    // 0x0008(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableAdditiveAnimMontage
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableAdditiveAnimMontage : public FTableRowBase
{
	class UAnimMontage*                                AdditiveAnimMontage;                                      // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AdditiveRate;                                             // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableAnimMontageDynamic
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableAnimMontageDynamic : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableAnimMontageDynamic.AnimMontage
	float                                              BlendInTime;                                              // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BlendOutTime;                                             // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TranslationMultiplier;                                    // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableArasuzi
// 0x0138 (0x0140 - 0x0008)
struct FJackDataTableArasuzi : public FTableRowBase
{
	TEnumAsByte<EJackScenarioID>                       ScenarioID;                                               // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                No;                                                       // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ScenarioFlag;                                             // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackGameFlagCategory>                 SubFlagCategory;                                          // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	struct FName                                       SubFlagName;                                              // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BGMID;                                                    // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Play1_Pages;                                              // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FName                                       Play1_Text1;                                              // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0040(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableArasuzi.Play1_BG1
	struct FName                                       Play1_Text2;                                              // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x18];                                      // 0x0060(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableArasuzi.Play1_BG2
	struct FName                                       Play1_Text3;                                              // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x18];                                      // 0x0080(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableArasuzi.Play1_BG3
	struct FName                                       Play1_Text4;                                              // 0x0098(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x18];                                      // 0x00A0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableArasuzi.Play1_BG4
	int                                                Play2_Pages;                                              // 0x00B8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x00BC(0x0004) MISSED OFFSET
	struct FName                                       Play2_Text1;                                              // 0x00C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x18];                                      // 0x00C8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableArasuzi.Play2_BG1
	struct FName                                       Play2_Text2;                                              // 0x00E0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x18];                                      // 0x00E8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableArasuzi.Play2_BG2
	struct FName                                       Play2_Text3;                                              // 0x0100(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x18];                                      // 0x0108(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableArasuzi.Play2_BG3
	struct FName                                       Play2_Text4;                                              // 0x0120(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x18];                                      // 0x0128(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableArasuzi.Play2_BG4
};

// ScriptStruct JackGame.JackArasuziPageData
// 0x0028
struct FJackArasuziPageData
{
	struct FString                                     Text;                                                     // 0x0000(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0010(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackArasuziPageData.BG
};

// ScriptStruct JackGame.JackArasuziData
// 0x0028
struct FJackArasuziData
{
	struct FName                                       ArasuziDataID;                                            // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BGMID;                                                    // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackScenarioPlaythrough                           Playthrough;                                              // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	TArray<struct FJackArasuziPageData>                PageDataList;                                             // 0x0018(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackArticleInfo
// 0x0088
struct FJackArticleInfo
{
	EJackNounGender                                    Gender;                                                   // 0x0000(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       DefSgl;                                                   // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       IndefSgl;                                                 // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     SglM;                                                     // 0x0018(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     SglF;                                                     // 0x0028(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     SglN;                                                     // 0x0038(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       DefPlr;                                                   // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       IndefPlr;                                                 // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       IndefPlrIT;                                               // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     Plr;                                                      // 0x0060(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	bool                                               PlrNounFlag;                                              // 0x0070(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               ProNounFlag;                                              // 0x0071(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               VowelFlag;                                                // 0x0072(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               LastIsSFlag;                                              // 0x0073(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	struct FString                                     List;                                                     // 0x0078(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableArticleInfo
// 0x0088 (0x0090 - 0x0008)
struct FJackDataTableArticleInfo : public FTableRowBase
{
	struct FJackArticleInfo                            ArticleInfo;                                              // 0x0008(0x0088) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableItemArticleInfo
// 0x0008 (0x0098 - 0x0090)
struct FJackDataTableItemArticleInfo : public FJackDataTableArticleInfo
{
	int                                                PhoneticNo;                                               // 0x0090(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0094(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableAttachedProps
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableAttachedProps : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableAttachedProps.Class
	struct FName                                       SocketName;                                               // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableBattleFukidasiPeculiarWords
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableBattleFukidasiPeculiarWords : public FTableRowBase
{
	bool                                               bMonsterGroupBig;                                         // 0x0008(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupSmall;                                       // 0x0009(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupMetal;                                       // 0x000A(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupDance;                                       // 0x000B(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupHorror;                                      // 0x000C(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupInsect;                                      // 0x000D(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupCat;                                         // 0x000E(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupBird;                                        // 0x000F(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupMagic;                                       // 0x0010(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupWarrior;                                     // 0x0011(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupMimic;                                       // 0x0012(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupUru1;                                        // 0x0013(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupUru2;                                        // 0x0014(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupUru;                                         // 0x0015(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupNiz;                                         // 0x0016(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupHome;                                        // 0x0017(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupKira;                                        // 0x0018(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupYaruki;                                      // 0x0019(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupTyui;                                        // 0x001A(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupReisei;                                      // 0x001B(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupAseri;                                       // 0x001C(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupIkari;                                       // 0x001D(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupKansya;                                      // 0x001E(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupYorokobi;                                    // 0x001F(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMonsterGroupKonran;                                      // 0x0020(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableBattleFukidasiText
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableBattleFukidasiText : public FTableRowBase
{
	TArray<struct FJackBattleFukidasiText>             BattleFukidasiTexts;                                      // 0x0008(0x0010) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableBattleFukidasi
// 0x0060 (0x0068 - 0x0008)
struct FJackDataTableBattleFukidasi : public FTableRowBase
{
	struct FName                                       FukidasiRequirementID;                                    // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FJackBattleFukidasiTextContainer>    TextContainer;                                            // 0x0010(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	EJackBattleFukidasiTalkTimming                     Timming;                                                  // 0x0020(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOnce;                                                    // 0x0021(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0022(0x0002) MISSED OFFSET
	float                                              InvokePer;                                                // 0x0024(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ToCharacter;                                              // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleFukidasiTalkTurn                        Turn;                                                     // 0x0030(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleFukidasiSndCalcType                     SndCalcType;                                              // 0x0031(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	float                                              SndCalcParam;                                             // 0x0034(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Capacity;                                                 // 0x0038(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseFree;                                                 // 0x003C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x003D(0x0003) MISSED OFFSET
	int                                                Priority;                                                 // 0x0040(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleFukidasiUIType                          UIType;                                                   // 0x0044(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackBattleFukidasiCalcType                        SetCalcType;                                              // 0x0045(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0046(0x0002) MISSED OFFSET
	float                                              DelayTime;                                                // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Time;                                                     // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bNoSilence;                                               // 0x0050(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalidMoveTalk;                                         // 0x0051(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSlomo;                                                   // 0x0052(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x5];                                       // 0x0053(0x0005) MISSED OFFSET
	TArray<struct FJackBattleFukidasiTalkCondition>    SetConditions;                                            // 0x0058(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableBattleHazukasiiNoroiText
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableBattleHazukasiiNoroiText : public FTableRowBase
{
	struct FName                                       HazukasiiNoroiCharacterID;                                // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       HazukasiiNoroiText1;                                      // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       HazukasiiNoroiText2;                                      // 0x0018(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableBattleResultMotion
// 0x0040 (0x0048 - 0x0008)
struct FJackDataTableBattleResultMotion : public FTableRowBase
{
	struct FName                                       Start_Flg;                                                // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       End_Flg;                                                  // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        Target;                                                   // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        Who1;                                                     // 0x0019(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x001A(0x0006) MISSED OFFSET
	struct FName                                       AnimMontage1;                                             // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        Who2;                                                     // 0x0028(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FName                                       AnimMontage2;                                             // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        Who3;                                                     // 0x0038(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	struct FName                                       AnimMontage3;                                             // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableBookShelf
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableBookShelf : public FTableRowBase
{
	struct FName                                       CommonGettableItemID;                                     // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TextID;                                                   // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableBoukenGuide
// 0x0070 (0x0078 - 0x0008)
struct FJackDataTableBoukenGuide : public FTableRowBase
{
	TEnumAsByte<EJackScenarioID>                       ScenarioID;                                               // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                No;                                                       // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ScenarioFlag;                                             // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<TEnumAsByte<EJackGameFlagCategory>>         SubFlagCategory;                                          // 0x0018(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               SubFlagName;                                              // 0x0028(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               Item;                                                     // 0x0038(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<EJackMapIDType>                             MapIDType;                                                // 0x0048(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               MapId;                                                    // 0x0058(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	EJackMapConditionType                              MapCondition;                                             // 0x0068(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCustomCondition;                                         // 0x0069(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x006A(0x0006) MISSED OFFSET
	struct FName                                       GuideText;                                                // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableCharacterLODBounds
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableCharacterLODBounds : public FTableRowBase
{
	struct FName                                       OriginBoneName;                                           // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     OriginOffsetInBoneSpace;                                  // 0x0010(0x000C) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              Radius;                                                   // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CastShadowCullingBoundsScale;                             // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableCharacterMaterialUpdater
// 0x00C0 (0x00C8 - 0x0008)
struct FJackDataTableCharacterMaterialUpdater : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCharacterMaterialUpdater.CurveAsset
	float                                              CurveTimeScale;                                           // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData02[0x18];                                      // 0x0024(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCharacterMaterialUpdater.LoopCurveAsset
	float                                              LoopCurveTimeScale;                                       // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData04[0x18];                                      // 0x0044(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCharacterMaterialUpdater.EndCurveAsset
	float                                              EndCurveTimeScale;                                        // 0x0060(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Priority;                                                 // 0x0064(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              OriginalEmissiveColorR;                                   // 0x0068(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              OriginalEmissiveColorG;                                   // 0x006C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              OriginalEmissiveColorB;                                   // 0x0070(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AdditiveEmissiveColorR;                                   // 0x0074(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AdditiveEmissiveColorG;                                   // 0x0078(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AdditiveEmissiveColorB;                                   // 0x007C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AdditiveEmissiveFalloff;                                  // 0x0080(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AdditiveEmissiveScale;                                    // 0x0084(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BaseColorR;                                               // 0x0088(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BaseColorG;                                               // 0x008C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BaseColorB;                                               // 0x0090(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LitColorR;                                                // 0x0094(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LitColorG;                                                // 0x0098(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LitColorB;                                                // 0x009C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LitDirectionX;                                            // 0x00A0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LitDirectionY;                                            // 0x00A4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LitDirectionZ;                                            // 0x00A8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LitFalloff;                                               // 0x00AC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LitScale;                                                 // 0x00B0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOriginalEmissiveColorR;                                  // 0x00B4(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOriginalEmissiveColorG;                                  // 0x00B5(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOriginalEmissiveColorB;                                  // 0x00B6(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAdditiveEmissiveColorR;                                  // 0x00B7(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAdditiveEmissiveColorG;                                  // 0x00B8(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAdditiveEmissiveColorB;                                  // 0x00B9(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAdditiveEmissiveFalloff;                                 // 0x00BA(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAdditiveEmissiveScale;                                   // 0x00BB(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBaseColorR;                                              // 0x00BC(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBaseColorG;                                              // 0x00BD(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBaseColorB;                                              // 0x00BE(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLitColorR;                                               // 0x00BF(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLitColorG;                                               // 0x00C0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLitColorB;                                               // 0x00C1(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLitDirectionX;                                           // 0x00C2(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLitDirectionY;                                           // 0x00C3(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLitDirectionZ;                                           // 0x00C4(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLitFalloff;                                              // 0x00C5(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLitScale;                                                // 0x00C6(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x1];                                       // 0x00C7(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableCoinExchangeShop
// 0x00D0 (0x00D8 - 0x0008)
struct FJackDataTableCoinExchangeShop : public FTableRowBase
{
	struct FString                                     TalkTypeID;                                               // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       PrizeId_01;                                               // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_02;                                               // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_03;                                               // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_04;                                               // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_05;                                               // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_06;                                               // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_07;                                               // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_08;                                               // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_09;                                               // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_11;                                               // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_12;                                               // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_13;                                               // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_14;                                               // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_15;                                               // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_16;                                               // 0x0088(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_17;                                               // 0x0090(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_18;                                               // 0x0098(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_19;                                               // 0x00A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_20;                                               // 0x00A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_21;                                               // 0x00B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_22;                                               // 0x00B8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_23;                                               // 0x00C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_24;                                               // 0x00C8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PrizeId_25;                                               // 0x00D0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableCollideEffectTable
// 0x0360 (0x0368 - 0x0008)
struct FJackDataTableCollideEffectTable : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Default
	unsigned char                                      UnknownData01[0x18];                                      // 0x0020(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Earth
	unsigned char                                      UnknownData02[0x18];                                      // 0x0038(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.EarthDry
	unsigned char                                      UnknownData03[0x18];                                      // 0x0050(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Mud
	unsigned char                                      UnknownData04[0x18];                                      // 0x0068(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Stone
	unsigned char                                      UnknownData05[0x18];                                      // 0x0080(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Wood
	unsigned char                                      UnknownData06[0x18];                                      // 0x0098(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.WoodBoard
	unsigned char                                      UnknownData07[0x18];                                      // 0x00B0(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.WoodDamaged
	unsigned char                                      UnknownData08[0x18];                                      // 0x00C8(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.WoodThick
	unsigned char                                      UnknownData09[0x18];                                      // 0x00E0(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.SuspensionBridge
	unsigned char                                      UnknownData10[0x18];                                      // 0x00F8(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.SandStone
	unsigned char                                      UnknownData11[0x18];                                      // 0x0110(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Sand
	unsigned char                                      UnknownData12[0x18];                                      // 0x0128(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Gravel
	unsigned char                                      UnknownData13[0x18];                                      // 0x0140(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.BurntSand
	unsigned char                                      UnknownData14[0x18];                                      // 0x0158(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Water
	unsigned char                                      UnknownData15[0x18];                                      // 0x0170(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Shallow
	unsigned char                                      UnknownData16[0x18];                                      // 0x0188(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.OceanFloor
	unsigned char                                      UnknownData17[0x18];                                      // 0x01A0(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Snow
	unsigned char                                      UnknownData18[0x18];                                      // 0x01B8(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Ice
	unsigned char                                      UnknownData19[0x18];                                      // 0x01D0(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Grass
	unsigned char                                      UnknownData20[0x18];                                      // 0x01E8(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Leaf
	unsigned char                                      UnknownData21[0x18];                                      // 0x0200(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Straw
	unsigned char                                      UnknownData22[0x18];                                      // 0x0218(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.BrownGrass
	unsigned char                                      UnknownData23[0x18];                                      // 0x0230(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Cloth
	unsigned char                                      UnknownData24[0x18];                                      // 0x0248(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.ClothThick
	unsigned char                                      UnknownData25[0x18];                                      // 0x0260(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Metal
	unsigned char                                      UnknownData26[0x18];                                      // 0x0278(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Coin
	unsigned char                                      UnknownData27[0x18];                                      // 0x0290(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Flesh
	unsigned char                                      UnknownData28[0x18];                                      // 0x02A8(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Ladder
	unsigned char                                      UnknownData29[0x18];                                      // 0x02C0(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Rope
	unsigned char                                      UnknownData30[0x18];                                      // 0x02D8(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Poison
	unsigned char                                      UnknownData31[0x18];                                      // 0x02F0(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Lava
	unsigned char                                      UnknownData32[0x18];                                      // 0x0308(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Ivy
	unsigned char                                      UnknownData33[0x18];                                      // 0x0320(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.Barrier
	unsigned char                                      UnknownData34[0x18];                                      // 0x0338(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.ColdLava
	unsigned char                                      UnknownData35[0x18];                                      // 0x0350(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableCollideEffectTable.CleftLava
};

// ScriptStruct JackGame.JackDataTableCollideSoundTable
// 0x0360 (0x0368 - 0x0008)
struct FJackDataTableCollideSoundTable : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Default
	unsigned char                                      UnknownData01[0x18];                                      // 0x0020(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Earth
	unsigned char                                      UnknownData02[0x18];                                      // 0x0038(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.EarthDry
	unsigned char                                      UnknownData03[0x18];                                      // 0x0050(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Mud
	unsigned char                                      UnknownData04[0x18];                                      // 0x0068(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Stone
	unsigned char                                      UnknownData05[0x18];                                      // 0x0080(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Wood
	unsigned char                                      UnknownData06[0x18];                                      // 0x0098(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.WoodBoard
	unsigned char                                      UnknownData07[0x18];                                      // 0x00B0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.WoodDamaged
	unsigned char                                      UnknownData08[0x18];                                      // 0x00C8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.WoodThick
	unsigned char                                      UnknownData09[0x18];                                      // 0x00E0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.SuspensionBridge
	unsigned char                                      UnknownData10[0x18];                                      // 0x00F8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.SandStone
	unsigned char                                      UnknownData11[0x18];                                      // 0x0110(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Sand
	unsigned char                                      UnknownData12[0x18];                                      // 0x0128(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Gravel
	unsigned char                                      UnknownData13[0x18];                                      // 0x0140(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.BurntSand
	unsigned char                                      UnknownData14[0x18];                                      // 0x0158(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Water
	unsigned char                                      UnknownData15[0x18];                                      // 0x0170(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Shallow
	unsigned char                                      UnknownData16[0x18];                                      // 0x0188(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.OceanFloor
	unsigned char                                      UnknownData17[0x18];                                      // 0x01A0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Snow
	unsigned char                                      UnknownData18[0x18];                                      // 0x01B8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Ice
	unsigned char                                      UnknownData19[0x18];                                      // 0x01D0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Grass
	unsigned char                                      UnknownData20[0x18];                                      // 0x01E8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Leaf
	unsigned char                                      UnknownData21[0x18];                                      // 0x0200(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Straw
	unsigned char                                      UnknownData22[0x18];                                      // 0x0218(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.BrownGrass
	unsigned char                                      UnknownData23[0x18];                                      // 0x0230(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Cloth
	unsigned char                                      UnknownData24[0x18];                                      // 0x0248(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.ClothThick
	unsigned char                                      UnknownData25[0x18];                                      // 0x0260(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Metal
	unsigned char                                      UnknownData26[0x18];                                      // 0x0278(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Coin
	unsigned char                                      UnknownData27[0x18];                                      // 0x0290(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Flesh
	unsigned char                                      UnknownData28[0x18];                                      // 0x02A8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Ladder
	unsigned char                                      UnknownData29[0x18];                                      // 0x02C0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Rope
	unsigned char                                      UnknownData30[0x18];                                      // 0x02D8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Poison
	unsigned char                                      UnknownData31[0x18];                                      // 0x02F0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Lava
	unsigned char                                      UnknownData32[0x18];                                      // 0x0308(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Ivy
	unsigned char                                      UnknownData33[0x18];                                      // 0x0320(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.Barrier
	unsigned char                                      UnknownData34[0x18];                                      // 0x0338(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.ColdLava
	unsigned char                                      UnknownData35[0x18];                                      // 0x0350(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCollideSoundTable.CleftLava
};

// ScriptStruct JackGame.JackDataTableWidgetBlueprint
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableWidgetBlueprint : public FTableRowBase
{
	class UBlueprint*                                  WidgetBlueprint;                                          // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableTexture
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableTexture : public FTableRowBase
{
	class UTexture*                                    Texture;                                                  // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableBlueprintClass
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableBlueprintClass : public FTableRowBase
{
	class UClass*                                      BlueprintClass;                                           // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMaterial
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMaterial : public FTableRowBase
{
	class UMaterialInterface*                          Material;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableSkeletalMesh
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableSkeletalMesh : public FTableRowBase
{
	class USkeletalMesh*                               SkeletalMesh;                                             // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableStaticMesh
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableStaticMesh : public FTableRowBase
{
	class UStaticMesh*                                 StaticMesh;                                               // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableCollideEffect
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableCollideEffect : public FTableRowBase
{
	class UClass*                                      CollideEffect;                                            // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMaterialParameterCollection
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMaterialParameterCollection : public FTableRowBase
{
	class UMaterialParameterCollection*                MaterialParameterCollection;                              // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableCurve
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableCurve : public FTableRowBase
{
	class UCurveBase*                                  Curve;                                                    // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableCameraShake
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableCameraShake : public FTableRowBase
{
	class UClass*                                      CameraShakeClass;                                         // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableCameraAnim
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableCameraAnim : public FTableRowBase
{
	class UCameraAnim*                                 CameraAnim;                                               // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableWeaponClass
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableWeaponClass : public FTableRowBase
{
	class UClass*                                      WeaponClass;                                              // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableProjectileClass
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableProjectileClass : public FTableRowBase
{
	class UClass*                                      ProjectileClass;                                          // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableSound
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableSound : public FTableRowBase
{
	class USoundBase*                                  Sound;                                                    // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableParticle
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableParticle : public FTableRowBase
{
	class UParticleSystem*                             Particle;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackOverrideMaterial
// 0x01B0
struct FJackOverrideMaterial
{
	struct FName                                       TargetMaterialName;                                       // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackOverrideMaterial.OverrideMaterial
	struct FName                                       OverrideTexture1_ParamName;                               // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0028(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackOverrideMaterial.OverrideTexture1
	struct FName                                       OverrideTexture2_ParamName;                               // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0048(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackOverrideMaterial.OverrideTexture2
	struct FName                                       OverrideTexture3_ParamName;                               // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x18];                                      // 0x0068(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackOverrideMaterial.OverrideTexture3
	struct FName                                       OverrideTexture4_ParamName;                               // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x18];                                      // 0x0088(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackOverrideMaterial.OverrideTexture4
	struct FName                                       OverrideTexture5_ParamName;                               // 0x00A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x18];                                      // 0x00A8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackOverrideMaterial.OverrideTexture5
	struct FName                                       OverrideColor1_ParamName;                                 // 0x00C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                OverrideColor1;                                           // 0x00C8(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OverrideColor2_ParamName;                                 // 0x00D8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                OverrideColor2;                                           // 0x00E0(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OverrideColor3_ParamName;                                 // 0x00F0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                OverrideColor3;                                           // 0x00F8(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OverrideColor4_ParamName;                                 // 0x0108(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                OverrideColor4;                                           // 0x0110(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OverrideColor5_ParamName;                                 // 0x0120(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                OverrideColor5;                                           // 0x0128(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OverrideColor6_ParamName;                                 // 0x0138(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                OverrideColor6;                                           // 0x0140(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OverrideColor7_ParamName;                                 // 0x0150(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                OverrideColor7;                                           // 0x0158(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OverrideColor8_ParamName;                                 // 0x0168(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                OverrideColor8;                                           // 0x0170(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OverrideColor9_ParamName;                                 // 0x0180(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                OverrideColor9;                                           // 0x0188(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OverrideColor10_ParamName;                                // 0x0198(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FLinearColor                                OverrideColor10;                                          // 0x01A0(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackCoordinateMeshInfo
// 0x0888
struct FJackCoordinateMeshInfo
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackCoordinateMeshInfo.Mesh
	struct FJackOverrideMaterial                       OverrideMaterial1;                                        // 0x0018(0x01B0) (Edit, BlueprintVisi, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance)
	struct FJackOverrideMaterial                       OverrideMaterial2;                                        // 0x01C8(0x01B0) (Edit, BlueprintVisi, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance)
	struct FJackOverrideMaterial                       OverrideMaterial3;                                        // 0x0378(0x01B0) (Edit, BlueprintVisi, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance)
	struct FJackOverrideMaterial                       OverrideMaterial4;                                        // 0x0528(0x01B0) (Edit, BlueprintVisi, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance)
	struct FJackOverrideMaterial                       OverrideMaterial5;                                        // 0x06D8(0x01B0) (Edit, BlueprintVisi, BlueprintReadOnly, EditFixedSize, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableCoordinate
// 0x4458 (0x4460 - 0x0008)
struct FJackDataTableCoordinate : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordinate.MasterPoseMesh
	struct FJackCoordinateMeshInfo                     Body;                                                     // 0x0020(0x0888) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackCoordinateMeshInfo                     Face;                                                     // 0x08A8(0x0888) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackCoordinateMeshInfo                     Hair;                                                     // 0x1130(0x0888) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackCoordinateMeshInfo                     Beard;                                                    // 0x19B8(0x0888) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackCoordinateMeshInfo                     Accessory;                                                // 0x2240(0x0888) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackCoordinateMeshInfo                     Cloth1;                                                   // 0x2AC8(0x0888) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackCoordinateMeshInfo                     Cloth2;                                                   // 0x3350(0x0888) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackCoordinateMeshInfo                     Cloth3;                                                   // 0x3BD8(0x0888) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableForceFeedback
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableForceFeedback : public FTableRowBase
{
	class UForceFeedbackEffect*                        ForceFeedback;                                            // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableCoordSoundTable
// 0x01F8 (0x0200 - 0x0008)
struct FJackDataTableCoordSoundTable : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.Walk
	unsigned char                                      UnknownData01[0x18];                                      // 0x0020(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.Run
	unsigned char                                      UnknownData02[0x18];                                      // 0x0038(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.Dash
	unsigned char                                      UnknownData03[0x18];                                      // 0x0050(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.ArmUp
	unsigned char                                      UnknownData04[0x18];                                      // 0x0068(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.ArmDown
	unsigned char                                      UnknownData05[0x18];                                      // 0x0080(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.Sit
	unsigned char                                      UnknownData06[0x18];                                      // 0x0098(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.Stand
	unsigned char                                      UnknownData07[0x18];                                      // 0x00B0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.Jump
	unsigned char                                      UnknownData08[0x18];                                      // 0x00C8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.Land
	unsigned char                                      UnknownData09[0x18];                                      // 0x00E0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.Turn
	unsigned char                                      UnknownData10[0x18];                                      // 0x00F8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.ArmHard
	unsigned char                                      UnknownData11[0x18];                                      // 0x0110(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.BodyHard
	unsigned char                                      UnknownData12[0x18];                                      // 0x0128(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.Down
	unsigned char                                      UnknownData13[0x18];                                      // 0x0140(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.CS1
	unsigned char                                      UnknownData14[0x18];                                      // 0x0158(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.CS2
	unsigned char                                      UnknownData15[0x18];                                      // 0x0170(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.CS3
	unsigned char                                      UnknownData16[0x18];                                      // 0x0188(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.CS4
	unsigned char                                      UnknownData17[0x18];                                      // 0x01A0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.CS5
	unsigned char                                      UnknownData18[0x18];                                      // 0x01B8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.CS6
	unsigned char                                      UnknownData19[0x18];                                      // 0x01D0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.CS7
	unsigned char                                      UnknownData20[0x18];                                      // 0x01E8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableCoordSoundTable.CS8
};

// ScriptStruct JackGame.JackDataTableCutSceneAnimationInfo
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableCutSceneAnimationInfo : public FTableRowBase
{
	float                                              ApplyRate;                                                // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableCutSceneAutomaticFeedOfSpeechInfo
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableCutSceneAutomaticFeedOfSpeechInfo : public FTableRowBase
{
	float                                              InVoice;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InLoopVoice;                                              // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InText;                                                   // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              OneLetter;                                                // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableCutSceneCoordinateAliasInfo
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableCutSceneCoordinateAliasInfo : public FTableRowBase
{
	struct FName                                       AliasCoordinateID;                                        // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableCutSceneDuplicationTalkerInfo
// 0x0080 (0x0088 - 0x0008)
struct FJackDataTableCutSceneDuplicationTalkerInfo : public FTableRowBase
{
	struct FName                                       OriginalTalkerID0;                                        // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OriginalTalkerID1;                                        // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OriginalTalkerID2;                                        // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OriginalTalkerID3;                                        // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OriginalTalkerID4;                                        // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OriginalTalkerID5;                                        // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OriginalTalkerID6;                                        // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OriginalTalkerID7;                                        // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OriginalTalkerID8;                                        // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OriginalTalkerID9;                                        // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OriginalTalkerID10;                                       // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OriginalTalkerID11;                                       // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OriginalTalkerID12;                                       // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OriginalTalkerID13;                                       // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OriginalTalkerID14;                                       // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OriginalTalkerID15;                                       // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableCutSceneDynamicResolutionInfo
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableCutSceneDynamicResolutionInfo : public FTableRowBase
{
	struct FName                                       CutSceneID;                                               // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CutID;                                                    // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScreenPercentage_Console;                                 // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScreenPercentage_Handheld;                                // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableCutSceneInfo
// 0x0188 (0x0190 - 0x0008)
struct FJackDataTableCutSceneInfo : public FTableRowBase
{
	struct FName                                       CSLevel;                                                  // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Title;                                                    // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       FlagName;                                                 // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       FirstFlagName;                                            // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               NPCVisibility;                                            // 0x0028(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FName                                       FogVisibility;                                            // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MeshVisibilityTag;                                        // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackFadeColor>                        StartFadeColor;                                           // 0x0040(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              StartFadeTime;                                            // 0x0044(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackFadeColor>                        EndFadeColor;                                             // 0x0048(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0049(0x0003) MISSED OFFSET
	float                                              EndFadeTime;                                              // 0x004C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       JumpMapStartID;                                           // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       JumpStartCSID;                                            // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               EndTimeReturnFlag;                                        // 0x0060(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               EndWeatherReturnFlag;                                     // 0x0061(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               EndLocationTitleShowFlag;                                 // 0x0062(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x5];                                       // 0x0063(0x0005) MISSED OFFSET
	struct FName                                       EndEventBattleID;                                         // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               EndPlayableFlag;                                          // 0x0070(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               MemoriesShowFlag;                                         // 0x0071(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x0072(0x0006) MISSED OFFSET
	struct FName                                       ChapterTitleID;                                           // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ChapterID;                                                // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       StartMapStartID;                                          // 0x0088(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PlayerWeaponID;                                           // 0x0090(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BGMID;                                                    // 0x0098(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ElevenCosID;                                              // 0x00A0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CamuCosID;                                                // 0x00A4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                VeronicaCosID;                                            // 0x00A8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SenaCosID;                                                // 0x00AC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SylviaCosID;                                              // 0x00B0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                RouCosID;                                                 // 0x00B4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MartinaCosID;                                             // 0x00B8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                GraigCosID;                                               // 0x00BC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ForceTime;                                                // 0x00C0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   ForceWeather;                                             // 0x00C4(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x00C5(0x0003) MISSED OFFSET
	int                                                ForceWindControl;                                         // 0x00C8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET
	struct FName                                       PreLoadMapJumpTag;                                        // 0x00D0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BGLODTag;                                                 // 0x00D8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               RefreshStatus;                                            // 0x00E0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               HiddenGuestNPC;                                           // 0x00E1(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x6];                                       // 0x00E2(0x0006) MISSED OFFSET
	struct FName                                       DisableCullDistanceVolume;                                // 0x00E8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DisableCullDistanceVolumeForActor;                        // 0x00F0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Achievement;                                              // 0x00F8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               HiddenWeatherEffect;                                      // 0x0100(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x3];                                       // 0x0101(0x0003) MISSED OFFSET
	float                                              FadeAfterWaitTime;                                        // 0x0104(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               PartyRecoverFlag;                                         // 0x0108(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x0109(0x0007) MISSED OFFSET
	struct FName                                       EnvironmentLevelName;                                     // 0x0110(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ChangeDefaultCoordinate;                                  // 0x0118(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                LoadingScreenType;                                        // 0x0120(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               InroomFlag;                                               // 0x0124(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x0125(0x0003) MISSED OFFSET
	struct FName                                       HiddenLightTag;                                           // 0x0128(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               CameraLightEnable;                                        // 0x0130(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               UseInGameReduction;                                       // 0x0131(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x6];                                       // 0x0132(0x0006) MISSED OFFSET
	struct FName                                       HighQualityTextureTag;                                    // 0x0138(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       WaitLoadTextureTag;                                       // 0x0140(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                LoadSoundType;                                            // 0x0148(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               EnableLensFlare;                                          // 0x014C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               HoukaiClearSky;                                           // 0x014D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               MemoriesSeqCSFlag;                                        // 0x014E(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData12[0x1];                                       // 0x014F(0x0001) MISSED OFFSET
	float                                              CSStartDelayTime;                                         // 0x0150(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CSStartDelayTimeForMemories;                              // 0x0154(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DisableInactiveTag;                                       // 0x0158(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               SkipFlushStreamingForLoadingAfter;                        // 0x0160(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               EndEnvSoundReturnFlag;                                    // 0x0161(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               DisableDynamicResolution;                                 // 0x0162(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData13[0x1];                                       // 0x0163(0x0001) MISSED OFFSET
	float                                              DynamicResolution_ScreenPercentage;                       // 0x0164(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DynamicResolution_DecreasesResolutionMaxCount_ConsoleMode;// 0x0168(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DynamicResolution_DecreasesResolutionMaxCount_HandheldMode;// 0x016C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DynamicResolution_WaitFramesToUpperResolution;            // 0x0170(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DynamicResolution_WaitFramesToLowerResolution;            // 0x0174(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DynamicResolution_DecreasesResolution;                    // 0x0178(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DynamicResolution_MaxTimeBudget;                          // 0x017C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DynamicResolution_MinTimeBudget;                          // 0x0180(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               WaitNPCLoadComplete;                                      // 0x0184(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               DisableHLOD;                                              // 0x0185(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData14[0x2];                                       // 0x0186(0x0002) MISSED OFFSET
	struct FName                                       ShowSkipFlag;                                             // 0x0188(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableCutSceneLevelLoadInfo
// 0x0080 (0x0088 - 0x0008)
struct FJackDataTableCutSceneLevelLoadInfo : public FTableRowBase
{
	struct FName                                       LoadLevel0;                                               // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCSMapLevelStatus                              LoadState0;                                               // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCSMapLevelStatus                              UnLoadState0;                                             // 0x0011(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0012(0x0006) MISSED OFFSET
	struct FName                                       LoadLevel1;                                               // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCSMapLevelStatus                              LoadState1;                                               // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCSMapLevelStatus                              UnLoadState1;                                             // 0x0021(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0022(0x0006) MISSED OFFSET
	struct FName                                       LoadLevel2;                                               // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCSMapLevelStatus                              LoadState2;                                               // 0x0030(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCSMapLevelStatus                              UnLoadState2;                                             // 0x0031(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
	struct FName                                       LoadLevel3;                                               // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCSMapLevelStatus                              LoadState3;                                               // 0x0040(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCSMapLevelStatus                              UnLoadState3;                                             // 0x0041(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
	struct FName                                       LoadLevel4;                                               // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCSMapLevelStatus                              LoadState4;                                               // 0x0050(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCSMapLevelStatus                              UnLoadState4;                                             // 0x0051(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x0052(0x0006) MISSED OFFSET
	struct FName                                       LoadLevel5;                                               // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCSMapLevelStatus                              LoadState5;                                               // 0x0060(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCSMapLevelStatus                              UnLoadState5;                                             // 0x0061(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x6];                                       // 0x0062(0x0006) MISSED OFFSET
	struct FName                                       LoadLevel6;                                               // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCSMapLevelStatus                              LoadState6;                                               // 0x0070(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCSMapLevelStatus                              UnLoadState6;                                             // 0x0071(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x6];                                       // 0x0072(0x0006) MISSED OFFSET
	struct FName                                       LoadLevel7;                                               // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCSMapLevelStatus                              LoadState7;                                               // 0x0080(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCSMapLevelStatus                              UnLoadState7;                                             // 0x0081(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x6];                                       // 0x0082(0x0006) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableCutSceneLipInfo
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableCutSceneLipInfo : public FTableRowBase
{
	struct FName                                       SerifuID;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StartTime;                                                // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Lip_aa;                                                   // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Lip_ln;                                                   // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Lip_fv;                                                   // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Lip_ee;                                                   // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Lip_oo;                                                   // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Lip_sh;                                                   // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Lip_bmp;                                                  // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BlendInTime;                                              // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BlendOutTime;                                             // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableCutSceneSerifuInfo
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableCutSceneSerifuInfo : public FTableRowBase
{
	struct FName                                       OverrideCloseFlag;                                        // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OverrideNPCID;                                            // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableCutSceneVoiceTimelineInfo
// 0x0040 (0x0048 - 0x0008)
struct FJackDataTableCutSceneVoiceTimelineInfo : public FTableRowBase
{
	struct FName                                       SerifuID;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TargetCharacterName;                                      // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionName;                                               // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StartTime;                                                // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FName                                       Parameter1;                                               // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Parameter2;                                               // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Parameter3;                                               // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Parameter4;                                               // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableDamageAttributeEffect
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableDamageAttributeEffect : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableDamageAttributeEffect.EffectBP
};

// ScriptStruct JackGame.JackDamageEffect
// 0x0060
struct FJackDamageEffect
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDamageEffect.DamageNormal
	unsigned char                                      UnknownData01[0x18];                                      // 0x0018(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDamageEffect.DamageCritical
	unsigned char                                      UnknownData02[0x18];                                      // 0x0030(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDamageEffect.DamageGuard
	unsigned char                                      UnknownData03[0x18];                                      // 0x0048(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDamageEffect.DamageMiss
};

// ScriptStruct JackGame.JackDataTableDamageEffectTable
// 0x0600 (0x0608 - 0x0008)
struct FJackDataTableDamageEffectTable : public FTableRowBase
{
	struct FJackDamageEffect                           NOT;                                                      // 0x0008(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageEffect                           SWD;                                                      // 0x0068(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageEffect                           DGR;                                                      // 0x00C8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageEffect                           AXE;                                                      // 0x0128(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageEffect                           STK;                                                      // 0x0188(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageEffect                           BOO;                                                      // 0x01E8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageEffect                           TSW;                                                      // 0x0248(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageEffect                           SPR;                                                      // 0x02A8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageEffect                           ROD;                                                      // 0x0308(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageEffect                           CLW;                                                      // 0x0368(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageEffect                           WHP;                                                      // 0x03C8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageEffect                           DSW;                                                      // 0x0428(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageEffect                           DDG;                                                      // 0x0488(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageEffect                           DAX;                                                      // 0x04E8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageEffect                           DST;                                                      // 0x0548(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageEffect                           DBO;                                                      // 0x05A8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableDamageMaterialAnimation
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableDamageMaterialAnimation : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableDamageMaterialAnimation.CurveAsset
	float                                              CurveTimeScale;                                           // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageEmissiveScale;                                      // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDamageSound
// 0x0060
struct FJackDamageSound
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDamageSound.DamageNormal
	unsigned char                                      UnknownData01[0x18];                                      // 0x0018(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDamageSound.DamageCritical
	unsigned char                                      UnknownData02[0x18];                                      // 0x0030(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDamageSound.DamageGuard
	unsigned char                                      UnknownData03[0x18];                                      // 0x0048(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDamageSound.DamageMiss
};

// ScriptStruct JackGame.JackDataTableDamageSoundTable
// 0x0F00 (0x0F08 - 0x0008)
struct FJackDataTableDamageSoundTable : public FTableRowBase
{
	struct FJackDamageSound                            NOT;                                                      // 0x0008(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            SWD;                                                      // 0x0068(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            DGR;                                                      // 0x00C8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            AXE;                                                      // 0x0128(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            STK;                                                      // 0x0188(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            BOO;                                                      // 0x01E8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            TSW;                                                      // 0x0248(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            SPR;                                                      // 0x02A8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            ROD;                                                      // 0x0308(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            CLW;                                                      // 0x0368(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            WHP;                                                      // 0x03C8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            DSW;                                                      // 0x0428(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            DDG;                                                      // 0x0488(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            DAX;                                                      // 0x04E8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            DST;                                                      // 0x0548(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            DBO;                                                      // 0x05A8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Fng_S;                                                    // 0x0608(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Fng_M;                                                    // 0x0668(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Fng_L;                                                    // 0x06C8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Bek_S;                                                    // 0x0728(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Bek_M;                                                    // 0x0788(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Bek_L;                                                    // 0x07E8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Pnc_S;                                                    // 0x0848(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Pnc_M;                                                    // 0x08A8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Pnc_L;                                                    // 0x0908(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Don_S;                                                    // 0x0968(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Don_M;                                                    // 0x09C8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Don_L;                                                    // 0x0A28(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Spr_S;                                                    // 0x0A88(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Spr_M;                                                    // 0x0AE8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Spr_L;                                                    // 0x0B48(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Clw_S;                                                    // 0x0BA8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Clw_M;                                                    // 0x0C08(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Clw_L;                                                    // 0x0C68(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Swd_S;                                                    // 0x0CC8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Swd_M;                                                    // 0x0D28(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Swd_L;                                                    // 0x0D88(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Arw_S;                                                    // 0x0DE8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Arw_M;                                                    // 0x0E48(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	struct FJackDamageSound                            Arw_L;                                                    // 0x0EA8(0x0060) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableDebugCommandMacro
// 0x0058 (0x0060 - 0x0008)
struct FJackDataTableDebugCommandMacro : public FTableRowBase
{
	struct FName                                       BasePath;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Category;                                                 // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SubCategory;                                              // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     CommandList;                                              // 0x0020(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	bool                                               bAddMenu;                                                 // 0x0030(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	struct FName                                       DisplayName;                                              // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ShortCut;                                                 // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CategoryEnglish;                                          // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SubCategoryEnglish;                                       // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DisplayNameEnglish;                                       // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableDebugConsoleCommand
// 0x0048 (0x0050 - 0x0008)
struct FJackDataTableDebugConsoleCommand : public FTableRowBase
{
	struct FString                                     Command;                                                  // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     Category;                                                 // 0x0018(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     SubCategory;                                              // 0x0028(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	bool                                               JackCommandFlag;                                          // 0x0038(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	struct FString                                     CommentarySentence;                                       // 0x0040(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableEnvSoundTable
// 0x0840 (0x0848 - 0x0008)
struct FJackDataTableEnvSoundTable : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.ClearAndSunnyDayW1
	unsigned char                                      UnknownData01[0x18];                                      // 0x0020(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.ClearAndSunnyDayW2
	unsigned char                                      UnknownData02[0x18];                                      // 0x0038(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.ClearAndSunnyDayW3
	unsigned char                                      UnknownData03[0x18];                                      // 0x0050(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.ClearAndSunnyDayW4
	unsigned char                                      UnknownData04[0x18];                                      // 0x0068(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.ClearAndSunnyNightW1
	unsigned char                                      UnknownData05[0x18];                                      // 0x0080(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.ClearAndSunnyNightW2
	unsigned char                                      UnknownData06[0x18];                                      // 0x0098(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.ClearAndSunnyNightW3
	unsigned char                                      UnknownData07[0x18];                                      // 0x00B0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.ClearAndSunnyNightW4
	unsigned char                                      UnknownData08[0x18];                                      // 0x00C8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SunnyDayW1
	unsigned char                                      UnknownData09[0x18];                                      // 0x00E0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SunnyDayW2
	unsigned char                                      UnknownData10[0x18];                                      // 0x00F8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SunnyDayW3
	unsigned char                                      UnknownData11[0x18];                                      // 0x0110(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SunnyDayW4
	unsigned char                                      UnknownData12[0x18];                                      // 0x0128(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SunnyNightW1
	unsigned char                                      UnknownData13[0x18];                                      // 0x0140(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SunnyNightW2
	unsigned char                                      UnknownData14[0x18];                                      // 0x0158(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SunnyNightW3
	unsigned char                                      UnknownData15[0x18];                                      // 0x0170(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SunnyNightW4
	unsigned char                                      UnknownData16[0x18];                                      // 0x0188(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.CloudyDayW1
	unsigned char                                      UnknownData17[0x18];                                      // 0x01A0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.CloudyDayW2
	unsigned char                                      UnknownData18[0x18];                                      // 0x01B8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.CloudyDayW3
	unsigned char                                      UnknownData19[0x18];                                      // 0x01D0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.CloudyDayW4
	unsigned char                                      UnknownData20[0x18];                                      // 0x01E8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.CloudyNightW1
	unsigned char                                      UnknownData21[0x18];                                      // 0x0200(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.CloudyNightW2
	unsigned char                                      UnknownData22[0x18];                                      // 0x0218(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.CloudyNightW3
	unsigned char                                      UnknownData23[0x18];                                      // 0x0230(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.CloudyNightW4
	unsigned char                                      UnknownData24[0x18];                                      // 0x0248(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.LightRainDayW1
	unsigned char                                      UnknownData25[0x18];                                      // 0x0260(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.LightRainDayW2
	unsigned char                                      UnknownData26[0x18];                                      // 0x0278(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.LightRainDayW3
	unsigned char                                      UnknownData27[0x18];                                      // 0x0290(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.LightRainDayW4
	unsigned char                                      UnknownData28[0x18];                                      // 0x02A8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.LightRainNightW1
	unsigned char                                      UnknownData29[0x18];                                      // 0x02C0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.LightRainNightW2
	unsigned char                                      UnknownData30[0x18];                                      // 0x02D8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.LightRainNightW3
	unsigned char                                      UnknownData31[0x18];                                      // 0x02F0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.LightRainNightW4
	unsigned char                                      UnknownData32[0x18];                                      // 0x0308(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.RainDayW1
	unsigned char                                      UnknownData33[0x18];                                      // 0x0320(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.RainDayW2
	unsigned char                                      UnknownData34[0x18];                                      // 0x0338(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.RainDayW3
	unsigned char                                      UnknownData35[0x18];                                      // 0x0350(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.RainDayW4
	unsigned char                                      UnknownData36[0x18];                                      // 0x0368(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.RainNightW1
	unsigned char                                      UnknownData37[0x18];                                      // 0x0380(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.RainNightW2
	unsigned char                                      UnknownData38[0x18];                                      // 0x0398(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.RainNightW3
	unsigned char                                      UnknownData39[0x18];                                      // 0x03B0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.RainNightW4
	unsigned char                                      UnknownData40[0x18];                                      // 0x03C8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.HeavyRainDayW1
	unsigned char                                      UnknownData41[0x18];                                      // 0x03E0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.HeavyRainDayW2
	unsigned char                                      UnknownData42[0x18];                                      // 0x03F8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.HeavyRainDayW3
	unsigned char                                      UnknownData43[0x18];                                      // 0x0410(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.HeavyRainDayW4
	unsigned char                                      UnknownData44[0x18];                                      // 0x0428(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.HeavyRainNightW1
	unsigned char                                      UnknownData45[0x18];                                      // 0x0440(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.HeavyRainNightW2
	unsigned char                                      UnknownData46[0x18];                                      // 0x0458(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.HeavyRainNightW3
	unsigned char                                      UnknownData47[0x18];                                      // 0x0470(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.HeavyRainNightW4
	unsigned char                                      UnknownData48[0x18];                                      // 0x0488(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.ThunderstormDayW1
	unsigned char                                      UnknownData49[0x18];                                      // 0x04A0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.ThunderstormDayW2
	unsigned char                                      UnknownData50[0x18];                                      // 0x04B8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.ThunderstormDayW3
	unsigned char                                      UnknownData51[0x18];                                      // 0x04D0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.ThunderstormDayW4
	unsigned char                                      UnknownData52[0x18];                                      // 0x04E8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.ThunderstormNightW1
	unsigned char                                      UnknownData53[0x18];                                      // 0x0500(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.ThunderstormNightW2
	unsigned char                                      UnknownData54[0x18];                                      // 0x0518(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.ThunderstormNightW3
	unsigned char                                      UnknownData55[0x18];                                      // 0x0530(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.ThunderstormNightW4
	unsigned char                                      UnknownData56[0x18];                                      // 0x0548(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SnowDayW1
	unsigned char                                      UnknownData57[0x18];                                      // 0x0560(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SnowDayW2
	unsigned char                                      UnknownData58[0x18];                                      // 0x0578(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SnowDayW3
	unsigned char                                      UnknownData59[0x18];                                      // 0x0590(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SnowDayW4
	unsigned char                                      UnknownData60[0x18];                                      // 0x05A8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SnowNightW1
	unsigned char                                      UnknownData61[0x18];                                      // 0x05C0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SnowNightW2
	unsigned char                                      UnknownData62[0x18];                                      // 0x05D8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SnowNightW3
	unsigned char                                      UnknownData63[0x18];                                      // 0x05F0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SnowNightW4
	unsigned char                                      UnknownData64[0x18];                                      // 0x0608(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SnowstormDayW1
	unsigned char                                      UnknownData65[0x18];                                      // 0x0620(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SnowstormDayW2
	unsigned char                                      UnknownData66[0x18];                                      // 0x0638(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SnowstormDayW3
	unsigned char                                      UnknownData67[0x18];                                      // 0x0650(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SnowstormDayW4
	unsigned char                                      UnknownData68[0x18];                                      // 0x0668(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SnowstormNightW1
	unsigned char                                      UnknownData69[0x18];                                      // 0x0680(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SnowstormNightW2
	unsigned char                                      UnknownData70[0x18];                                      // 0x0698(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SnowstormNightW3
	unsigned char                                      UnknownData71[0x18];                                      // 0x06B0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.SnowstormNightW4
	unsigned char                                      UnknownData72[0x18];                                      // 0x06C8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.FogDayW1
	unsigned char                                      UnknownData73[0x18];                                      // 0x06E0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.FogDayW2
	unsigned char                                      UnknownData74[0x18];                                      // 0x06F8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.FogDayW3
	unsigned char                                      UnknownData75[0x18];                                      // 0x0710(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.FogDayW4
	unsigned char                                      UnknownData76[0x18];                                      // 0x0728(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.FogNightW1
	unsigned char                                      UnknownData77[0x18];                                      // 0x0740(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.FogNightW2
	unsigned char                                      UnknownData78[0x18];                                      // 0x0758(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.FogNightW3
	unsigned char                                      UnknownData79[0x18];                                      // 0x0770(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.FogNightW4
	unsigned char                                      UnknownData80[0x18];                                      // 0x0788(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.HeavyFogDayW1
	unsigned char                                      UnknownData81[0x18];                                      // 0x07A0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.HeavyFogDayW2
	unsigned char                                      UnknownData82[0x18];                                      // 0x07B8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.HeavyFogDayW3
	unsigned char                                      UnknownData83[0x18];                                      // 0x07D0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.HeavyFogDayW4
	unsigned char                                      UnknownData84[0x18];                                      // 0x07E8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.HeavyFogNightW1
	unsigned char                                      UnknownData85[0x18];                                      // 0x0800(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.HeavyFogNightW2
	unsigned char                                      UnknownData86[0x18];                                      // 0x0818(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.HeavyFogNightW3
	unsigned char                                      UnknownData87[0x18];                                      // 0x0830(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableEnvSoundTable.HeavyFogNightW4
};

// ScriptStruct JackGame.JackDataTableParameter
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableParameter : public FTableRowBase
{
	float                                              X;                                                        // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Y;                                                        // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Z;                                                        // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FName                                       Text;                                                     // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableEquipmentCoordinate
// 0x0088 (0x0090 - 0x0008)
struct FJackDataTableEquipmentCoordinate : public FTableRowBase
{
	struct FName                                       Equipment_Body;                                           // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Equipment_Head;                                           // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Equipment_Accessory1;                                     // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Equipment_Accessory2;                                     // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Equipment_OptionalAccessory1;                             // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CoordinateID_P001;                                        // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CoordinateID_P002;                                        // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CoordinateID_P003;                                        // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CoordinateID_P004;                                        // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CoordinateID_P004_ShortHair;                              // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CoordinateID_P005;                                        // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CoordinateID_P006;                                        // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CoordinateID_P007;                                        // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CoordinateID_P008;                                        // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseAsEquipmentCoordinate;                                // 0x0078(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseAsDressupCoordinate;                                  // 0x0079(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x007A(0x0002) MISSED OFFSET
	int                                                DisplayPriority;                                          // 0x007C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TextID_DisplayName;                                       // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TextID_DisplayDescription;                                // 0x0088(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableFacePoseSequence
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableFacePoseSequence : public FTableRowBase
{
	struct FName                                       PoseName;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Frame;                                                    // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackFacialAnimCategory                            Category;                                                 // 0x0014(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bForbiddenRandomBlink;                                    // 0x0015(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackFacialReferencedAnimSequence                  ReferencedAnimSequenceType;                               // 0x0016(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0017(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableFacialAnimation
// 0x0098 (0x00A0 - 0x0008)
struct FJackDataTableFacialAnimation : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableFacialAnimation.FaceSkeletalMesh
	unsigned char                                      UnknownData01[0x18];                                      // 0x0020(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableFacialAnimation.FacePoses
	unsigned char                                      UnknownData02[0x18];                                      // 0x0038(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableFacialAnimation.AdditionalFacePoses
	unsigned char                                      UnknownData03[0x18];                                      // 0x0050(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableFacialAnimation.CutSceneFacePoses
	unsigned char                                      UnknownData04[0x18];                                      // 0x0068(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableFacialAnimation.CutSceneAdditionalFacePoses
	float                                              EyeLookAtAngle_Up;                                        // 0x0080(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EyeLookAtAngle_Down;                                      // 0x0084(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EyeLookAtAngle_Left;                                      // 0x0088(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EyeLookAtAngle_Right;                                     // 0x008C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               ExcludeFacePoseForEyeLookAt;                              // 0x0090(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableFacialPreset
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableFacialPreset : public FTableRowBase
{
	struct FName                                       UpperFacePose;                                            // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       LowerFacePose;                                            // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableFootIKSetting
// 0x0058 (0x0060 - 0x0008)
struct FJackDataTableFootIKSetting : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableFootIKSetting.MasterPoseMesh
	bool                                               bSeparateRotationRangeElements;                           // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0021(0x0003) MISSED OFFSET
	struct FRotator                                    MinSeparateRotation;                                      // 0x0024(0x000C) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FRotator                                    MaxSeparateRotation;                                      // 0x0030(0x000C) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	float                                              SeparateRotationApplyHeight;                              // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EEasingFunc>                           SeparateRotationApplyEasingFunc;                          // 0x0040(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0041(0x0003) MISSED OFFSET
	float                                              CalcAdjustHeightBlendWeight_MovementSpeedMax;             // 0x0044(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CalcAdjustHeigthBlendWeight_MovementSpeedBlendWeightMax;  // 0x0048(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EEasingFunc>                           CalcAdjustHeightBlendWeight_MovementSpeedBlendCurve;      // 0x004C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	float                                              CalcAdjustHeightBlendWeight_GroundDegreeMax;              // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CalcAdjustHeigthBlendWeight_GroundDegreeBlendWeightMax;   // 0x0054(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EEasingFunc>                           CalcAdjustHeightBlendWeight_GroundDegreeBlendCurve;       // 0x0058(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackWeaponStyleAnimMontageTableInfo
// 0x0020
struct FJackWeaponStyleAnimMontageTableInfo
{
	TEnumAsByte<EJackEquippedWeaponStyle>              WeaponStyle;                                              // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x18];                                      // 0x0001(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackWeaponStyleAnimMontageTableInfo.AnimMontageTable
};

// ScriptStruct JackGame.JackDataTableFriendCharacter
// 0x00B0 (0x00B8 - 0x0008)
struct FJackDataTableFriendCharacter : public FTableRowBase
{
	TEnumAsByte<EJackCharacter>                        CharacterType;                                            // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackGender>                           Gender;                                                   // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackJob>                              Job;                                                      // 0x000A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackGambit>                           DefaultGambit;                                            // 0x000B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLeftHandedness;                                          // 0x000C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackItem_Bag>                         Bag;                                                      // 0x000D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
	unsigned char                                      UnknownData01[0x18];                                      // 0x000E(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableFriendCharacter.CharacterBPClass
	unsigned char                                      UnknownData02[0x18];                                      // 0x0028(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableFriendCharacter.ControlledCharacterBPClass
	unsigned char                                      UnknownData03[0x18];                                      // 0x0040(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableFriendCharacter.BattleCharacterBPClass
	TArray<struct FJackWeaponStyleAnimMontageTableInfo> WeaponStyleAnimMontageTableInfos;                         // 0x0058(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	class UDataTable*                                  DT_LevelUp;                                               // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	class UDataTable*                                  DT_ExtraLevelUp;                                          // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DT_ExtraLevelUp_ReferenceFlagName;                        // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       InitialCoordinateID;                                      // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       FacialPresetID;                                           // 0x0088(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       VoicePresetID;                                            // 0x0090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<float>                                      AttributeParams;                                          // 0x0098(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       ZoneOddEffectID;                                          // 0x00A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ZoneUpOddEffectID;                                        // 0x00B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableFriendCharacterPreset
// 0x00D8 (0x00E0 - 0x0008)
struct FJackDataTableFriendCharacterPreset : public FTableRowBase
{
	TEnumAsByte<EJackCharacter>                        CharacterType;                                            // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                Level;                                                    // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRejoin;                                                  // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIgnorePresetItems;                                       // 0x0011(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSkipRevive;                                              // 0x0012(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSkipClearZoneInfo;                                       // 0x0013(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSkipClearOddEffect;                                      // 0x0014(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSkipFullRecoverHP;                                       // 0x0015(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSkipFullRecoverMP;                                       // 0x0016(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOverrideGambit;                                          // 0x0017(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackGambit>                           OverrideGambit;                                           // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	struct FName                                       CoordinateID;                                             // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Handedness;                                               // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Hand;                                                     // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Head;                                                     // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Body;                                                     // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Accessory1;                                               // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Accessory2;                                               // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Item1;                                                    // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Item2;                                                    // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Item3;                                                    // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Item4;                                                    // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Item5;                                                    // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Item6;                                                    // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               TokugiPanelNames;                                         // 0x0088(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               TokugiNames;                                              // 0x0098(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	bool                                               bSScenarioSettings;                                       // 0x00A8(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSScenario_OverrideGold;                                  // 0x00A9(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x00AA(0x0002) MISSED OFFSET
	int                                                SScenario_Gold;                                           // 0x00AC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               SScenario_Items;                                          // 0x00B0(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               SScenario_Soubis;                                         // 0x00C0(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               SScenario_Daizis;                                         // 0x00D0(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableText
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableText : public FTableRowBase
{
	struct FString                                     Text;                                                     // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	EJackTextType                                      Type;                                                     // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	struct FName                                       TalkerID;                                                 // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      bNoTurn : 1;                                              // 0x0028(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bNoTalkStartEvent : 1;                                    // 0x0028(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bResetByMapJump : 1;                                      // 0x0028(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bScenarioGuide : 1;                                       // 0x0028(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bQuestGuide : 1;                                          // 0x0028(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableFukidasi
// 0x0008 (0x0038 - 0x0030)
struct FJackDataTableFukidasi : public FJackDataTableText
{
	TEnumAsByte<EJackFukidasiType>                     FukidasiType;                                             // 0x0030(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackFukidasiDuration>                 FukidasiDuration;                                         // 0x0031(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableFukkatunojumonGameResumeSettingItemZukan
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableFukkatunojumonGameResumeSettingItemZukan : public FTableRowBase
{
	struct FName                                       Category;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Value1;                                                   // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Value2;                                                   // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               Cmds;                                                     // 0x0020(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableFukkatunojumonGameResumeSettingMonsterZukan
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableFukkatunojumonGameResumeSettingMonsterZukan : public FTableRowBase
{
	struct FName                                       Category;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Value1;                                                   // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Value2;                                                   // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               Cmds;                                                     // 0x0020(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackGrantCommand
// 0x0018
struct FJackGrantCommand
{
	struct FName                                       Cmd0;                                                     // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Cmd1;                                                     // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Cmd2;                                                     // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableFukkatunojumonGameResumeSettingItem
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableFukkatunojumonGameResumeSettingItem : public FTableRowBase
{
	struct FName                                       Category;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Value1;                                                   // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Value2;                                                   // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FJackGrantCommand>                   Cmds;                                                     // 0x0020(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableFukkatunojumonGameResumeSettingParty
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableFukkatunojumonGameResumeSettingParty : public FTableRowBase
{
	struct FName                                       Category;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Value1;                                                   // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Value2;                                                   // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               Cmds;                                                     // 0x0020(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableFukkatunojumonGameResumeSettingFlag
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableFukkatunojumonGameResumeSettingFlag : public FTableRowBase
{
	struct FName                                       Category;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Value1;                                                   // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Value2;                                                   // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               Cmds;                                                     // 0x0020(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableFukkatunojumonLevelUpTable
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableFukkatunojumonLevelUpTable : public FTableRowBase
{
	int                                                DQ1_RequiredExp;                                          // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DQ2_RequiredExp;                                          // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableFukkatunojumonItemTable
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableFukkatunojumonItemTable : public FTableRowBase
{
	struct FName                                       ItemID;                                                   // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableFukkatunojumonRestartPointTable
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableFukkatunojumonRestartPointTable : public FTableRowBase
{
	struct FName                                       ChurchId;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MapStart;                                                 // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableFukkatunojumon
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableFukkatunojumon : public FTableRowBase
{
	struct FString                                     SpellResurrection;                                        // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                ScenarioProgress;                                         // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackFukkatunojumonSpecial>            SpecialType;                                              // 0x001C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableFukkatunojumonScenarioProgress
// 0x0060 (0x0068 - 0x0008)
struct FJackDataTableFukkatunojumonScenarioProgress : public FTableRowBase
{
	int                                                ScenarioProgress;                                         // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ReturnScenarioProgress;                                   // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       FlagCategory;                                             // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       FlagId;                                                   // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                RestartPoint;                                             // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               ScenarioStartFlag;                                        // 0x0024(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	struct FName                                       ScenarioTitleNameId;                                      // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ScenarioDescriptionId;                                    // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0038(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableFukkatunojumonScenarioProgress.ScenarioTexture
	TArray<bool>                                       RestartPoints;                                            // 0x0050(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                TripleReturnScenarioProgress;                             // 0x0060(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableFukkatunojumonSettingTable2D
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableFukkatunojumonSettingTable2D : public FTableRowBase
{
	struct FName                                       Category;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value1;                                                   // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value2;                                                   // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               Cmds;                                                     // 0x0018(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableFukkatunojumonRestartTable2D
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableFukkatunojumonRestartTable2D : public FTableRowBase
{
	int                                                EmbarkationMapId;                                         // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      EmbarkationLocatorId;                                     // 0x000C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      EmbarkationAnchorageId;                                   // 0x000D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      RespawnShipPointId;                                       // 0x000E(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x000F(0x0001) MISSED OFFSET
	int                                                RespawnMapId;                                             // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      RespawnMapJumpLocatorId;                                  // 0x0014(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      RespawnEventType;                                         // 0x0015(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      PrevScenarioId;                                           // 0x0016(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      PrevScenarioFlag;                                         // 0x0017(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PrevCutSceneId;                                           // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableGameFlag
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableGameFlag : public FTableRowBase
{
	TEnumAsByte<EJackGameFlagCategory>                 Category;                                                 // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FName                                       FlagNo;                                                   // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackGameFlagDataType>                 DataType;                                                 // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	struct FString                                     DefaultValue;                                             // 0x0020(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      bReadOnly : 1;                                            // 0x0030(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bCarryOver : 1;                                           // 0x0030(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      bResistLoad : 1;                                          // 0x0030(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableGameFlagScenario
// 0x0008 (0x0040 - 0x0038)
struct FJackDataTableGameFlagScenario : public FJackDataTableGameFlag
{
	bool                                               bScenarioFlag;                                            // 0x0038(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bScenarioFlagLVD;                                         // 0x0039(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUpdatesLatestFlag;                                       // 0x003A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackScenarioID>                       ScenarioID;                                               // 0x003B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ScenarioFlagIndex;                                        // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableGuestNPCList
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableGuestNPCList : public FTableRowBase
{
	TEnumAsByte<EJackCharacter>                        JackCharacter;                                            // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        NormalizedJackCharacter;                                  // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x000A(0x0006) MISSED OFFSET
	struct FName                                       NPCID;                                                    // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Height;                                                   // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableHiddenBonesDef
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableHiddenBonesDef : public FTableRowBase
{
	TArray<struct FName>                               TargetBones;                                              // 0x0008(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableItem
// 0x01E0 (0x01E8 - 0x0008)
struct FJackDataTableItem : public FTableRowBase
{
	struct FName                                       ItemNameID;                                               // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SortNo;                                                   // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                StrengthNo;                                               // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PhoneticNo;                                               // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PictorialBookNo;                                          // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                LapNo;                                                    // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FName                                       ClassificationID;                                         // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RecipeBookID;                                             // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Rarity;                                                   // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PlusValue;                                                // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Price_Buying;                                             // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Price_Selling;                                            // 0x0044(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     GetMEType;                                                // 0x0048(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       GetSEID;                                                  // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackItemGetIcon>                      GetIconType;                                              // 0x0060(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	struct FName                                       UnitNameID;                                               // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DescriptionID;                                            // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SpecificAbilityDescriptionID;                             // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       UsingActionID;                                            // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       UsingEvent;                                               // 0x0088(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       UsingEventParameter;                                      // 0x0090(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_Kougekiryoku;                         // 0x0098(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_Syubiryoku;                           // 0x009C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParameterCorrection_MPKyuuSyuuRate;                       // 0x00A0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParameterCorrection_BukiGuardRate;                        // 0x00A4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParameterCorrection_TateGuardRate;                        // 0x00A8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParameterCorrection_MikawasiRate;                         // 0x00AC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParameterCorrection_CriticalRate;                         // 0x00B0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ParameterCorrection_ZoneOnRate;                           // 0x00B4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_Tikara;                               // 0x00B8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_Minomamori;                           // 0x00BC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_Kiyousa;                              // 0x00C0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_Subayasa;                             // 0x00C4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_KougekiMaryoku;                       // 0x00C8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_KaifukuMaryoku;                       // 0x00CC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_MaxHP;                                // 0x00D0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_MaxMP;                                // 0x00D4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_Miryoku;                              // 0x00D8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackItem_ParameterType>               MajorParameter1;                                          // 0x00DC(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackItem_ParameterType>               MajorParameter2;                                          // 0x00DD(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackItem_ParameterType>               MajorParameter3;                                          // 0x00DE(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackItem_ParameterType>               MajorParameter4;                                          // 0x00DF(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OddEffectID_01;                                           // 0x00E0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OddEffectID_02;                                           // 0x00E8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OddEffectID_03;                                           // 0x00F0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OddEffectID_04;                                           // 0x00F8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEquipmentPossible_P001;                                  // 0x0100(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEquipmentPossible_P002;                                  // 0x0101(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEquipmentPossible_P003;                                  // 0x0102(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEquipmentPossible_P004_2;                                // 0x0103(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEquipmentPossible_P004_3;                                // 0x0104(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEquipmentPossible_P005;                                  // 0x0105(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEquipmentPossible_P006;                                  // 0x0106(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEquipmentPossible_P007;                                  // 0x0107(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEquipmentPossible_P008;                                  // 0x0108(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0109(0x0003) MISSED OFFSET
	int                                                EquipmentLevel;                                           // 0x010C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanConsume;                                              // 0x0110(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCanBuy;                                                  // 0x0111(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackItem_SellType>                    SellType;                                                 // 0x0112(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackItem_DiscardType>                 DiscardType;                                              // 0x0113(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLeaveAtSort;                                             // 0x0114(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bStoreCommonBag;                                          // 0x0115(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0116(0x0002) MISSED OFFSET
	int                                                LimitedNumber;                                            // 0x0118(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x011C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData05[0x18];                                      // 0x011C(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableItem.MenuIconTexture
	unsigned char                                      UnknownData06[0x18];                                      // 0x0138(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableItem.PictureBookIconTexture
	unsigned char                                      UnknownData07[0x18];                                      // 0x0150(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableItem.PopIconTexture
	unsigned char                                      UnknownData08[0x18];                                      // 0x0168(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableItem.EquipmentStaticMesh_Main
	unsigned char                                      UnknownData09[0x18];                                      // 0x0180(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableItem.EquipmentStaticMesh_Main_L
	unsigned char                                      UnknownData10[0x18];                                      // 0x0198(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableItem.EquipmentStaticMesh_Sub
	unsigned char                                      UnknownData11[0x18];                                      // 0x01B0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableItem.EquipmentSkeletalMesh_Main
	unsigned char                                      UnknownData12[0x18];                                      // 0x01C8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableItem.EquipmentSkeletalMesh_Sub
	TEnumAsByte<EJackItem_EquipmentSE>                 EquipmentSE;                                              // 0x01E0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData13[0x3];                                       // 0x01E1(0x0003) MISSED OFFSET
	int                                                TripleItemNo;                                             // 0x01E4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableGameFlagCutScene
// 0x0008 (0x0040 - 0x0038)
struct FJackDataTableGameFlagCutScene : public FJackDataTableGameFlag
{
	bool                                               bCutSceneFlag;                                            // 0x0038(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableItem_Equipment
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableItem_Equipment : public FTableRowBase
{
	TEnumAsByte<EJackItem_Classification>              Classification;                                           // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackEquipmentMultiple>                EquipmentMultiple;                                        // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackEquipmentRegion>                  EquipmentRegion;                                          // 0x000A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackEquipmentRegion>                  MultipleEquipmentRegion;                                  // 0x000B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackEquipmentRegion>                  ReleaseRegion;                                            // 0x000C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bStoreEquipmentBag;                                       // 0x000D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableItem_EventGet
// 0x0048 (0x0050 - 0x0008)
struct FJackDataTableItem_EventGet : public FTableRowBase
{
	int                                                Gold;                                                     // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FName                                       ItemID;                                                   // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNumber;                                               // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FName                                       TextID;                                                   // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     MeId;                                                     // 0x0028(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0038(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableItem_EventGet.SeAsset
};

// ScriptStruct JackGame.JackDataTable_MultiVoice
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTable_MultiVoice : public FTableRowBase
{
	bool                                               bFlag;                                                    // 0x0008(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableItem_Present
// 0x0048 (0x0050 - 0x0008)
struct FJackDataTableItem_Present : public FTableRowBase
{
	int                                                Gold;                                                     // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FName                                       ItemId_01;                                                // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemCount_01;                                             // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FName                                       ItemId_02;                                                // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemCount_02;                                             // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FName                                       ItemId_03;                                                // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemCount_03;                                             // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FName                                       ItemId_04;                                                // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemCount_04;                                             // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TripleDlcNo;                                              // 0x004C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableItem_Seed
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableItem_Seed : public FTableRowBase
{
	int                                                ParameterCorrection_Tikara;                               // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_Minomamori;                           // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_Subayasa;                             // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_Kiyousa;                              // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_Miryoku;                              // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_KougekiMaryoku;                       // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_KaifukuMaryoku;                       // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_MaxHP;                                // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_MaxMP;                                // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ParameterCorrection_TokugiPoint;                          // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableItemGettable_Common
// 0x0060 (0x0068 - 0x0008)
struct FJackDataTableItemGettable_Common : public FTableRowBase
{
	struct FName                                       GetFlag;                                                  // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackGettableCommonPurpose>            Purpose;                                                  // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FName                                       MapVolumeID_001;                                          // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MapVolumeID_002;                                          // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MapVolumeID_003;                                          // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Gold;                                                     // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FName                                       ItemID_001;                                               // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNum_001;                                              // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FName                                       ItemID_002;                                               // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNum_002;                                              // 0x0050(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	struct FName                                       ItemID_003;                                               // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNum_003;                                              // 0x0060(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableItemGettable_GmmickDrop
// 0x0048 (0x0050 - 0x0008)
struct FJackDataTableItemGettable_GmmickDrop : public FTableRowBase
{
	struct FName                                       GetFlag;                                                  // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MapId;                                                    // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ScenarioSequenceNo;                                       // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Minitue;                                                  // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_001;                                               // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNum_001;                                              // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FName                                       ItemID_002;                                               // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNum_002;                                              // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FName                                       ItemID_003;                                               // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNum_003;                                              // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableKaziCategory
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableKaziCategory : public FTableRowBase
{
	struct FName                                       Category;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PartsIndex;                                               // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableKaziUnderCorrection
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableKaziUnderCorrection : public FTableRowBase
{
	int                                                PlayerLv_Min;                                             // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PlayerLv_Max;                                             // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Correction_11;                                            // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Correction_10;                                            // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Correction_9;                                             // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Correction_8;                                             // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Correction_7;                                             // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Correction_6;                                             // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Correction_5;                                             // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Correction_4;                                             // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Correction_3;                                             // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Correction_2;                                             // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableItemGettable_TreasureBox
// 0x0070 (0x0078 - 0x0008)
struct FJackDataTableItemGettable_TreasureBox : public FTableRowBase
{
	struct FName                                       GetFlag;                                                  // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MapVolumeID_001;                                          // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MapVolumeID_002;                                          // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MapVolumeID_003;                                          // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackTreasureBoxPlacementCondition>    PlacementConditionType;                                   // 0x0028(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FName                                       PlacementConditionParameter;                              // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Gold;                                                     // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	struct FName                                       ItemID_001;                                               // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNum_001;                                              // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FName                                       ItemID_002;                                               // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNum_002;                                              // 0x0058(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
	struct FName                                       ItemID_003;                                               // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNum_003;                                              // 0x0068(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	struct FName                                       MimicEventBattleID;                                       // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableKaziLv
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableKaziLv : public FTableRowBase
{
	int                                                PlayerLv;                                                 // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxCP;                                                    // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ForgedPower_Min;                                          // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ForgedPower_Max;                                          // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Kaisin_Percentage;                                        // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                UnderRank;                                                // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableKaziQuality
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableKaziQuality : public FTableRowBase
{
	struct FName                                       PartsKind;                                                // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TotalRange_Fail;                                          // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TotalRange_1;                                             // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TotalRange_2;                                             // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TotalRange_3;                                             // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TotalRange_4;                                             // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DaiseikouBonusValue;                                      // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableKaziSafetyArea
// 0x0040 (0x0048 - 0x0008)
struct FJackDataTableKaziSafetyArea : public FTableRowBase
{
	int                                                SafetyArea_1_L_Min;                                       // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SafetyArea_1_L_Max;                                       // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SafetyArea_1_R_Min;                                       // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SafetyArea_1_R_Max;                                       // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SafetyArea_2_L_Min;                                       // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SafetyArea_2_L_Max;                                       // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SafetyArea_2_R_Min;                                       // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SafetyArea_2_R_Max;                                       // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SafetyArea_3_L_Min;                                       // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SafetyArea_3_L_Max;                                       // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SafetyArea_3_R_Min;                                       // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SafetyArea_3_R_Max;                                       // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SafetyArea_4_L_Min;                                       // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SafetyArea_4_L_Max;                                       // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SafetyArea_4_R_Min;                                       // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SafetyArea_4_R_Max;                                       // 0x0044(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableLetterList
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableLetterList : public FTableRowBase
{
	int                                                Unicode;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AlternativeLetter;                                        // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPatchimType                                   PatchimType;                                              // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackSubLevelStatus
// 0x0018
struct FJackSubLevelStatus
{
	struct FName                                       LevelPackageName;                                         // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	EJackStreamingStatus                               StreamingStatus;                                          // 0x0008(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                LODIndex;                                                 // 0x000C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bPlayerInside;                                            // 0x0010(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bCharaData;                                               // 0x0011(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bMonsterData;                                             // 0x0012(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               bResidentData;                                            // 0x0013(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableLevelStreamingStatus
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableLevelStreamingStatus : public FTableRowBase
{
	TArray<struct FJackSubLevelStatus>                 LevelStreamingStatus;                                     // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableLoading
// 0x0040 (0x0048 - 0x0008)
struct FJackDataTableLoading : public FTableRowBase
{
	struct FName                                       Type;                                                     // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       If;                                                       // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       IfNum;                                                    // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       IfNum2;                                                   // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     Title;                                                    // 0x0028(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     Text;                                                     // 0x0038(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableLookAtBoneSetting
// 0x0090 (0x0098 - 0x0008)
struct FJackDataTableLookAtBoneSetting : public FTableRowBase
{
	struct FJackLookAtBoneSetting                      Spine1;                                                   // 0x0008(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FJackLookAtBoneSetting                      Spine2;                                                   // 0x002C(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FJackLookAtBoneSetting                      Neck;                                                     // 0x0050(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FJackLookAtBoneSetting                      Head;                                                     // 0x0074(0x0024) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMap
// 0x0050 (0x0058 - 0x0008)
struct FJackDataTableMap : public FTableRowBase
{
	struct FName                                       ClassificationID;                                         // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BGMID;                                                    // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RespawnPointID;                                           // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMapVisitEnabled;                                         // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMapVisitAchievement;                                     // 0x0021(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bHorseCallEnabled;                                        // 0x0022(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather;                                                  // 0x0023(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel;                                                // 0x0024(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	int                                                WindAngle;                                                // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute;                                    // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RegisterRuraID;                                           // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ShipMoveTag;                                              // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID;                                                   // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                FollowingCharactersMode;                                  // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDataListUpBeforeCollapse;                                // 0x004C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDataListUpAfterTheFall;                                  // 0x004D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDataListUpTwoLap;                                        // 0x004E(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDataListUpNewStory;                                      // 0x004F(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DataListSortNo;                                           // 0x0050(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TripleAreaNo;                                             // 0x0054(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMapStart
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableMapStart : public FTableRowBase
{
	struct FName                                       MapId;                                                    // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       LevelStreamingStatusID;                                   // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CameraNo;                                                 // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackMaterialCoordinate
// 0x0020
struct FJackMaterialCoordinate
{
	struct FName                                       TypeName;                                                 // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackMaterialCoordinate.OverrideMaterial
};

// ScriptStruct JackGame.JackDataTableMaterialCoordinate
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableMaterialCoordinate : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMaterialCoordinate.TargetMaterial
	TArray<struct FJackMaterialCoordinate>             MaterialCoordinates;                                      // 0x0020(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableMaterialCoordinateType
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableMaterialCoordinateType : public FTableRowBase
{
	struct FName                                       VariableName;                                             // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackMaterialParameterControlMethod>   Method;                                                   // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FName                                       ApplyRateMaterialParameterName;                           // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bResidentMaterials;                                       // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMedalExchange
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMedalExchange : public FTableRowBase
{
	struct FName                                       ItemID;                                                   // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ExchangeNumber;                                           // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackExchange>                         ExchangeType;                                             // 0x0014(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMedalStamp
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableMedalStamp : public FTableRowBase
{
	struct FName                                       ItemID;                                                   // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                StampNumber;                                              // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData01[0x18];                                      // 0x0014(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMedalStamp.IconTexture
};

// ScriptStruct JackGame.JackDataTableMeosiSlotBarChance
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotBarChance : public FTableRowBase
{
	int                                                BlueBack;                                                 // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                RedBack;                                                  // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                GoldBack;                                                 // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MeatBack;                                                 // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotBGM
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotBGM : public FTableRowBase
{
	struct FName                                       BGMID;                                                    // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotBGMProbability
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotBGMProbability : public FTableRowBase
{
	int                                                NormalBGM;                                                // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                StockBgm;                                                 // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotBonusMonsterEncounterProbability
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableMeosiSlotBonusMonsterEncounterProbability : public FTableRowBase
{
	int                                                Level1;                                                   // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Level2;                                                   // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Level3;                                                   // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Level4;                                                   // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Level5;                                                   // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotBossMonsterSelectProbability
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableMeosiSlotBossMonsterSelectProbability : public FTableRowBase
{
	int                                                Stock;                                                    // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                No_Stock;                                                 // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BGMProb_Stock;                                            // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BGMProb_No_Stock;                                         // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BattlePeriodRange;                                        // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotConfigurationMain
// 0x00D8 (0x00E0 - 0x0008)
struct FJackDataTableMeosiSlotConfigurationMain : public FTableRowBase
{
	struct FName                                       HandProb_Def;                                             // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       HandProb_CZ;                                              // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BonusProb_Def_Def;                                        // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BonusProb_Def_High;                                       // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BonusProb_Def_Heven;                                      // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BonusProb_CZ_Def;                                         // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BonusProb_CZ_High;                                        // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BonusProb_CZ_Heven;                                       // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BonusRising;                                              // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TransStProb1_Def_Def;                                     // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TransStProb1_Def_High;                                    // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TransStProb1_Def_Heven;                                   // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TransStProb1_CZ_Def;                                      // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TransStProb1_CZ_High;                                     // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TransStProb1_CZ_Heven;                                    // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TransStProb2;                                             // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TransStProb3;                                             // 0x0088(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Ceiling_Def;                                              // 0x0090(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Ceiling_High;                                             // 0x0098(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Ceiling_Heven;                                            // 0x00A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CeilingAT_Def;                                            // 0x00A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CeilingAT_High;                                           // 0x00B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CeilingAT_Heven;                                          // 0x00B8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BonusStock;                                               // 0x00C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ExtraEffect;                                              // 0x00C8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       EncountMonsterCnt;                                        // 0x00D0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MonsterRecruitCor;                                        // 0x00D8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotEncounteredMonsterCount
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableMeosiSlotEncounteredMonsterCount : public FTableRowBase
{
	int                                                Count1;                                                   // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Count2;                                                   // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Count3;                                                   // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Count4;                                                   // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Count5;                                                   // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Count6;                                                   // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Count7;                                                   // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Count8;                                                   // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Count9;                                                   // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Count10;                                                  // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Count99;                                                  // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotPseudoContinuation
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableMeosiSlotPseudoContinuation : public FTableRowBase
{
	int                                                Game0;                                                    // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game1;                                                    // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game2;                                                    // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game3;                                                    // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game4;                                                    // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotDrakeeEffect
// 0x0038 (0x0040 - 0x0008)
struct FJackDataTableMeosiSlotDrakeeEffect : public FTableRowBase
{
	int                                                Nothing;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Single;                                                   // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Gust;                                                     // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Calm;                                                     // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Double_A;                                                 // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Double_B;                                                 // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Double_C;                                                 // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Tripple;                                                  // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Square;                                                   // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DogLeg;                                                   // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                V_Shaped;                                                 // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Back_Slash;                                               // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Minus;                                                    // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Flock;                                                    // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotShimofuriChance
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotShimofuriChance : public FTableRowBase
{
	float                                              Probability;                                              // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotExtraEffect
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableMeosiSlotExtraEffect : public FTableRowBase
{
	int                                                ReelLightOff;                                             // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ChanceCutin_Default;                                      // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Door;                                                     // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ChanceCutin_StepUp;                                       // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                FireLamp;                                                 // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotLongFreeze
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotLongFreeze : public FTableRowBase
{
	float                                              Probability;                                              // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotFlavorItemKindSelectProbability
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotFlavorItemKindSelectProbability : public FTableRowBase
{
	int                                                Probability;                                              // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotFlavorItemRankSelectProbability
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableMeosiSlotFlavorItemRankSelectProbability : public FTableRowBase
{
	int                                                Rank1;                                                    // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Rank2;                                                    // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Rank3;                                                    // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Rank4;                                                    // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Rank5;                                                    // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotHandStopRange
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotHandStopRange : public FTableRowBase
{
	TArray<float>                                      StopRange;                                                // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotHandStopType
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotHandStopType : public FTableRowBase
{
	TEnumAsByte<EJackMeosiSlotReelPattern>             StopType;                                                 // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotHandsOrder
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotHandsOrder : public FTableRowBase
{
	int                                                Num;                                                      // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotReelPattern>             HandName;                                                 // 0x000C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotItemList
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotItemList : public FTableRowBase
{
	struct FName                                       Key;                                                      // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotItemParam
// 0x0038 (0x0040 - 0x0008)
struct FJackDataTableMeosiSlotItemParam : public FTableRowBase
{
	struct FString                                     NameText;                                                 // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TEnumAsByte<EJackMeosiSlotItemKind>                Kind;                                                     // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x18];                                      // 0x0019(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMeosiSlotItemParam.Texture
	TEnumAsByte<EJackMeosiSlotItemSpec>                ItemID;                                                   // 0x0038(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotItemProbability
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableMeosiSlotItemProbability : public FTableRowBase
{
	int                                                Orb_Default;                                              // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Feed_Default;                                             // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Mimic_Default;                                            // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                FlavorText_Default;                                       // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Orb_CZ;                                                   // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Feed_CZ;                                                  // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Mimic_CZ;                                                 // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                FlavorText_CZ;                                            // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotTextures
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotTextures : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0008(0x0010) UNKNOWN PROPERTY: ArrayProperty JackGame.JackDataTableMeosiSlotTextures.Textures
};

// ScriptStruct JackGame.JackDataTableMeosiSlotShimohuriResultME
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableMeosiSlotShimohuriResultME : public FTableRowBase
{
	int                                                Nums;                                                     // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FString                                     MeId;                                                     // 0x0010(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotShimohuriAppearRate
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotShimohuriAppearRate : public FTableRowBase
{
	int                                                AppRate;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterID>               MonsterID;                                                // 0x000C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotShimohuriRefundSetting
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableMeosiSlotShimohuriRefundSetting : public FTableRowBase
{
	int                                                UperRefundRate;                                           // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                LowerRefundRate;                                          // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                UperMonsterCnt;                                           // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                LowerMonsterCnt;                                          // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AdjustRate;                                               // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotBreakOffRefundSetting
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotBreakOffRefundSetting : public FTableRowBase
{
	float                                              EachGameRate;                                             // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              UperRate;                                                 // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LowerRate;                                                // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotRefundRate
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotRefundRate : public FTableRowBase
{
	float                                              ShimohuriRate;                                            // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ClearanceRate;                                            // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotEtcConf
// 0x0040 (0x0048 - 0x0008)
struct FJackDataTableMeosiSlotEtcConf : public FTableRowBase
{
	int                                                HighProbMin;                                              // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BonusGames;                                               // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WinFixed;                                                 // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                HintHighSet;                                              // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                HintOddEven;                                              // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ForceExactly;                                             // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                FeedPat;                                                  // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ComeBack;                                                 // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NumEndedGame;                                             // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SimRpm;                                                   // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SettingAskGames;                                          // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AutoPlayGames;                                            // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AutoPlayInterval;                                         // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SimCountLowerRate;                                        // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              SimCountUperRate;                                         // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotMissHit
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotMissHit : public FTableRowBase
{
	int                                                Miss;                                                     // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Hit;                                                      // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotHandHsToNm
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotHandHsToNm : public FTableRowBase
{
	TEnumAsByte<EJackMeosiSlotHand>                    NmHand;                                                   // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotHandNmToHs
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotHandNmToHs : public FTableRowBase
{
	TEnumAsByte<EJackMeosiSlotHsHand>                  HsHand;                                                   // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotPercentLottery
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotPercentLottery : public FTableRowBase
{
	int                                                Percent;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotSptContinueProb
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotSptContinueProb : public FTableRowBase
{
	int                                                ContProb;                                                 // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotSptAuraPoint
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotSptAuraPoint : public FTableRowBase
{
	int                                                LastSucceedProb;                                          // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotSpTrainingAuraColor>     AuraColor;                                                // 0x000C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotSptHandsPoint
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotSptHandsPoint : public FTableRowBase
{
	int                                                MinPoint;                                                 // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxPoint;                                                 // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AtAddChgProb;                                             // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NoAddChgProb;                                             // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotUnionScenarioBlock
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotUnionScenarioBlock : public FTableRowBase
{
	TEnumAsByte<EJackMeosiSlotUnionScenarioBranch>     Branch;                                                   // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                MinNum;                                                   // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxNum;                                                   // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cont;                                                     // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotUnionScenario
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableMeosiSlotUnionScenario : public FTableRowBase
{
	int                                                Group;                                                    // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Ratio;                                                    // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                FirstNum;                                                 // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	TArray<struct FJackDataTableMeosiSlotUnionScenarioBlock> GameStructArray;                                          // 0x0018(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotActNoBase
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotActNoBase : public FTableRowBase
{
	TEnumAsByte<EJackMeosiSlotScenarioActNo>           ActBase;                                                  // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotRouteNum
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotRouteNum : public FTableRowBase
{
	int                                                RouteNum;                                                 // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotActControl
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableMeosiSlotActControl : public FTableRowBase
{
	TArray<bool>                                       RandomTorFArray;                                          // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<bool>                                       TorFArray;                                                // 0x0018(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotScenarioRandom
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableMeosiSlotScenarioRandom : public FTableRowBase
{
	TArray<TEnumAsByte<EJackMeosiSlotScenarioActNo>>   ActNoArray;                                               // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<int>                                        RatioArray;                                               // 0x0018(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotScenarioPatternBlock
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotScenarioPatternBlock : public FTableRowBase
{
	TEnumAsByte<EJackMeosiSlotScenarioActNo>           ActNo;                                                    // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                GameNum;                                                  // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotScenarioHint>            Hint;                                                     // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotScenarioStage>           Stage;                                                    // 0x0011(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotScenarioSPTraining>      Training;                                                 // 0x0012(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0013(0x0005) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotScenarioPattern
// 0x0038 (0x0040 - 0x0008)
struct FJackDataTableMeosiSlotScenarioPattern : public FTableRowBase
{
	int                                                Route;                                                    // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Group;                                                    // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Ratio;                                                    // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                OrderInPattern;                                           // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                OrderInGroup;                                             // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	TArray<bool>                                       HandTorFArray;                                            // 0x0020(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FJackDataTableMeosiSlotScenarioPatternBlock> ActStructArray;                                           // 0x0030(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotScenarioSlime
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableMeosiSlotScenarioSlime : public FTableRowBase
{
	int                                                Slime;                                                    // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Peach;                                                    // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Metal;                                                    // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotScenarioSubAct>          SubAct;                                                   // 0x0014(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	int                                                Probability;                                              // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotKeySeType>               KeySeType;                                                // 0x001C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x001D(0x0003) MISSED OFFSET
	int                                                KeySeProb;                                                // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotScenarioHazure
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotScenarioHazure : public FTableRowBase
{
	TEnumAsByte<EJackMeosiSlotScenarioHazureKind>      ScenarioKind;                                             // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotScenarioSubAct>          SubAct;                                                   // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	int                                                Probability;                                              // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotKeySeType>               KeySeType;                                                // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	int                                                KeySeProb;                                                // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotScenarioTBox
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableMeosiSlotScenarioTBox : public FTableRowBase
{
	TEnumAsByte<EJackMeosiSlotScenarioTBoxKind>        ScenarioKind;                                             // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotScenarioSubAct>          SubAct;                                                   // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	int                                                Probability;                                              // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotKeySeType>               KeySeType;                                                // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	int                                                KeySeProb;                                                // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotScenarioTBoxOpenTiming>  OpenTiming;                                               // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotScenarioMamono
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotScenarioMamono : public FTableRowBase
{
	TEnumAsByte<EJackMeosiSlotScenarioMamonoKind>      ScenarioKind;                                             // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotScenarioSubAct>          SubAct;                                                   // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	int                                                Probability;                                              // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotKeySeType>               KeySeType;                                                // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	int                                                KeySeProb;                                                // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotScenario
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotScenario : public FTableRowBase
{
	int                                                ScenarioKind;                                             // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SubAct;                                                   // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Probability;                                              // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotLottery
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotLottery : public FTableRowBase
{
	TArray<int>                                        EventLottery;                                             // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotRareHandBonusLottery
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotRareHandBonusLottery : public FTableRowBase
{
	TArray<int>                                        EventProbability;                                         // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotRareHandLottery
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotRareHandLottery : public FTableRowBase
{
	TArray<int>                                        EventProbability;                                         // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotHsHandLottery
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotHsHandLottery : public FTableRowBase
{
	TArray<int>                                        HsHandProbability;                                        // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotLowestFeedNumberProbability
// 0x0040 (0x0048 - 0x0008)
struct FJackDataTableMeosiSlotLowestFeedNumberProbability : public FTableRowBase
{
	int                                                Feed_Stock_1;                                             // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Feed_Stock_2;                                             // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Feed_Stock_3;                                             // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Feed_Stock_4;                                             // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Feed_Stock_5;                                             // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Feed_Stock_6;                                             // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Feed_Stock_7;                                             // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Feed_Stock_8;                                             // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Feed_NoStock_1;                                           // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Feed_NoStock_2;                                           // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Feed_NoStock_3;                                           // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Feed_NoStock_4;                                           // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Feed_NoStock_5;                                           // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Feed_NoStock_6;                                           // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Feed_NoStock_7;                                           // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Feed_NoStock_8;                                           // 0x0044(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotSettingValueProbability
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableMeosiSlotSettingValueProbability : public FTableRowBase
{
	int                                                SettingValue1;                                            // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SettingValue2;                                            // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SettingValue3;                                            // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SettingValue4;                                            // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SettingValue5;                                            // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SettingValue6;                                            // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SettingValue7;                                            // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotMachine
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotMachine : public FTableRowBase
{
	TEnumAsByte<EJackMeosiSlotMachineGroup>            Group;                                                    // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotMachineCondition
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableMeosiSlotMachineCondition : public FTableRowBase
{
	int                                                Level_2;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Level_3;                                                  // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Level_4;                                                  // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Level_5;                                                  // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Level_6;                                                  // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotMachineConditionMessage
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotMachineConditionMessage : public FTableRowBase
{
	int                                                Percent;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FName                                       TextID;                                                   // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotMonsterBehaviorProbability
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotMonsterBehaviorProbability : public FTableRowBase
{
	int                                                Attack_2;                                                 // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Attack_3;                                                 // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Attack_4;                                                 // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotMonsterEncounterProbability
// 0x0050 (0x0058 - 0x0008)
struct FJackDataTableMeosiSlotMonsterEncounterProbability : public FTableRowBase
{
	int                                                Game_2;                                                   // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_3;                                                   // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_4;                                                   // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_5;                                                   // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_6;                                                   // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_7;                                                   // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_8;                                                   // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_9;                                                   // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_10;                                                  // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_11;                                                  // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_12;                                                  // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_13;                                                  // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_14;                                                  // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_15;                                                  // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_16;                                                  // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_17;                                                  // 0x0044(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_18;                                                  // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_19;                                                  // 0x004C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_20;                                                  // 0x0050(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Game_21;                                                  // 0x0054(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotMonsterList
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotMonsterList : public FTableRowBase
{
	struct FName                                       Key;                                                      // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Probability;                                              // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotMonsterParam
// 0x00D0 (0x00D8 - 0x0008)
struct FJackDataTableMeosiSlotMonsterParam : public FTableRowBase
{
	struct FString                                     NameText;                                                 // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	bool                                               RareFlag;                                                 // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterBehaviorPattern>  Pattern;                                                  // 0x0019(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x001A(0x0002) MISSED OFFSET
	int                                                Attack1_Damage;                                           // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotAttackClass>             Attack1_Class;                                            // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotAttackEffect>            Attack1_Effect;                                           // 0x0021(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0022(0x0006) MISSED OFFSET
	struct FName                                       Attack1_TextID;                                           // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Attack2_Damage;                                           // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotAttackClass>             Attack2_Class;                                            // 0x0034(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotAttackEffect>            Attack2_Effect;                                           // 0x0035(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0036(0x0002) MISSED OFFSET
	struct FName                                       Attack2_TextID;                                           // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Attack3_Damage;                                           // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotAttackClass>             Attack3_Class;                                            // 0x0044(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotAttackEffect>            Attack3_Effect;                                           // 0x0045(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0046(0x0002) MISSED OFFSET
	struct FName                                       Attack3_TextID;                                           // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Attack4_Damage;                                           // 0x0050(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotAttackClass>             Attack4_Class;                                            // 0x0054(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotAttackEffect>            Attack4_Effect;                                           // 0x0055(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0056(0x0002) MISSED OFFSET
	struct FName                                       Attack4_TextID;                                           // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Avoidance;                                                // 0x0060(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FName                                       Avoidance_TextID;                                         // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BaseHp;                                                   // 0x0070(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                HpRange;                                                  // 0x0074(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPhysicalResistance;                                      // 0x0078(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMagicalResistance;                                       // 0x0079(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Rank;                                                     // 0x007A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x1];                                       // 0x007B(0x0001) MISSED OFFSET
	int                                                LvUp;                                                     // 0x007C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterSize>             Size;                                                     // 0x0080(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData08[0x18];                                      // 0x0081(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMeosiSlotMonsterParam.PartyTexture
	unsigned char                                      UnknownData09[0x18];                                      // 0x00A0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMeosiSlotMonsterParam.EnemyTexture
	unsigned char                                      UnknownData10[0x18];                                      // 0x00B8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMeosiSlotMonsterParam.IconTexture
	TEnumAsByte<EJackMeosiSlotMonsterID>               MonsterID;                                                // 0x00D0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x7];                                       // 0x00D1(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotMonsterRankMap
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableMeosiSlotMonsterRankMap : public FTableRowBase
{
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv1_6;                                                    // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv6_11;                                                   // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv11_16;                                                  // 0x000A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv16_21;                                                  // 0x000B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv21_26;                                                  // 0x000C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv26_31;                                                  // 0x000D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv31_36;                                                  // 0x000E(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv36_41;                                                  // 0x000F(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv41_46;                                                  // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv46_51;                                                  // 0x0011(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv51_56;                                                  // 0x0012(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv56_61;                                                  // 0x0013(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv61_66;                                                  // 0x0014(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv66_71;                                                  // 0x0015(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv71_76;                                                  // 0x0016(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv76_81;                                                  // 0x0017(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv81_86;                                                  // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv86_91;                                                  // 0x0019(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv91_96;                                                  // 0x001A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotMonsterRank>             Lv96_100;                                                 // 0x001B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotMonsterRankSelectProbability
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotMonsterRankSelectProbability : public FTableRowBase
{
	int                                                Probability;                                              // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotMonsterRecruitProbability
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableMeosiSlotMonsterRecruitProbability : public FTableRowBase
{
	float                                              PartyNum_1;                                               // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PartyNum_2;                                               // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PartyNum_3;                                               // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PartyNum_4;                                               // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PartyNum_5;                                               // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PartyNum_6;                                               // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PartyNum_7;                                               // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PartyNum_8;                                               // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PartyNum_9;                                               // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PartyNum_10;                                              // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PartyNum_11;                                              // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PartyNum_Over;                                            // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotMonsterResource
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableMeosiSlotMonsterResource : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMeosiSlotMonsterResource.PanelTexture
	unsigned char                                      UnknownData01[0x18];                                      // 0x0020(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMeosiSlotMonsterResource.BattleTexture
};

// ScriptStruct JackGame.JackDataTableMeosiSlotPamphlet
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableMeosiSlotPamphlet : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMeosiSlotPamphlet.Texture
};

// ScriptStruct JackGame.JackDataTableMeosiSlotPayingOut
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotPayingOut : public FTableRowBase
{
	int                                                Rate001;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Rate010;                                                  // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Rate100;                                                  // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMeosiSlotFireLampColor>           LampColor;                                                // 0x0014(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotProbability
// 0x0048 (0x0050 - 0x0008)
struct FJackDataTableMeosiSlotProbability : public FTableRowBase
{
	int                                                Replay;                                                   // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Plum_Weak;                                                // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Plum_Strong;                                              // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WaterMelon_Weak;                                          // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WaterMelon_Strong;                                        // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Weak;                                              // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Strong;                                            // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Triple;                                            // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Center;                                            // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Bel;                                                      // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Weak;                                              // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Strong;                                            // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Most_Strong;                                       // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ChanceSpot_Weak;                                          // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ChanceSpot_Strong;                                        // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Reach;                                                    // 0x0044(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BigBonus;                                                 // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SpecialBonus;                                             // 0x004C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotReelArray
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotReelArray : public FTableRowBase
{
	TArray<TEnumAsByte<EJackMeosiSlotPicture>>         Elements;                                                 // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotReelLamp
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotReelLamp : public FTableRowBase
{
	bool                                               LT;                                                       // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               CT;                                                       // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               RT;                                                       // 0x000A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               LM;                                                       // 0x000B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               CM;                                                       // 0x000C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               RM;                                                       // 0x000D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               LB;                                                       // 0x000E(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               CB;                                                       // 0x000F(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               RB;                                                       // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              Time;                                                     // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotReelTexture
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableMeosiSlotReelTexture : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMeosiSlotReelTexture.BaseTexture
	unsigned char                                      UnknownData01[0x18];                                      // 0x0020(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMeosiSlotReelTexture.MaskTexture
};

// ScriptStruct JackGame.JackDataTableMeosiSlotSE
// 0x0048 (0x0050 - 0x0008)
struct FJackDataTableMeosiSlotSE : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMeosiSlotSE.SeJapan
	unsigned char                                      UnknownData01[0x18];                                      // 0x0020(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMeosiSlotSE.SeAsia
	unsigned char                                      UnknownData02[0x18];                                      // 0x0038(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMeosiSlotSE.SeOthers
};

// ScriptStruct JackGame.JackDataTableMeosiSlotSimulation
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotSimulation : public FTableRowBase
{
	float                                              WinningProbability;                                       // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ExactlyPressProbability;                                  // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotSpecialBonusRisingProbability
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMeosiSlotSpecialBonusRisingProbability : public FTableRowBase
{
	int                                                Bonus;                                                    // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ExactlyPress;                                             // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotStockNumber
// 0x0090 (0x0098 - 0x0008)
struct FJackDataTableMeosiSlotStockNumber : public FTableRowBase
{
	int                                                WaterMelon_Weak_2;                                        // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WaterMelon_Weak_3;                                        // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WaterMelon_Weak_4;                                        // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WaterMelon_Strong_2;                                      // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WaterMelon_Strong_3;                                      // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WaterMelon_Strong_4;                                      // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Weak_2;                                            // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Weak_3;                                            // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Weak_4;                                            // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Strong_2;                                          // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Strong_3;                                          // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Strong_4;                                          // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Triple_2;                                          // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Triple_3;                                          // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Triple_4;                                          // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Center_2;                                          // 0x0044(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Center_3;                                          // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Center_4;                                          // 0x004C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Weak_2;                                            // 0x0050(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Weak_3;                                            // 0x0054(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Weak_4;                                            // 0x0058(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Strong_2;                                          // 0x005C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Strong_3;                                          // 0x0060(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Strong_4;                                          // 0x0064(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Most_Strong_2;                                     // 0x0068(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Most_Strong_3;                                     // 0x006C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Most_Strong_4;                                     // 0x0070(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ChanceSpot_Weak_2;                                        // 0x0074(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ChanceSpot_Weak_3;                                        // 0x0078(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ChanceSpot_Weak_4;                                        // 0x007C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ChanceSpot_Strong_2;                                      // 0x0080(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ChanceSpot_Strong_3;                                      // 0x0084(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ChanceSpot_Strong_4;                                      // 0x0088(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Reach_2;                                                  // 0x008C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Reach_3;                                                  // 0x0090(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Reach_4;                                                  // 0x0094(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMeosiSlotTransitionProbability_CZ
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotTransitionProbability_CZ : public FTableRowBase
{
	int                                                Default;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                High;                                                     // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Heaven;                                                   // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotTransitionProbability_Hand
// 0x00E8 (0x00F0 - 0x0008)
struct FJackDataTableMeosiSlotTransitionProbability_Hand : public FTableRowBase
{
	int                                                Miss_Default;                                             // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Miss_High;                                                // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Miss_Heaven;                                              // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Replay_Default;                                           // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Replay_High;                                              // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Replay_Heaven;                                            // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Plum_Weak_Default;                                        // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Plum_Weak_High;                                           // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Plum_Weak_Heaven;                                         // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Plum_Strong_Default;                                      // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Plum_Strong_High;                                         // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Plum_Strong_Heaven;                                       // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WaterMelon_Weak_Default;                                  // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WaterMelon_Weak_High;                                     // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WaterMelon_Weak_Heaven;                                   // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WaterMelon_Strong_Default;                                // 0x0044(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WaterMelon_Strong_High;                                   // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WaterMelon_Strong_Heaven;                                 // 0x004C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Weak_Default;                                      // 0x0050(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Weak_High;                                         // 0x0054(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Weak_Heaven;                                       // 0x0058(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Strong_Default;                                    // 0x005C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Strong_High;                                       // 0x0060(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Strong_Heaven;                                     // 0x0064(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Triple_Default;                                    // 0x0068(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Triple_High;                                       // 0x006C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Triple_Heaven;                                     // 0x0070(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Center_Default;                                    // 0x0074(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Center_High;                                       // 0x0078(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Cherry_Center_Heaven;                                     // 0x007C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Bel_Default;                                              // 0x0080(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Bel_High;                                                 // 0x0084(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Bel_Heaven;                                               // 0x0088(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Weak_Default;                                      // 0x008C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Weak_High;                                         // 0x0090(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Weak_Heaven;                                       // 0x0094(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Strong_Default;                                    // 0x0098(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Strong_High;                                       // 0x009C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Strong_Heaven;                                     // 0x00A0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Most_Strong_Default;                               // 0x00A4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Most_Strong_High;                                  // 0x00A8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Chance_Most_Strong_Heaven;                                // 0x00AC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ChanceSpot_Weak_Default;                                  // 0x00B0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ChanceSpot_Weak_High;                                     // 0x00B4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ChanceSpot_Weak_Heaven;                                   // 0x00B8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ChanceSpot_Strong_Default;                                // 0x00BC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ChanceSpot_Strong_High;                                   // 0x00C0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ChanceSpot_Strong_Heaven;                                 // 0x00C4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Reach_Default;                                            // 0x00C8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Reach_High;                                               // 0x00CC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Reach_Heaven;                                             // 0x00D0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BigBonus_Default;                                         // 0x00D4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BigBonus_High;                                            // 0x00D8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                BigBonus_Heaven;                                          // 0x00DC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SpecialBonus_Default;                                     // 0x00E0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SpecialBonus_High;                                        // 0x00E4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SpecialBonus_Heaven;                                      // 0x00E8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x00EC(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotTransitionProbability_SettingValue
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMeosiSlotTransitionProbability_SettingValue : public FTableRowBase
{
	int                                                Default;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                High;                                                     // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Heaven;                                                   // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotTreasureBoxSelectProbability
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableMeosiSlotTreasureBoxSelectProbability : public FTableRowBase
{
	int                                                Pot;                                                      // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Wood;                                                     // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Red;                                                      // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Black;                                                    // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Gold;                                                     // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMeosiSlotVariableCeiling
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableMeosiSlotVariableCeiling : public FTableRowBase
{
	int                                                Val10;                                                    // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Val20;                                                    // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Val30;                                                    // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Val40;                                                    // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Val50;                                                    // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Val60;                                                    // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Val70;                                                    // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Val80;                                                    // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Val90;                                                    // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Val99;                                                    // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMiniGameJackPotTowerSelectRate
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMiniGameJackPotTowerSelectRate : public FTableRowBase
{
	int                                                Slot;                                                     // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Roulette;                                                 // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMiniGameJackPotTowerRate
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMiniGameJackPotTowerRate : public FTableRowBase
{
	int                                                OneCoin;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TenCoin;                                                  // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                HandredCoin;                                              // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMiniGameJackPotNPC
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMiniGameJackPotNPC : public FTableRowBase
{
	float                                              Percent;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMiniGameJackPotTowerAdditional
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableMiniGameJackPotTowerAdditional : public FTableRowBase
{
	int                                                AdditionalBase;                                           // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FractionMin01;                                            // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FractionMax01;                                            // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FractionMin02;                                            // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FractionMax02;                                            // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMiniGameJackPotTowerCoin
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMiniGameJackPotTowerCoin : public FTableRowBase
{
	int                                                Coin;                                                     // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMiniGameJackPotRouletteBetFraction
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMiniGameJackPotRouletteBetFraction : public FTableRowBase
{
	float                                              BetFraction;                                              // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Coin;                                                     // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMiniGameJackPotFluctuations
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMiniGameJackPotFluctuations : public FTableRowBase
{
	float                                              Lower;                                                    // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Upper;                                                    // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMiniGameJackPotRate
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMiniGameJackPotRate : public FTableRowBase
{
	float                                              BetFraction;                                              // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MachineFraction;                                          // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DividendMax;                                              // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DividendMin;                                              // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMiniGameJackPotProbability2
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMiniGameJackPotProbability2 : public FTableRowBase
{
	float                                              Percent;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMiniGameJackPotState
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableMiniGameJackPotState : public FTableRowBase
{
	float                                              SlotFraction;                                             // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RouletteFraction;                                         // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                JPLevel1;                                                 // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                JPLevel2;                                                 // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                JPLevel3;                                                 // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                JPLevel4;                                                 // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                JPLevel5;                                                 // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMiniGameJackPotComp
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMiniGameJackPotComp : public FTableRowBase
{
	int                                                Coin;                                                     // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMiniGameJackPotProbability
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMiniGameJackPotProbability : public FTableRowBase
{
	int                                                BasePercent;                                              // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Fraction;                                                 // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMiniGameJackPotPayoutData
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMiniGameJackPotPayoutData : public FTableRowBase
{
	int                                                MinimumCoin;                                              // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaxCoin;                                                  // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableModeChangeType
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableModeChangeType : public FTableRowBase
{
	struct FName                                       JumpPointID;                                              // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bChangeTo2D;                                              // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackLoadingScreen>                    LoadingScreenType;                                        // 0x0011(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0012(0x0006) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMonsterAppear
// 0x0058 (0x0060 - 0x0008)
struct FJackDataTableMonsterAppear : public FTableRowBase
{
	float                                              VerticalWidth;                                            // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              VerticalWidth_Sleep;                                      // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Width;                                                    // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DepthAdjustment;                                          // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CameraFOV;                                                // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StartLength;                                              // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StartHeight;                                              // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StartHeight_Sleep;                                        // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EndHeight;                                                // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EndHeight_Sleep;                                          // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PointOfGazeDepth;                                         // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StartPointOfGazeHeight;                                   // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StartPointOfGazeHeight_Sleep;                             // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EndPointOfGazeHeight;                                     // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EndPointOfGazeHeight_Sleep;                               // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bException_arrangement;                                   // 0x0044(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	float                                              ExceptionLocationX;                                       // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ExceptionLocationY;                                       // 0x004C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ExceptionLocationZ;                                       // 0x0050(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ExceptionRotateYaw;                                       // 0x0054(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ExceptionCameraRotateYaw;                                 // 0x0058(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMonsterDeploySerialize
// 0x0000 (0x0228 - 0x0228)
struct FJackDataTableMonsterDeploySerialize : public FJackDataTableMonsterDeploy
{

};

// ScriptStruct JackGame.JackDataTableMonsterFieldAI
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableMonsterFieldAI : public FTableRowBase
{
	TEnumAsByte<EJackMonsterMoveType>                  MoveType;                                                 // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMonsterMoveMethod>                MoveMethod;                                               // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	float                                              FieldBasicSpeed;                                          // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMonsterMoveSpeed>                 ChaseSpeed;                                               // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMonsterMoveSpeed>                 EscapeSpeed;                                              // 0x0011(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMonsterMoveSpeed>                 RageSpeed;                                                // 0x0012(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMonsterSearchType>                SearchType;                                               // 0x0013(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SearchRadius;                                             // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SearchAngle;                                              // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SpreadDistance;                                           // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSearchStandingPlayer;                                    // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bTakeWarnning;                                            // 0x0021(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMonsterMovementWeak>              MovementWeak;                                             // 0x0022(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMonsterMovementStrong>            MovementStrong;                                           // 0x0023(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMonsterBowgunResonse>             BowgunResponse;                                           // 0x0024(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
	int                                                WeakMovementThreshold;                                    // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AppealFrequency;                                          // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WakeUpRate;                                               // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMonsterFieldMovingBounds
// 0x0040 (0x0048 - 0x0008)
struct FJackDataTableMonsterFieldMovingBounds : public FTableRowBase
{
	float                                              WanderringRadius;                                         // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WanderringMoveDistance;                                   // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EscapeMoveDistance;                                       // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RushMoveDistance;                                         // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ChaseRadiusFromFindLocation;                              // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ChaseRadiusFromPopLocation;                               // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ChaseRadiusFromFindTargetLocation;                        // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MakikomiCylinderRadius;                                   // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MakikomiCylinderHeight;                                   // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ProductionCostTotalLimit1;                                // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ProductionCostTotalLimit2;                                // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ProductionCostTotalLimit3;                                // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ProductionCostTotalLimit4;                                // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ProductionCostTotalLimit5;                                // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ProductionCostTotalLimit6;                                // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackMonsterMetalEncountInfo
// 0x0010
struct FJackMonsterMetalEncountInfo
{
	struct FName                                       PartyMonsterId;                                           // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PartyMonsterMin;                                          // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PartyMonsterMax;                                          // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMonsterMetalEncount
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableMonsterMetalEncount : public FTableRowBase
{
	float                                              EncountRate;                                              // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<struct FJackMonsterMetalEncountInfo>        PartyMonsters;                                            // 0x0010(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableMonsterPhysicalProperty
// 0x0128 (0x0130 - 0x0008)
struct FJackDataTableMonsterPhysicalProperty : public FTableRowBase
{
	float                                              ScaleX;                                                   // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScaleY;                                                   // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScaleZ;                                                   // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCharacterEffectSize                           CharacterEffectSize;                                      // 0x0014(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCharacterEffectSize                           CharacterEffectSizeByActionCast;                          // 0x0015(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackCharacterEffectSize                           CharacterEffectSizeByActionEffect;                        // 0x0016(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0017(0x0001) MISSED OFFSET
	struct FName                                       LODBoundsID;                                              // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                LODLimitInBattle;                                         // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	struct FName                                       FacialPresetID;                                           // 0x0028(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       VoicePresetID;                                            // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBlockCamera;                                             // 0x0038(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bVariantForm;                                             // 0x0039(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x003A(0x0002) MISSED OFFSET
	int                                                ProductionCost;                                           // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BasicSpeed;                                               // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMonsterMoveSpeed>                 RunSpeed;                                                 // 0x0044(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	float                                              BackBasicSpeed;                                           // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMonsterMoveSpeed>                 BackRunSpeed;                                             // 0x004C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x3];                                       // 0x004D(0x0003) MISSED OFFSET
	float                                              AcceptanceRadius;                                         // 0x0050(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIgnoreTakePosition;                                      // 0x0054(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIgnoreTurnWhenLookAt;                                    // 0x0055(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIgnoreDamageDirection;                                   // 0x0056(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIgnoreActionDirection;                                   // 0x0057(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseBackWalk;                                             // 0x0058(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x0059(0x0003) MISSED OFFSET
	float                                              BackWalkAngleThreshold;                                   // 0x005C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              BackWalkDistanceThreshold;                                // 0x0060(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GroupRadius;                                              // 0x0064(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageS_BlendRate;                                        // 0x0068(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageS_BlendRate2;                                       // 0x006C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              IdleToRunDuration;                                        // 0x0070(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RunningTurnRate;                                          // 0x0074(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EscapeTurnSpeedMultiplier;                                // 0x0078(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
	struct FName                                       Motion_EncountByNakamaYobi;                               // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAlwaysNavWalking;                                        // 0x0088(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x0089(0x0003) MISSED OFFSET
	float                                              NavWalkingDistance;                                       // 0x008C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FootIKDisableDistance;                                    // 0x0090(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AttitudeDisableDistance;                                  // 0x0094(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AnimDynamicsDisableDistance;                              // 0x0098(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AlwaysUpdatePoseAndRefreshBoneDistance;                   // 0x009C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLeaveMeshWhenDead;                                       // 0x00A0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLeaveCollisionWhenDead;                                  // 0x00A1(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x2];                                       // 0x00A2(0x0002) MISSED OFFSET
	float                                              AppealStartTimeMin;                                       // 0x00A4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              AppealStartTimeMax;                                       // 0x00A8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMonsterBodyAttribute>             BodyAttribute;                                            // 0x00AC(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x3];                                       // 0x00AD(0x0003) MISSED OFFSET
	struct FName                                       BodyMonsterId;                                            // 0x00B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              OffsetLengthOf3dWidget;                                   // 0x00B8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIgnoreAlphabetOrder;                                     // 0x00BC(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x3];                                       // 0x00BD(0x0003) MISSED OFFSET
	float                                              ActionCameraLengthAdjust;                                 // 0x00C0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRelativePosition;                                        // 0x00C4(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackMatineeRenkeiMonsterSize>         MatineeRenkeiMonsterSize;                                 // 0x00C5(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x2];                                       // 0x00C6(0x0002) MISSED OFFSET
	float                                              KnockBackSmallRate;                                       // 0x00C8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              KnockBackNormalRate;                                      // 0x00CC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ScoreRectRedSocket;                                       // 0x00D0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreRectRedW;                                            // 0x00D8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreRectRedH;                                            // 0x00DC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreRectRedOffsetZ;                                      // 0x00E0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData12[0x4];                                       // 0x00E4(0x0004) MISSED OFFSET
	struct FName                                       ScoreRectBlueSocket;                                      // 0x00E8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreRectBlueW;                                           // 0x00F0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreRectBlueH;                                           // 0x00F4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreRectBlueOffsetZ;                                     // 0x00F8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x00FC(0x0004) MISSED OFFSET
	struct FName                                       ScoreRectGreenSocket;                                     // 0x0100(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreRectGreenW;                                          // 0x0108(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreRectGreenH;                                          // 0x010C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreRectGreenOffsetZ;                                    // 0x0110(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData14[0x4];                                       // 0x0114(0x0004) MISSED OFFSET
	struct FName                                       ScoreRectYellowSocket;                                    // 0x0118(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreRectYellowW;                                         // 0x0120(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreRectYellowH;                                         // 0x0124(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ScoreRectYellowOffsetZ;                                   // 0x0128(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData15[0x4];                                       // 0x012C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackMonsterSibariChangeParameterInfo
// 0x0008
struct FJackMonsterSibariChangeParameterInfo
{
	EJackMonsterSibariParameterTarget                  Target;                                                   // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackMonsterSibariParameterOperator                Operator;                                                 // 0x0001(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	float                                              Value;                                                    // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMonsterSibariParameter
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableMonsterSibariParameter : public FTableRowBase
{
	TArray<struct FJackMonsterSibariChangeParameterInfo> ChangeParameters;                                         // 0x0008(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableMonsterZukan
// 0x0238 (0x0240 - 0x0008)
struct FJackDataTableMonsterZukan : public FTableRowBase
{
	struct FName                                       Name;                                                     // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SyuukaiID;                                                // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SortTsuyosa;                                              // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Sort50on;                                                 // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
	struct FName                                       MonsterIDA;                                               // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MonsterIDB;                                               // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MonsterIDC;                                               // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RendouID1;                                                // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RendouID2;                                                // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RendouID3;                                                // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RendouID4;                                                // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RendouID5;                                                // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RendouID6;                                                // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RendouMonsterID1;                                         // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RendouMonsterID2;                                         // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RendouMonsterID3;                                         // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RendouMonsterID4;                                         // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RendouMonsterID5;                                         // 0x0088(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RendouMonsterID6;                                         // 0x0090(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku1A;                                                // 0x0098(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku2A;                                                // 0x00A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku3A;                                                // 0x00A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku4A;                                                // 0x00B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku5A;                                                // 0x00B8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku6A;                                                // 0x00C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku7A;                                                // 0x00C8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku8A;                                                // 0x00D0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku9A;                                                // 0x00D8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku10A;                                               // 0x00E0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku1S;                                                // 0x00E8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku2S;                                                // 0x00F0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku3S;                                                // 0x00F8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku4S;                                                // 0x0100(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku5S;                                                // 0x0108(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku6S;                                                // 0x0110(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku7S;                                                // 0x0118(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku8S;                                                // 0x0120(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku9S;                                                // 0x0128(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku10S;                                               // 0x0130(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku1B;                                                // 0x0138(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku2B;                                                // 0x0140(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku3B;                                                // 0x0148(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku4B;                                                // 0x0150(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku5B;                                                // 0x0158(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku6B;                                                // 0x0160(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku7B;                                                // 0x0168(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku8B;                                                // 0x0170(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku9B;                                                // 0x0178(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku10B;                                               // 0x0180(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku1C;                                                // 0x0188(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku2C;                                                // 0x0190(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku3C;                                                // 0x0198(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku4C;                                                // 0x01A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku5C;                                                // 0x01A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku6C;                                                // 0x01B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku7C;                                                // 0x01B8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku8C;                                                // 0x01C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku9C;                                                // 0x01C8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Seisoku10C;                                               // 0x01D0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ToubatuRendouID1;                                         // 0x01D8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ToubatuRendouID2;                                         // 0x01E0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ToubatuRendouID3;                                         // 0x01E8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ToubatuRendouID4;                                         // 0x01F0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ToubatuRendouID5;                                         // 0x01F8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ToubatuRendouID6;                                         // 0x0200(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ToubatuRendouID7;                                         // 0x0208(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ToubatuRendouID8;                                         // 0x0210(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ToubatuRendouID9;                                         // 0x0218(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ToubatuRendouID10;                                        // 0x0220(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0228(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMonsterZukan.Zukan2DTexture
};

// ScriptStruct JackGame.JackDataTableMonsterZukanMemo
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableMonsterZukanMemo : public FTableRowBase
{
	struct FName                                       Memo;                                                     // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMonsterZukanSeisokuti
// 0x0640 (0x0648 - 0x0008)
struct FJackDataTableMonsterZukanSeisokuti : public FTableRowBase
{
	struct FName                                       Mon_A_01;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_02;                                                 // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_03;                                                 // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_04;                                                 // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_05;                                                 // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_06;                                                 // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_07;                                                 // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_08;                                                 // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_09;                                                 // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_11;                                                 // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_12;                                                 // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_13;                                                 // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_14;                                                 // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_15;                                                 // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_16;                                                 // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_17;                                                 // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_18;                                                 // 0x0088(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_19;                                                 // 0x0090(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_20;                                                 // 0x0098(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_21;                                                 // 0x00A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_22;                                                 // 0x00A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_23;                                                 // 0x00B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_24;                                                 // 0x00B8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_25;                                                 // 0x00C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_26;                                                 // 0x00C8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_27;                                                 // 0x00D0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_28;                                                 // 0x00D8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_29;                                                 // 0x00E0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_30;                                                 // 0x00E8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_31;                                                 // 0x00F0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_32;                                                 // 0x00F8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_33;                                                 // 0x0100(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_34;                                                 // 0x0108(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_35;                                                 // 0x0110(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_36;                                                 // 0x0118(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_37;                                                 // 0x0120(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_38;                                                 // 0x0128(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_39;                                                 // 0x0130(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_40;                                                 // 0x0138(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_A_41;                                                 // 0x0140(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_01;                                                 // 0x0148(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_02;                                                 // 0x0150(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_03;                                                 // 0x0158(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_04;                                                 // 0x0160(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_05;                                                 // 0x0168(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_06;                                                 // 0x0170(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_07;                                                 // 0x0178(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_08;                                                 // 0x0180(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_09;                                                 // 0x0188(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_11;                                                 // 0x0190(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_12;                                                 // 0x0198(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_13;                                                 // 0x01A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_14;                                                 // 0x01A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_15;                                                 // 0x01B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_16;                                                 // 0x01B8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_17;                                                 // 0x01C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_18;                                                 // 0x01C8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_19;                                                 // 0x01D0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_20;                                                 // 0x01D8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_21;                                                 // 0x01E0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_22;                                                 // 0x01E8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_23;                                                 // 0x01F0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_24;                                                 // 0x01F8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_25;                                                 // 0x0200(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_26;                                                 // 0x0208(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_27;                                                 // 0x0210(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_28;                                                 // 0x0218(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_29;                                                 // 0x0220(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_30;                                                 // 0x0228(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_31;                                                 // 0x0230(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_32;                                                 // 0x0238(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_33;                                                 // 0x0240(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_34;                                                 // 0x0248(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_35;                                                 // 0x0250(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_36;                                                 // 0x0258(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_37;                                                 // 0x0260(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_38;                                                 // 0x0268(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_39;                                                 // 0x0270(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_40;                                                 // 0x0278(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_S_41;                                                 // 0x0280(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_01;                                                 // 0x0288(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_02;                                                 // 0x0290(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_03;                                                 // 0x0298(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_04;                                                 // 0x02A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_05;                                                 // 0x02A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_06;                                                 // 0x02B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_07;                                                 // 0x02B8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_08;                                                 // 0x02C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_09;                                                 // 0x02C8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_11;                                                 // 0x02D0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_12;                                                 // 0x02D8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_13;                                                 // 0x02E0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_14;                                                 // 0x02E8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_15;                                                 // 0x02F0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_16;                                                 // 0x02F8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_17;                                                 // 0x0300(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_18;                                                 // 0x0308(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_19;                                                 // 0x0310(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_20;                                                 // 0x0318(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_21;                                                 // 0x0320(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_22;                                                 // 0x0328(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_23;                                                 // 0x0330(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_24;                                                 // 0x0338(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_25;                                                 // 0x0340(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_26;                                                 // 0x0348(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_27;                                                 // 0x0350(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_28;                                                 // 0x0358(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_29;                                                 // 0x0360(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_30;                                                 // 0x0368(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_31;                                                 // 0x0370(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_32;                                                 // 0x0378(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_33;                                                 // 0x0380(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_34;                                                 // 0x0388(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_35;                                                 // 0x0390(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_36;                                                 // 0x0398(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_37;                                                 // 0x03A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_38;                                                 // 0x03A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_39;                                                 // 0x03B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_40;                                                 // 0x03B8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_B_41;                                                 // 0x03C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_01;                                                 // 0x03C8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_02;                                                 // 0x03D0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_03;                                                 // 0x03D8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_04;                                                 // 0x03E0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_05;                                                 // 0x03E8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_06;                                                 // 0x03F0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_07;                                                 // 0x03F8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_08;                                                 // 0x0400(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_09;                                                 // 0x0408(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_11;                                                 // 0x0410(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_12;                                                 // 0x0418(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_13;                                                 // 0x0420(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_14;                                                 // 0x0428(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_15;                                                 // 0x0430(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_16;                                                 // 0x0438(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_17;                                                 // 0x0440(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_18;                                                 // 0x0448(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_19;                                                 // 0x0450(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_20;                                                 // 0x0458(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_21;                                                 // 0x0460(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_22;                                                 // 0x0468(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_23;                                                 // 0x0470(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_24;                                                 // 0x0478(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_25;                                                 // 0x0480(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_26;                                                 // 0x0488(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_27;                                                 // 0x0490(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_28;                                                 // 0x0498(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_29;                                                 // 0x04A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_30;                                                 // 0x04A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_31;                                                 // 0x04B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_32;                                                 // 0x04B8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_33;                                                 // 0x04C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_34;                                                 // 0x04C8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_35;                                                 // 0x04D0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_36;                                                 // 0x04D8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_37;                                                 // 0x04E0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_38;                                                 // 0x04E8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_39;                                                 // 0x04F0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_40;                                                 // 0x04F8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_41;                                                 // 0x0500(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_42;                                                 // 0x0508(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_43;                                                 // 0x0510(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_44;                                                 // 0x0518(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_45;                                                 // 0x0520(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_46;                                                 // 0x0528(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_47;                                                 // 0x0530(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_48;                                                 // 0x0538(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_49;                                                 // 0x0540(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_50;                                                 // 0x0548(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_51;                                                 // 0x0550(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_52;                                                 // 0x0558(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_53;                                                 // 0x0560(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_54;                                                 // 0x0568(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_55;                                                 // 0x0570(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_56;                                                 // 0x0578(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_57;                                                 // 0x0580(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_58;                                                 // 0x0588(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_59;                                                 // 0x0590(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_60;                                                 // 0x0598(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_61;                                                 // 0x05A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_62;                                                 // 0x05A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_63;                                                 // 0x05B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_64;                                                 // 0x05B8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_65;                                                 // 0x05C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_66;                                                 // 0x05C8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_67;                                                 // 0x05D0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_68;                                                 // 0x05D8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_69;                                                 // 0x05E0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_70;                                                 // 0x05E8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_71;                                                 // 0x05F0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_72;                                                 // 0x05F8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_73;                                                 // 0x0600(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_74;                                                 // 0x0608(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_75;                                                 // 0x0610(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_76;                                                 // 0x0618(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_77;                                                 // 0x0620(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_78;                                                 // 0x0628(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_79;                                                 // 0x0630(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_80;                                                 // 0x0638(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Mon_C_81;                                                 // 0x0640(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableNPCImportanceScenari
// 0x0078 (0x0080 - 0x0008)
struct FJackDataTableNPCImportanceScenari : public FTableRowBase
{
	struct FName                                       NpcId_01;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NpcId_02;                                                 // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NpcId_03;                                                 // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NpcId_04;                                                 // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NpcId_05;                                                 // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NpcId_06;                                                 // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NpcId_07;                                                 // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NpcId_08;                                                 // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NpcId_09;                                                 // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NPCID_11;                                                 // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NPCID_12;                                                 // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NPCID_13;                                                 // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NPCID_14;                                                 // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NPCID_15;                                                 // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NPCID_16;                                                 // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableNPCInterruptControl
// 0x0050 (0x0058 - 0x0008)
struct FJackDataTableNPCInterruptControl : public FTableRowBase
{
	bool                                               bPermitToTalk;                                            // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPermitToTalkAnimation;                                   // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPermitToReaction;                                        // 0x000A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPermitUso;                                               // 0x000B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackNPCTalkGazeMode>                  TalkGazeMode;                                             // 0x000C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
	unsigned char                                      UnknownData01[0x18];                                      // 0x000D(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableNPCInterruptControl.TalkAnimation
	unsigned char                                      UnknownData02[0x18];                                      // 0x0028(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableNPCInterruptControl.TalkEndAnimation
	unsigned char                                      UnknownData03[0x18];                                      // 0x0040(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableNPCInterruptControl.TalkEndWaitAnimation
};

// ScriptStruct JackGame.JackDataTableNPCList
// 0x0058 (0x0060 - 0x0008)
struct FJackDataTableNPCList : public FTableRowBase
{
	struct FName                                       DisplayName;                                              // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Scale;                                                    // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackPipipiType>                       PipipiTypeOverride;                                       // 0x0014(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0015(0x0003) MISSED OFFSET
	struct FName                                       UsoType;                                                  // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       AttachmentID1;                                            // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackNPCAttachmentType>                AttachmentType1;                                          // 0x0028(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
	struct FName                                       AttachmentID2;                                            // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackNPCAttachmentType>                AttachmentType2;                                          // 0x0038(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	struct FName                                       AttachmentID3;                                            // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackNPCAttachmentType>                AttachmentType3;                                          // 0x0048(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0049(0x0007) MISSED OFFSET
	struct FName                                       AttachmentID4;                                            // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackNPCAttachmentType>                AttachmentType4;                                          // 0x0058(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0059(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableNPCReactionAnimation
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableNPCReactionAnimation : public FTableRowBase
{
	class UAnimMontage*                                AnimMontage;                                              // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              RotateSpeed;                                              // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableNPCReaction
// 0x0150 (0x0158 - 0x0008)
struct FJackDataTableNPCReaction : public FTableRowBase
{
	bool                                               bOnlyNormalAnimation;                                     // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEscapePlayer;                                            // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x000A(0x0006) MISSED OFFSET
	struct FString                                     EscapePlayerFukidasi;                                     // 0x0010(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	bool                                               bEscapeObject;                                            // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	struct FString                                     EscapeObjectFukidasi;                                     // 0x0028(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	bool                                               bAvoidPlayer;                                             // 0x0038(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0039(0x0007) MISSED OFFSET
	struct FString                                     AvoidFukidasi;                                            // 0x0040(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              Distance;                                                 // 0x0050(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Angle;                                                    // 0x0054(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Animation;                                                // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     Fukidasi;                                                 // 0x0060(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              LowHP_Distance;                                           // 0x0070(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LowHP_Angle;                                              // 0x0074(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       LowHP_Animation;                                          // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     LowHP_Fukidasi;                                           // 0x0080(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              LowHP_Rate;                                               // 0x0090(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Doku_Distance;                                            // 0x0094(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Doku_Angle;                                               // 0x0098(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	struct FName                                       Doku_Animation;                                           // 0x00A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     Doku_Fukidasi;                                            // 0x00A8(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              Noroi_Distance;                                           // 0x00B8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Noroi_Angle;                                              // 0x00BC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Noroi_Animation;                                          // 0x00C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     Noroi_Fukidasi;                                           // 0x00C8(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              ShyCurse_Distance;                                        // 0x00D8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ShyCurse_Angle;                                           // 0x00DC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ShyCurse_Animation;                                       // 0x00E0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     ShyCurse_Fukidasi;                                        // 0x00E8(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              CrushObject_Distance;                                     // 0x00F8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              CrushObject_Angle;                                        // 0x00FC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CrushObject_Animation;                                    // 0x0100(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     CrushObject_Fukidasi;                                     // 0x0108(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              OpenCloset_Distance;                                      // 0x0118(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              OpenCloset_Angle;                                         // 0x011C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OpenCloset_Animation;                                     // 0x0120(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     OpenCloset_Fukidasi;                                      // 0x0128(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              OpenTreasureBox_Distance;                                 // 0x0138(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              OpenTreasureBox_Angle;                                    // 0x013C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OpenTreasureBox_Animation;                                // 0x0140(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     OpenTreasureBox_Fukidasi;                                 // 0x0148(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableNPCUsoTalk
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableNPCUsoTalk : public FTableRowBase
{
	int                                                UsoRate;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<struct FName>                               UsoTalkTexts;                                             // 0x0010(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableOddEffectClearDamagePer
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableOddEffectClearDamagePer : public FTableRowBase
{
	TArray<float>                                      ClearDamagePerPC;                                         // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<float>                                      ClearDamagePerMonster;                                    // 0x0018(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<float>                                      ClearDamagePerBoss;                                       // 0x0028(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableOddEffectBattleText
// 0x0000 (0x0018 - 0x0018)
struct FJackDataTableOddEffectBattleText : public FJackDataTableActionBattleText
{

};

// ScriptStruct JackGame.JackDataTableOddEffectStatus
// 0x00A0 (0x00A8 - 0x0008)
struct FJackDataTableOddEffectStatus : public FTableRowBase
{
	struct FName                                       OddEffectSlideID;                                         // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OddEffectMotionID;                                        // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OddEffectFacialID;                                        // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OddEffectEffectID;                                        // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ClearDamagePerID;                                         // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       VoiceID;                                                  // 0x0030(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ClearVoiceID;                                             // 0x0038(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalidMove;                                             // 0x0040(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalidCommand;                                          // 0x0041(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalidMemberChange;                                     // 0x0042(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalidCounter;                                          // 0x0043(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalidMikawasi;                                         // 0x0044(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalidTateGuard;                                        // 0x0045(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalidBukiGuard;                                        // 0x0046(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalidKnockBack;                                        // 0x0047(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalidFirstTarget;                                      // 0x0048(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalidSecondTarget;                                     // 0x0049(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bKougekiFriendsFirstTarget;                               // 0x004A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bFriendsSecondTarget;                                     // 0x004B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_BattleEnd;                                         // 0x004C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_RoundEnd;                                          // 0x004D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_Standby;                                           // 0x004E(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_NextFirstAttack;                                   // 0x004F(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_Dead;                                              // 0x0050(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_Zone;                                              // 0x0051(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_Nemuri;                                            // 0x0052(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_Mahi;                                              // 0x0053(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_Konran;                                            // 0x0054(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_Miryou;                                            // 0x0055(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_MouDoku;                                           // 0x0056(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_Yasumi;                                            // 0x0057(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_Asutoron;                                          // 0x0058(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_Fuzai;                                             // 0x0059(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_Fuuin_Jumon;                                       // 0x005A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_Fuuin_Tokugi;                                      // 0x005B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalid_Nemuri;                                          // 0x005C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalid_Mahi;                                            // 0x005D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalid_Konran;                                          // 0x005E(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalid_Miryou;                                          // 0x005F(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalid_Yasumi;                                          // 0x0060(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalid_Asutoron;                                        // 0x0061(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInvalid_Kirapon;                                         // 0x0062(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShareFromBody;                                           // 0x0063(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_ConditionGood;                                     // 0x0064(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClear_ConditionBad;                                      // 0x0065(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackOddEffectConditionType                        ConditionType;                                            // 0x0066(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteClearFlag;                                        // 0x0067(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseCameraWhenExecute;                                    // 0x0068(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x18];                                      // 0x0069(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableOddEffectStatus.OddEffectIcon
	int                                                OddEffectIconDisplayPriority;                             // 0x0088(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData03[0x18];                                      // 0x008C(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableOddEffectStatus.OddEffectExecClass
};

// ScriptStruct JackGame.JackDataTableOddEffect
// 0x00C8 (0x00D0 - 0x0008)
struct FJackDataTableOddEffect : public FTableRowBase
{
	struct FName                                       DisplayName;                                              // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BattleTextName;                                           // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               SubOddEffectIDs;                                          // 0x0018(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       OddEffectTextID;                                          // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackOddEffectCategoryType                         CategoryType;                                             // 0x0030(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0031(0x0003) MISSED OFFSET
	int                                                CategoryPriority;                                         // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackOddEffectOverwriteType                        OverwriteType;                                            // 0x0038(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackOddEffectCalcType                             CalcType;                                                 // 0x0039(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x003A(0x0006) MISSED OFFSET
	struct FName                                       OddEffectStatusID;                                        // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackAttributeParam                                AttributeParamType;                                       // 0x0048(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackAttributeParam                                KougekiAttributeParamType;                                // 0x0049(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x004A(0x0002) MISSED OFFSET
	int                                                KougekiAttributePriority;                                 // 0x004C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackOddEffectApply                                ApplyType;                                                // 0x0050(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackStatusParam                                   ApplyStatusParamType;                                     // 0x0051(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0052(0x0002) MISSED OFFSET
	float                                              ApplyValue;                                               // 0x0054(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InvokeParameter_01;                                       // 0x0058(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              InvokeParameter_02;                                       // 0x005C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       InvokeParameter_String;                                   // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackMonsterRace                                   InvokeMonsterRace;                                        // 0x0068(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackOddEffectInvokeTiming                         InvokeTiming;                                             // 0x0069(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x006A(0x0006) MISSED OFFSET
	struct FName                                       InvokeOddEffectID;                                        // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DisplayInvokeParameter;                                   // 0x0078(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackReferenceParamTarget                          ReferenceParam_Target;                                    // 0x007C(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x3];                                       // 0x007D(0x0003) MISSED OFFSET
	int                                                ReferenceParam_BaseMonster;                               // 0x0080(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ReferenceParam_BaseMin;                                   // 0x0084(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ReferenceParam_BaseMax;                                   // 0x0088(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackReferenceParam                                ReferenceParam_Reference;                                 // 0x008C(0x0001) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x3];                                       // 0x008D(0x0003) MISSED OFFSET
	int                                                ReferenceParam_ReferenceHoseiMin;                         // 0x0090(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ReferenceParam_ReferenceHoseiMax;                         // 0x0094(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ReferenceParam_Random;                                    // 0x0098(0x0004) (Edit, BlueprintVisi, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x009C(0x0004) MISSED OFFSET
	struct FName                                       SlideChangeTargetOddEffectSlideID;                        // 0x00A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SlideChangeRank;                                          // 0x00A8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DurationTurn_Min;                                         // 0x00AC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DurationTurn_Max;                                         // 0x00B0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDurationTurn_ClearTurnStart;                             // 0x00B4(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDurationTurn_ClearTurnStart_SkipTurn;                    // 0x00B5(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bRootTurnOnly;                                            // 0x00B6(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x1];                                       // 0x00B7(0x0001) MISSED OFFSET
	int                                                ExecPriority;                                             // 0x00B8(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bWeaponTuikaKouka;                                        // 0x00BC(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMultipleEnable;                                          // 0x00BD(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackOddEffectTuyosaDisplayType                    TuyosaDisplayType;                                        // 0x00BE(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackOddEffectParameterDisplayType                 InvokeParameterDisplayType;                               // 0x00BF(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               Tags;                                                     // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableOddEffectEffect
// 0x0038 (0x0040 - 0x0008)
struct FJackDataTableOddEffectEffect : public FTableRowBase
{
	bool                                               bResidentResource;                                        // 0x0008(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FName                                       MaterialUpdaterID;                                        // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PcPowerupMaterialID;                                      // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       GeneralNameParameter;                                     // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              GeneralValueParameter;                                    // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData02[0x10];                                      // 0x002C(0x0010) UNKNOWN PROPERTY: ArrayProperty JackGame.JackDataTableOddEffectEffect.EffectClasses
};

// ScriptStruct JackGame.JackDataTableOddEffectFacial
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableOddEffectFacial : public FTableRowBase
{
	int                                                Priority;                                                 // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FName                                       FacialStatusID;                                           // 0x0010(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<bool>                                       Flags;                                                    // 0x0018(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableOddEffectMotion
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableOddEffectMotion : public FTableRowBase
{
	int                                                Priority;                                                 // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FName                                       Motion;                                                   // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<bool>                                       Flags;                                                    // 0x0018(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableOddEffectSlide
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableOddEffectSlide : public FTableRowBase
{
	struct FName                                       SlideControlOddEffectID;                                  // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<float>                                      RankValues;                                               // 0x0010(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       PlusEffectID;                                             // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MinusEffectID;                                            // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableOddEffectTag
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableOddEffectTag : public FTableRowBase
{
	bool                                               Dummy;                                                    // 0x0008(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableOverrideTranslationText
// 0x0088 (0x0090 - 0x0008)
struct FJackDataTableOverrideTranslationText : public FTableRowBase
{
	struct FJackArticleInfo                            ArticleInfo;                                              // 0x0008(0x0088) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableParticleSlotEffect
// 0x0150 (0x0158 - 0x0008)
struct FJackDataTableParticleSlotEffect : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableParticleSlotEffect.DefaultDamageEffect
	unsigned char                                      UnknownData01[0x18];                                      // 0x0020(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableParticleSlotEffect.DefaultDamageEffect2
	unsigned char                                      UnknownData02[0x18];                                      // 0x0038(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableParticleSlotEffect.OverlapDamageSE
	unsigned char                                      UnknownData03[0x18];                                      // 0x0050(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableParticleSlotEffect.OverlapDamageSE2
	unsigned char                                      UnknownData04[0x18];                                      // 0x0068(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableParticleSlotEffect.Slot01
	unsigned char                                      UnknownData05[0x18];                                      // 0x0080(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableParticleSlotEffect.Slot02
	unsigned char                                      UnknownData06[0x18];                                      // 0x0098(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableParticleSlotEffect.Slot03
	unsigned char                                      UnknownData07[0x18];                                      // 0x00B0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableParticleSlotEffect.Slot04
	unsigned char                                      UnknownData08[0x18];                                      // 0x00C8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableParticleSlotEffect.Slot05
	unsigned char                                      UnknownData09[0x18];                                      // 0x00E0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableParticleSlotEffect.Slot06
	unsigned char                                      UnknownData10[0x18];                                      // 0x00F8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableParticleSlotEffect.Slot07
	unsigned char                                      UnknownData11[0x18];                                      // 0x0110(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableParticleSlotEffect.Slot08
	unsigned char                                      UnknownData12[0x18];                                      // 0x0128(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableParticleSlotEffect.Slot09
	unsigned char                                      UnknownData13[0x18];                                      // 0x0140(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableParticleSlotEffect.Slot10
};

// ScriptStruct JackGame.JackDataTableOverrideText
// 0x0008 (0x0038 - 0x0030)
struct FJackDataTableOverrideText : public FJackDataTableText
{
	bool                                               bOverridesText;                                           // 0x0030(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOverridesType;                                           // 0x0031(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOverridesTalkerID;                                       // 0x0032(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOverridesNoTurn;                                         // 0x0033(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOverridesNoTalkStartEvent;                               // 0x0034(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOverridesResetByMapJump;                                 // 0x0035(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOverridesScenarioGuide;                                  // 0x0036(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bOverridesQuestGuide;                                     // 0x0037(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTablePartyTalk
// 0x0248 (0x0250 - 0x0008)
struct FJackDataTablePartyTalk : public FTableRowBase
{
	TEnumAsByte<EJackScenarioID>                       ScenarioID;                                               // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FName                                       MapId;                                                    // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ScenarioFlag;                                             // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackGameFlagCategory>                 SubFlagCategory;                                          // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	struct FName                                       SubFlagName;                                              // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackScenarioWeather>                  Flag_Weather;                                             // 0x0030(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackScenarioTimeZone>                 Flag_TimeZone;                                            // 0x0031(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
	struct FName                                       Flag_Item;                                                // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Flag_TalkCount;                                           // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        PriorityCharacter;                                        // 0x0044(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	struct FName                                       Member1_Serifu;                                           // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Member1_IdleMotion;                                       // 0x0050(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	struct FName                                       Member1_Serifu_Camp;                                      // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Member2_Serifu;                                           // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Member2_IdleMotion;                                       // 0x0068(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
	struct FName                                       Member2_Serifu_Camp;                                      // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Member3_Serifu;                                           // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Member3_IdleMotion;                                       // 0x0080(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x7];                                       // 0x0081(0x0007) MISSED OFFSET
	struct FName                                       Member3_Serifu_Camp;                                      // 0x0088(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Member4_Serifu;                                           // 0x0090(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Member4_IdleMotion;                                       // 0x0098(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x7];                                       // 0x0099(0x0007) MISSED OFFSET
	struct FName                                       Member4_Serifu_Camp;                                      // 0x00A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Member5_Serifu;                                           // 0x00A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Member5_IdleMotion;                                       // 0x00B0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x7];                                       // 0x00B1(0x0007) MISSED OFFSET
	struct FName                                       Member5_Serifu_Camp;                                      // 0x00B8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Member6_Serifu;                                           // 0x00C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Member6_IdleMotion;                                       // 0x00C8(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x7];                                       // 0x00C9(0x0007) MISSED OFFSET
	struct FName                                       Member6_Serifu_Camp;                                      // 0x00D0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Member7_Serifu;                                           // 0x00D8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Member7_IdleMotion;                                       // 0x00E0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x7];                                       // 0x00E1(0x0007) MISSED OFFSET
	struct FName                                       Member7_Serifu_Camp;                                      // 0x00E8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        Guest1_Character;                                         // 0x00F0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x7];                                       // 0x00F1(0x0007) MISSED OFFSET
	struct FName                                       Guest1_Serifu;                                            // 0x00F8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Guest1_IdleMotion;                                        // 0x0100(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData12[0x7];                                       // 0x0101(0x0007) MISSED OFFSET
	struct FName                                       Guest1_Serifu_Camp;                                       // 0x0108(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        Guest2_Character;                                         // 0x0110(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData13[0x7];                                       // 0x0111(0x0007) MISSED OFFSET
	struct FName                                       Guest2_Serifu;                                            // 0x0118(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Guest2_IdleMotion;                                        // 0x0120(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData14[0x7];                                       // 0x0121(0x0007) MISSED OFFSET
	struct FName                                       Guest2_Serifu_Camp;                                       // 0x0128(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        Guest3_Character;                                         // 0x0130(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData15[0x7];                                       // 0x0131(0x0007) MISSED OFFSET
	struct FName                                       Guest3_Serifu;                                            // 0x0138(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Guest3_IdleMotion;                                        // 0x0140(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData16[0x7];                                       // 0x0141(0x0007) MISSED OFFSET
	struct FName                                       Guest3_Serifu_Camp;                                       // 0x0148(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        Guest4_Character;                                         // 0x0150(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData17[0x7];                                       // 0x0151(0x0007) MISSED OFFSET
	struct FName                                       Guest4_Serifu;                                            // 0x0158(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Guest4_IdleMotion;                                        // 0x0160(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData18[0x7];                                       // 0x0161(0x0007) MISSED OFFSET
	struct FName                                       Guest4_Serifu_Camp;                                       // 0x0168(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        Guest5_Character;                                         // 0x0170(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData19[0x7];                                       // 0x0171(0x0007) MISSED OFFSET
	struct FName                                       Guest5_Serifu;                                            // 0x0178(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Guest5_IdleMotion;                                        // 0x0180(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData20[0x7];                                       // 0x0181(0x0007) MISSED OFFSET
	struct FName                                       Guest5_Serifu_Camp;                                       // 0x0188(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        Guest6_Character;                                         // 0x0190(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData21[0x7];                                       // 0x0191(0x0007) MISSED OFFSET
	struct FName                                       Guest6_Serifu;                                            // 0x0198(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Guest6_IdleMotion;                                        // 0x01A0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData22[0x7];                                       // 0x01A1(0x0007) MISSED OFFSET
	struct FName                                       Guest6_Serifu_Camp;                                       // 0x01A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        Guest7_Character;                                         // 0x01B0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData23[0x7];                                       // 0x01B1(0x0007) MISSED OFFSET
	struct FName                                       Guest7_Serifu;                                            // 0x01B8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Guest7_IdleMotion;                                        // 0x01C0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData24[0x7];                                       // 0x01C1(0x0007) MISSED OFFSET
	struct FName                                       Guest7_Serifu_Camp;                                       // 0x01C8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        Guest8_Character;                                         // 0x01D0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData25[0x7];                                       // 0x01D1(0x0007) MISSED OFFSET
	struct FName                                       Guest8_Serifu;                                            // 0x01D8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Guest8_IdleMotion;                                        // 0x01E0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData26[0x7];                                       // 0x01E1(0x0007) MISSED OFFSET
	struct FName                                       Guest8_Serifu_Camp;                                       // 0x01E8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        Guest9_Character;                                         // 0x01F0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData27[0x7];                                       // 0x01F1(0x0007) MISSED OFFSET
	struct FName                                       Guest9_Serifu;                                            // 0x01F8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Guest9_IdleMotion;                                        // 0x0200(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData28[0x7];                                       // 0x0201(0x0007) MISSED OFFSET
	struct FName                                       Guest9_Serifu_Camp;                                       // 0x0208(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        Guest10_Character;                                        // 0x0210(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData29[0x7];                                       // 0x0211(0x0007) MISSED OFFSET
	struct FName                                       Guest10_Serifu;                                           // 0x0218(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Guest10_IdleMotion;                                       // 0x0220(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData30[0x7];                                       // 0x0221(0x0007) MISSED OFFSET
	struct FName                                       Guest10_Serifu_Camp;                                      // 0x0228(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        Guest11_Character;                                        // 0x0230(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData31[0x7];                                       // 0x0231(0x0007) MISSED OFFSET
	struct FName                                       Guest11_Serifu;                                           // 0x0238(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackPartyTalkIdleMotion                           Guest11_IdleMotion;                                       // 0x0240(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData32[0x7];                                       // 0x0241(0x0007) MISSED OFFSET
	struct FName                                       Guest11_Serifu_Camp;                                      // 0x0248(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTablePartyTalkBehaviorState
// 0x0050 (0x0058 - 0x0008)
struct FJackDataTablePartyTalkBehaviorState : public FTableRowBase
{
	struct FName                                       BranchID;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Behavior;                                                 // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SC_Start;                                                 // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SC_End;                                                   // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PreLoadMapID;                                             // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsFieldDisp;                                             // 0x0030(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsSubjectOfAttack;                                       // 0x0031(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsGetExp;                                                // 0x0032(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsMenuDisp;                                              // 0x0033(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsPartyTalk;                                             // 0x0034(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsReturnToBag;                                           // 0x0035(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsReturnToBagExceptEquip;                                // 0x0036(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsNotGuestDisp;                                          // 0x0037(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BattleAI_ID;                                              // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                GambitRate;                                               // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackGambit>                           Gambit;                                                   // 0x0044(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0045(0x0003) MISSED OFFSET
	struct FName                                       BaseParameterID;                                          // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TalkSituation;                                            // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTablePartyTalkCharacter
// 0x0158 (0x0160 - 0x0008)
struct FJackDataTablePartyTalkCharacter : public FTableRowBase
{
	TEnumAsByte<EJackCharacter>                        CharacterType;                                            // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        PlayerType;                                               // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	int                                                CharaHeight;                                              // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0010(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTablePartyTalkCharacter.CharacterBP
	unsigned char                                      UnknownData02[0x18];                                      // 0x0028(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTablePartyTalkCharacter.BattleCharacterBP
	unsigned char                                      UnknownData03[0x18];                                      // 0x0040(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTablePartyTalkCharacter.TalkCharacterBP
	unsigned char                                      UnknownData04[0x18];                                      // 0x0058(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTablePartyTalkCharacter.CoffinCharacterBP
	unsigned char                                      UnknownData05[0x18];                                      // 0x0070(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTablePartyTalkCharacter.CoffinPartyTalkCharacterBP
	struct FName                                       DefaultCoordinate;                                        // 0x0088(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       FacialPresetID;                                           // 0x0090(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       VoicePresetID;                                            // 0x0098(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Handedness;                                               // 0x00A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Hand;                                                     // 0x00A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Head;                                                     // 0x00B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Body;                                                     // 0x00B8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Accessory1;                                               // 0x00C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Accessory2;                                               // 0x00C8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Item1;                                                    // 0x00D0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Item2;                                                    // 0x00D8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Item3;                                                    // 0x00E0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Item4;                                                    // 0x00E8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Item5;                                                    // 0x00F0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Item6;                                                    // 0x00F8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsNoTalk;                                                // 0x0100(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsBattle;                                                // 0x0101(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsFixedArea;                                             // 0x0102(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsSubjectOfAttack;                                       // 0x0103(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x4];                                       // 0x0104(0x0004) MISSED OFFSET
	struct FName                                       BaseParameterID;                                          // 0x0108(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BattleAI_ID;                                              // 0x0110(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                GambitRate;                                               // 0x0118(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackGambit>                           Gambit;                                                   // 0x011C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x3];                                       // 0x011D(0x0003) MISSED OFFSET
	float                                              PoseIdleMin;                                              // 0x0120(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PoseIdleMax;                                              // 0x0124(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PoseNormal01;                                             // 0x0128(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PoseSerious01;                                            // 0x0130(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PoseBlackout01;                                           // 0x0138(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PoseHappy01;                                              // 0x0140(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PoseAngry01;                                              // 0x0148(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PoseThinking01;                                           // 0x0150(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       PoseSpecial01;                                            // 0x0158(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTablePartyTalkCutSceneFlags
// 0x0050 (0x0058 - 0x0008)
struct FJackDataTablePartyTalkCutSceneFlags : public FTableRowBase
{
	TArray<float>                                      DT_TARGETDISTANCE;                                        // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<float>                                      DT_WIDEDISTANCE;                                          // 0x0018(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              DT_AccBase;                                               // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DT_MinSpeed;                                              // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DT_MinWalkSpeed;                                          // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DT_SLen;                                                  // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DT_RLen;                                                  // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DT_AccMul;                                                // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DT_BrakeMul;                                              // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DT_FollowMargin;                                          // 0x0044(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DT_TrackSamplingDistanceMax;                              // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DT_TrackStraightLength;                                   // 0x004C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DT_TrackStraightMargin;                                   // 0x0050(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTablePartyTalkMotionTag
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTablePartyTalkMotionTag : public FTableRowBase
{
	struct FName                                       DT_Motion;                                                // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DT_FacialUpper;                                           // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DT_FacialLower;                                           // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DT_VoiceType;                                             // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackPartyTalkRelativePosition
// 0x000C
struct FJackPartyTalkRelativePosition
{
	float                                              X;                                                        // 0x0000(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Y;                                                        // 0x0004(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Yaw;                                                      // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTablePartyTalkPositionInfo
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTablePartyTalkPositionInfo : public FTableRowBase
{
	int                                                DT_SeatMax;                                               // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<struct FJackPartyTalkRelativePosition>      DT_CharacterPos;                                          // 0x0010(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FJackPartyTalkRelativePosition>      DT_CoffinPos;                                             // 0x0020(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTablePartyTalkVoice
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTablePartyTalkVoice : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0008(0x0010) UNKNOWN PROPERTY: ArrayProperty JackGame.JackDataTablePartyTalkVoice.VoiceAsset
};

// ScriptStruct JackGame.JackDataTablePassiveTokugi
// 0x0040 (0x0048 - 0x0008)
struct FJackDataTablePassiveTokugi : public FTableRowBase
{
	struct FName                                       PassiveNameID;                                            // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackPassiveTokugiType>                EffectType;                                               // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0011(0x0003) MISSED OFFSET
	float                                              EffectParameter;                                          // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       EffectOddEffectID;                                        // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponBareHands;                                  // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponSword;                                      // 0x0021(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponDagger;                                     // 0x0022(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponAx;                                         // 0x0023(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponStick;                                      // 0x0024(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponBoomerang;                                  // 0x0025(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponDoubleSword;                                // 0x0026(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponSpear;                                      // 0x0027(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponStaff;                                      // 0x0028(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponClaw;                                       // 0x0029(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteWeaponWhip;                                       // 0x002A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bExecuteShield;                                           // 0x002B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x002C(0x0004) MISSED OFFSET
	struct FName                                       DescriptionID1;                                           // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DescriptionID2;                                           // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DescriptionID3;                                           // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTablePhoneticNo
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTablePhoneticNo : public FTableRowBase
{
	int                                                PhoneticNo;                                               // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTablePlayerBattleAI
// 0x0038 (0x0040 - 0x0008)
struct FJackDataTablePlayerBattleAI : public FTableRowBase
{
	TEnumAsByte<EJackPlayerAIFlowJudge>                FlowJudgeType;                                            // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FName                                       FlowActionRate;                                           // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackPlayerAIFlowControl>              FlowControlType;                                          // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackPlayerAIActionControl>            ActionControlType;                                        // 0x0019(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x001A(0x0006) MISSED OFFSET
	struct FName                                       SuccessNextFlowId;                                        // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       FailNextFlowId;                                           // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       EvaluateScoreCheckId;                                     // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EvaluateScore;                                            // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTablePokerCardTexture
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTablePokerCardTexture : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTablePokerCardTexture.Texture1
};

// ScriptStruct JackGame.JackDataTablePokerPayoutProbability
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTablePokerPayoutProbability : public FTableRowBase
{
	float                                              Win;                                                      // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Draw;                                                     // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Lose;                                                     // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTablePokerDoublieUpBaseCardRate
// 0x0038 (0x0040 - 0x0008)
struct FJackDataTablePokerDoublieUpBaseCardRate : public FTableRowBase
{
	float                                              Two;                                                      // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Three;                                                    // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Four;                                                     // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Five;                                                     // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Six;                                                      // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Seven;                                                    // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Eight;                                                    // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Nine;                                                     // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Ten;                                                      // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Jack;                                                     // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Queen;                                                    // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              King;                                                     // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Ace;                                                      // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTablePokerTakaraBakoProbability
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTablePokerTakaraBakoProbability : public FTableRowBase
{
	float                                              ProbabilityOne;                                           // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ProbabilityTen;                                           // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ProbabilityHundred;                                       // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTablePokerInexpensiveCoin
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTablePokerInexpensiveCoin : public FTableRowBase
{
	int                                                Fraction;                                                 // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Range;                                                    // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTablePokerTakaraBakoCoin
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTablePokerTakaraBakoCoin : public FTableRowBase
{
	float                                              ProbabilityOne;                                           // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ProbabilityTen;                                           // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ProbabilityHundred;                                       // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Fraction;                                                 // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Range;                                                    // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTablePokerDoubleUp
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTablePokerDoubleUp : public FTableRowBase
{
	int                                                Win;                                                      // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Draw;                                                     // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Lose;                                                     // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTablePokerHand
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTablePokerHand : public FTableRowBase
{
	int                                                Dividend;                                                 // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Probability;                                              // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTablePokerWinningRate
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTablePokerWinningRate : public FTableRowBase
{
	int                                                WinningRate;                                              // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTablePokerWBP
// 0x0048 (0x0050 - 0x0008)
struct FJackDataTablePokerWBP : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTablePokerWBP.Japanese
	unsigned char                                      UnknownData01[0x18];                                      // 0x0020(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTablePokerWBP.TraditionalChinese
	unsigned char                                      UnknownData02[0x18];                                      // 0x0038(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTablePokerWBP.Others
};

// ScriptStruct JackGame.JackDataTableQuest
// 0x00C8 (0x00D0 - 0x0008)
struct FJackDataTableQuest : public FTableRowBase
{
	struct FName                                       Title;                                                    // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       QuestFlag;                                                // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       QuestDisplayFlag;                                         // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       QuestUiDisplayFlag;                                       // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Order;                                                    // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackAchievement>                      AchievementType;                                          // 0x002C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x002D(0x0003) MISSED OFFSET
	TArray<struct FName>                               AchievementConditions;                                    // 0x0030(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       StartDescription;                                         // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               StartMapVolumeIDs;                                        // 0x0048(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       OrderDescription;                                         // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ProgressDescription;                                      // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               ProgressMapVolumeIDs;                                     // 0x0068(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       ProgressDescriptionK1;                                    // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ProgressDescriptionK2;                                    // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ProgressDescriptionK3;                                    // 0x0088(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CompleteDescription;                                      // 0x0090(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               CompleteMapVolumeIDs;                                     // 0x0098(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       EndDescription;                                           // 0x00A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       NPCID;                                                    // 0x00B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FJackQuestReward>                    Reward;                                                   // 0x00B8(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                TripleQuestNo;                                            // 0x00C8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableRecipe
// 0x00A0 (0x00A8 - 0x0008)
struct FJackDataTableRecipe : public FTableRowBase
{
	struct FName                                       CreateItemID;                                             // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SortIndex;                                                // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	struct FName                                       CategoryKind;                                             // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MaterialSpecial;                                          // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ResultType;                                               // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MetalKind;                                                // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MaterialID_01;                                            // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaterialNum_01;                                           // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	struct FName                                       MaterialID_02;                                            // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaterialNum_02;                                           // 0x0050(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
	struct FName                                       MaterialID_03;                                            // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaterialNum_03;                                           // 0x0060(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
	struct FName                                       MaterialID_04;                                            // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaterialNum_04;                                           // 0x0070(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0074(0x0004) MISSED OFFSET
	struct FName                                       MaterialID_05;                                            // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MaterialNum_05;                                           // 0x0080(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TakeRetryBall_1;                                          // 0x0084(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TakeRetryBall_2;                                          // 0x0088(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TakeRetryBall_3;                                          // 0x008C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TakeRetryBall_4;                                          // 0x0090(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TakeRetryBall_Fail;                                       // 0x0094(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NeedRetryBall_1;                                          // 0x0098(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NeedRetryBall_2;                                          // 0x009C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                NeedRetryBall_3;                                          // 0x00A0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                DifficultyRank;                                           // 0x00A4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableRecipeBook
// 0x0050 (0x0058 - 0x0008)
struct FJackDataTableRecipeBook : public FTableRowBase
{
	struct FName                                       RecipeId_01;                                              // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RecipeId_02;                                              // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RecipeId_03;                                              // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RecipeId_04;                                              // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RecipeId_05;                                              // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RecipeId_06;                                              // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RecipeId_07;                                              // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RecipeId_08;                                              // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RecipeId_09;                                              // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       RecipeId_11;                                              // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackGameFlagKeyValueSet
// 0x0020
struct FJackGameFlagKeyValueSet
{
	TEnumAsByte<EJackGameFlagCategory>                 Category;                                                 // 0x0000(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       Name;                                                     // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     Value;                                                    // 0x0010(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableRelationalGameFlagConfig
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableRelationalGameFlagConfig : public FTableRowBase
{
	TArray<struct FJackGameFlagKeyValueSet>            ConfigFlagList;                                           // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableMonsterRenkei
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableMonsterRenkei : public FTableRowBase
{
	struct FName                                       RenkeiID;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               Member;                                                   // 0x0010(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableMatineeRenkei
// 0x0150 (0x0158 - 0x0008)
struct FJackDataTableMatineeRenkei : public FTableRowBase
{
	struct FName                                       MachineLevelName;                                         // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MachineLevelPass;                                         // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MachineName;                                              // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x18];                                      // 0x0020(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableMatineeRenkei.DamageEffect
	struct FName                                       DoActionID_A;                                             // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackRenkeiMember>                     Target_A;                                                 // 0x0040(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0041(0x0007) MISSED OFFSET
	struct FName                                       DoActionID_B;                                             // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackRenkeiMember>                     Target_B;                                                 // 0x0050(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x7];                                       // 0x0051(0x0007) MISSED OFFSET
	struct FName                                       DoActionID_C;                                             // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackRenkeiMember>                     Target_C;                                                 // 0x0060(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	struct FName                                       DoActionID_D;                                             // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackRenkeiMember>                     Target_D;                                                 // 0x0070(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLOD_ON;                                                  // 0x0071(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x6];                                       // 0x0072(0x0006) MISSED OFFSET
	struct FName                                       DamageCameraID;                                           // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DamageFormationID;                                        // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageTime;                                               // 0x0088(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x008C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData06[0x18];                                      // 0x008C(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableMatineeRenkei.DamageCameraShake
	float                                              DamageCameraShakeTime;                                    // 0x00A8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x4];                                       // 0x00AC(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData08[0x18];                                      // 0x00AC(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMatineeRenkei.Damage_Particle1
	float                                              Damage_ParticleTime1;                                     // 0x00C8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x4];                                       // 0x00CC(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData10[0x18];                                      // 0x00CC(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMatineeRenkei.Damage_Particle2
	float                                              Damage_ParticleTime2;                                     // 0x00E8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x4];                                       // 0x00EC(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData12[0x18];                                      // 0x00EC(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableMatineeRenkei.Damage_Sound
	float                                              Damage_SoundTime;                                         // 0x0108(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData13[0x4];                                       // 0x010C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData14[0x18];                                      // 0x010C(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableMatineeRenkei.Target_ActionEffect
	float                                              DamageBalloonTimeA;                                       // 0x0128(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageHitCountA;                                          // 0x012C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageHitIntervalA;                                       // 0x0130(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageBalloonTimeB;                                       // 0x0134(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageHitCountB;                                          // 0x0138(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageHitIntervalB;                                       // 0x013C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageBalloonTimeC;                                       // 0x0140(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageHitCountC;                                          // 0x0144(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageHitIntervalC;                                       // 0x0148(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageBalloonTimeD;                                       // 0x014C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageHitCountD;                                          // 0x0150(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DamageHitIntervalD;                                       // 0x0154(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableMatineelevelRenkeiDivision
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableMatineelevelRenkeiDivision : public FTableRowBase
{
	struct FName                                       LevelName;                                                // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       LevelNamePass;                                            // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	struct FName                                       MatineeName;                                              // 0x0018(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	int                                                GroupNumber;                                              // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackCharacter>                        CharacterType;                                            // 0x0024(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableProgRenkei
// 0x0088 (0x0090 - 0x0008)
struct FJackDataTableProgRenkei : public FTableRowBase
{
	struct FName                                       FormationID;                                              // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DoActionID_A;                                             // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPendingDead_A;                                           // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackRenkeiMember>                     Target_A;                                                 // 0x0019(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackBattleRenkeiTiming>               ActionStartTiming_A;                                      // 0x001A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackRenkeiMember>                     ActionStartTimingLookChara_A;                             // 0x001B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ActionStartTime_A;                                        // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DoActionID_B;                                             // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPendingDead_B;                                           // 0x0028(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackRenkeiMember>                     Target_B;                                                 // 0x0029(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackBattleRenkeiTiming>               ActionStartTiming_B;                                      // 0x002A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackRenkeiMember>                     ActionStartTimingLookChara_B;                             // 0x002B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              ActionStartTime_B;                                        // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ActionCameraID;                                           // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               TextID;                                                   // 0x0038(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<TEnumAsByte<EJackBattleRenkeiTiming>>       TextID_StartTiming;                                       // 0x0048(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<TEnumAsByte<EJackRenkeiMember>>             TextID_StartTimingLookChara;                              // 0x0058(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<float>                                      TextID_StartTime;                                         // 0x0068(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       PlayAnimMontage;                                          // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackRenkeiMember>                     PlayAnimMontage_Target;                                   // 0x0080(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackBattleRenkeiTiming>               PlayAnimMontage_StartTiming;                              // 0x0081(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackRenkeiMember>                     PlayAnimMontage_LookChara;                                // 0x0082(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0083(0x0001) MISSED OFFSET
	float                                              PlayAnimMontage_StartTime;                                // 0x0084(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackBattleRenkeiTiming>               RenkeiEndTiming;                                          // 0x0088(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackRenkeiMember>                     RenkeiEndTimingLookChara;                                 // 0x0089(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x008A(0x0002) MISSED OFFSET
	float                                              RenkeiEndTimingTime;                                      // 0x008C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableProgRenkeiFormation
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableProgRenkeiFormation : public FTableRowBase
{
	TArray<struct FVector>                             AttackerLocations;                                        // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<TEnumAsByte<EJackBattleRenkeiFormationDirection>> AttackerDirections;                                       // 0x0018(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TEnumAsByte<EJackBattleRenkeiFormationGroupDirection> DefenderDirections;                                       // 0x0028(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	struct FVector                                     DefenderCenterLocation;                                   // 0x002C(0x000C) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableRestart
// 0x0048 (0x0050 - 0x0008)
struct FJackDataTableRestart : public FTableRowBase
{
	struct FName                                       MapId;                                                    // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FString                                     MapName;                                                  // 0x0010(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     DisplayLocationName;                                      // 0x0020(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       NPCTag;                                                   // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MessageID;                                                // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MessageIDFromLoad;                                        // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              LostGoldRate;                                             // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bResetRestartChurch;                                      // 0x004C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bResetRestartTown;                                        // 0x004D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bResetRestartEvent;                                       // 0x004E(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackRestartProcessType>               RestartProcessType;                                       // 0x004F(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableRouletteTextureAsset
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableRouletteTextureAsset : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableRouletteTextureAsset.TextureBg
	unsigned char                                      UnknownData01[0x18];                                      // 0x0020(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableRouletteTextureAsset.TextureLine
};

// ScriptStruct JackGame.JackDataTableRouletteNPCDistribution
// 0x0038 (0x0040 - 0x0008)
struct FJackDataTableRouletteNPCDistribution : public FTableRowBase
{
	int                                                Bet1Coin;                                                 // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Bet10Coin;                                                // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Bet100Coin;                                               // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CoinNum1;                                                 // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CoinNum2;                                                 // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CoinNum3;                                                 // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CoinNum4;                                                 // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CoinNum5;                                                 // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CoinNum6;                                                 // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CoinNum7;                                                 // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CoinNum8;                                                 // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CoinNum9;                                                 // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                CoinNum10;                                                // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableRouletteTreasureCoin
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableRouletteTreasureCoin : public FTableRowBase
{
	int                                                Fraction;                                                 // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Range;                                                    // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Probability;                                              // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableRouletteJackPotProbability
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableRouletteJackPotProbability : public FTableRowBase
{
	int                                                BasePercent;                                              // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Fraction;                                                 // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableRouletteData
// 0x0060 (0x0068 - 0x0008)
struct FJackDataTableRouletteData : public FTableRowBase
{
	int                                                ZOrder;                                                   // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ListNo;                                                   // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Num;                                                      // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                X;                                                        // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Y;                                                        // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value1;                                                   // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value2;                                                   // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value3;                                                   // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value4;                                                   // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value5;                                                   // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value6;                                                   // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value7;                                                   // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value8;                                                   // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value9;                                                   // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value10;                                                  // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value11;                                                  // 0x0044(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value12;                                                  // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value13;                                                  // 0x004C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value14;                                                  // 0x0050(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value15;                                                  // 0x0054(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value16;                                                  // 0x0058(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value17;                                                  // 0x005C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Value18;                                                  // 0x0060(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0064(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackRubyTagData
// 0x0018
struct FJackRubyTagData
{
	struct FString                                     Ruby;                                                     // 0x0000(0x0010) (Edit, ZeroConstructor, EditConst)
	int                                                Start;                                                    // 0x0010(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                Count;                                                    // 0x0014(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableRura
// 0x0058 (0x0060 - 0x0008)
struct FJackDataTableRura : public FTableRowBase
{
	struct FName                                       SelectNameID;                                             // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       JumpTag;                                                  // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       IdoJumpTag;                                               // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DescriptionID;                                            // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TouchFlag;                                                // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OpenFlag;                                                 // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       WorldMapPoint;                                            // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       WorldMapArea;                                             // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBukiShopFlag;                                            // 0x0048(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBouguShopFlag;                                           // 0x0049(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInnFlag;                                                 // 0x004A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDouguShopFlag;                                           // 0x004B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bYorozuShopFlag;                                          // 0x004C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bChurchFlag;                                              // 0x004D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBankFlag;                                                // 0x004E(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bBlacksmithFlag;                                          // 0x004F(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCasinoFlag;                                              // 0x0050(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUmaRaceFlag;                                             // 0x0051(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0052(0x0006) MISSED OFFSET
	struct FName                                       ShipMoveTag;                                              // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableRuby
// 0x0040 (0x0048 - 0x0008)
struct FJackDataTableRuby : public FTableRowBase
{
	struct FString                                     Word;                                                     // 0x0008(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FString                                     Ruby;                                                     // 0x0018(0x0010) (Edit, ZeroConstructor, EditConst)
	int                                                WordLength;                                               // 0x0028(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                RubyLength;                                               // 0x002C(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	bool                                               IsRubyTag;                                                // 0x0030(0x0001) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
	TArray<struct FJackRubyTagData>                    RubyTagData;                                              // 0x0038(0x0010) (Edit, ZeroConstructor, EditConst)
};

// ScriptStruct JackGame.JackDataTableRuraRestriction
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableRuraRestriction : public FTableRowBase
{
	struct FName                                       BanStartFlag;                                             // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BanEndFlag;                                               // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableScenarioFlagInfo
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableScenarioFlagInfo : public FTableRowBase
{
	TEnumAsByte<EJackScenarioID>                       ScenarioID;                                               // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                Order;                                                    // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       FlagNameOfLatestScenarioFlag;                             // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       FlagNameOfArasuziFlag;                                    // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableScheduledKira
// 0x00C8 (0x00D0 - 0x0008)
struct FJackDataTableScheduledKira : public FTableRowBase
{
	struct FName                                       MapId;                                                    // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackTreasureBoxPlacementCondition>    PlacementConditionType;                                   // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FName                                       PlacementConditionParameter;                              // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PlacementNum_Min;                                         // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                PlacementNum_Max;                                         // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ReplacementMin;                                           // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlacementTimeZone_Morning;                               // 0x002C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlacementTimeZone_Daytime;                               // 0x002D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlacementTimeZone_Evening;                               // 0x002E(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlacementTimeZone_Night;                                 // 0x002F(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlacementWeather_ClearAndSunny;                          // 0x0030(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlacementWeather_Sunny;                                  // 0x0031(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlacementWeather_Cloudy;                                 // 0x0032(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlacementWeather_LightRain;                              // 0x0033(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlacementWeather_Rain;                                   // 0x0034(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlacementWeather_HeavyRain;                              // 0x0035(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlacementWeather_Thunderstorm;                           // 0x0036(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlacementWeather_Snow;                                   // 0x0037(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlacementWeather_Snowstorm;                              // 0x0038(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlacementWeather_Fog;                                    // 0x0039(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlacementWeather_HeavyFog;                               // 0x003A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x003B(0x0005) MISSED OFFSET
	struct FName                                       RespawnInformationFlag;                                   // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ScenarioSequenceNo;                                       // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	struct FName                                       ItemID_001;                                               // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNum_001;                                              // 0x0058(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemWeight_001;                                           // 0x005C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_002;                                               // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNum_002;                                              // 0x0068(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemWeight_002;                                           // 0x006C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_003;                                               // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNum_003;                                              // 0x0078(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemWeight_003;                                           // 0x007C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_004;                                               // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNum_004;                                              // 0x0088(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemWeight_004;                                           // 0x008C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_005;                                               // 0x0090(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNum_005;                                              // 0x0098(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemWeight_005;                                           // 0x009C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_006;                                               // 0x00A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNum_006;                                              // 0x00A8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemWeight_006;                                           // 0x00AC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_007;                                               // 0x00B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNum_007;                                              // 0x00B8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemWeight_007;                                           // 0x00BC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ItemID_008;                                               // 0x00C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemNum_008;                                              // 0x00C8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ItemWeight_008;                                           // 0x00CC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableSlotME
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableSlotME : public FTableRowBase
{
	struct FName                                       ME_FiveLine;                                              // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ME_FourLine;                                              // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ME_ThreeLine;                                             // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableSlotJackPotFractionRange
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableSlotJackPotFractionRange : public FTableRowBase
{
	float                                              Fraction05;                                               // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Fraction06;                                               // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Fraction07;                                               // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Fraction08;                                               // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Fraction09;                                               // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableSlotAnimAsset
// 0x0060 (0x0068 - 0x0008)
struct FJackDataTableSlotAnimAsset : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableSlotAnimAsset.Stand
	unsigned char                                      UnknownData01[0x18];                                      // 0x0020(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableSlotAnimAsset.Reach
	unsigned char                                      UnknownData02[0x18];                                      // 0x0038(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableSlotAnimAsset.Win
	unsigned char                                      UnknownData03[0x18];                                      // 0x0050(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableSlotAnimAsset.WinIn
};

// ScriptStruct JackGame.JackDataTableSlotAsset
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableSlotAsset : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableSlotAsset.MeshClass
};

// ScriptStruct JackGame.JackDataTableSlotWild
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableSlotWild : public FTableRowBase
{
	int                                                Percent;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableSlotRole
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableSlotRole : public FTableRowBase
{
	int                                                Five;                                                     // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Four;                                                     // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Three;                                                    // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableSlotPaymentsPercent
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableSlotPaymentsPercent : public FTableRowBase
{
	int                                                PayPercent;                                               // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WinPercent;                                               // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableSlotReach
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableSlotReach : public FTableRowBase
{
	int                                                Percent;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableSlotPayout
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableSlotPayout : public FTableRowBase
{
	int                                                Five;                                                     // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Four;                                                     // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Three;                                                    // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableSlotHitLine
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableSlotHitLine : public FTableRowBase
{
	int                                                Percent;                                                  // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableSlotHitProbability
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableSlotHitProbability : public FTableRowBase
{
	float                                              Normal;                                                   // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Metal;                                                    // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Range;                                                    // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableSlotReel
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableSlotReel : public FTableRowBase
{
	struct FName                                       R1;                                                       // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       R2;                                                       // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       R3;                                                       // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       R4;                                                       // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       R5;                                                       // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableParticleSound
// 0x0048 (0x0050 - 0x0008)
struct FJackDataTableParticleSound : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableParticleSound.Sound0
	unsigned char                                      UnknownData01[0x18];                                      // 0x0020(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableParticleSound.Sound1
	unsigned char                                      UnknownData02[0x18];                                      // 0x0038(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableParticleSound.Sound2
};

// ScriptStruct JackGame.JackDataTableME
// 0x0040 (0x0048 - 0x0008)
struct FJackDataTableME : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableME.ME
	unsigned char                                      UnknownData01[0x18];                                      // 0x0020(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableME.OrcheME
	float                                              FadeOutTime;                                              // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeInTime;                                               // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDontResumeBGM;                                           // 0x0040(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bPlayAtPrintEnd;                                          // 0x0041(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x6];                                       // 0x0042(0x0006) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableBGMVolume
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableBGMVolume : public FTableRowBase
{
	struct FString                                     Title;                                                    // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              JP3DGold;                                                 // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              JP3DOrche;                                                // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NE3DGold;                                                 // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NE3DOrche;                                                // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bNoOrche;                                                 // 0x0028(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0029(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableBGMScenario
// 0x00C0 (0x00C8 - 0x0008)
struct FJackDataTableBGMScenario : public FTableRowBase
{
	struct FName                                       StartFlag1;                                               // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       EndFlag1;                                                 // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CSFlag1;                                                  // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BGMID1;                                                   // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       StartFlag2;                                               // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       EndFlag2;                                                 // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CSFlag2;                                                  // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BGMID2;                                                   // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       StartFlag3;                                               // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       EndFlag3;                                                 // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CSFlag3;                                                  // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BGMID3;                                                   // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       StartFlag4;                                               // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       EndFlag4;                                                 // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CSFlag4;                                                  // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BGMID4;                                                   // 0x0080(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       StartFlag5;                                               // 0x0088(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       EndFlag5;                                                 // 0x0090(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CSFlag5;                                                  // 0x0098(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BGMID5;                                                   // 0x00A0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       StartFlag6;                                               // 0x00A8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       EndFlag6;                                                 // 0x00B0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CSFlag6;                                                  // 0x00B8(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       BGMID6;                                                   // 0x00C0(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableBGM
// 0x0078 (0x0080 - 0x0008)
struct FJackDataTableBGM : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableBGM.DayBGM
	unsigned char                                      UnknownData01[0x18];                                      // 0x0020(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableBGM.NightBGM
	unsigned char                                      UnknownData02[0x18];                                      // 0x0038(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableBGM.OrcheDayBGM
	unsigned char                                      UnknownData03[0x18];                                      // 0x0050(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableBGM.OrcheNightBGM
	TEnumAsByte<EJackBGMControl>                       DayBGMControl;                                            // 0x0068(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackBGMControl>                       NightBGMControl;                                          // 0x0069(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackBGMControl>                       BeginCS_BGMControl;                                       // 0x006A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackBGMControl>                       EndCS_BGMControl;                                         // 0x006B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x006C(0x0004) MISSED OFFSET
	struct FName                                       NextSceneBGMID;                                           // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeoutTimePreviousBGM;                                   // 0x0078(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x007C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableTemporaryMaterialCoordinate
// 0x0060 (0x0068 - 0x0008)
struct FJackDataTableTemporaryMaterialCoordinate : public FTableRowBase
{
	float                                              EvilOriginalColorFalloff;                                 // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EvilOriginalColorScale;                                   // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EvilMaterialLightScale;                                   // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EvilRimColorR;                                            // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EvilRimColorG;                                            // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EvilRimColorB;                                            // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EvilRimColorScale;                                        // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EvilRimFalloff;                                           // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EvilOutlineColorR;                                        // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EvilOutlineColorG;                                        // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EvilOutlineColorB;                                        // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EvilOutlineColorScale;                                    // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EvilColorR;                                               // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EvilColorG;                                               // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EvilColorB;                                               // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EvilColorScale;                                           // 0x0044(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EvilMapScale;                                             // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeInTime;                                               // 0x004C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeOutTime;                                              // 0x0050(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEvilOriginalColorFalloff;                                // 0x0054(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEvilOriginalColorScale;                                  // 0x0055(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEvilMaterialLightScale;                                  // 0x0056(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEvilRimColorR;                                           // 0x0057(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEvilRimColorG;                                           // 0x0058(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEvilRimColorB;                                           // 0x0059(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEvilRimColorScale;                                       // 0x005A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEvilRimFalloff;                                          // 0x005B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEvilOutlineColorR;                                       // 0x005C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEvilOutlineColorG;                                       // 0x005D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEvilOutlineColorB;                                       // 0x005E(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEvilOutlineColorScale;                                   // 0x005F(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEvilColorR;                                              // 0x0060(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEvilColorG;                                              // 0x0061(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEvilColorB;                                              // 0x0062(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEvilColorScale;                                          // 0x0063(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bEvilMapScale;                                            // 0x0064(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0065(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableTenseiCSWatch
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableTenseiCSWatch : public FTableRowBase
{
	struct FName                                       JackCSFlag;                                               // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TripleCSID;                                               // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableTenseiScenarioFlags
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableTenseiScenarioFlags : public FTableRowBase
{
	int                                                ScenarioNo;                                               // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	TArray<struct FName>                               ScenarioFlags;                                            // 0x0010(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableTenseiFlags
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableTenseiFlags : public FTableRowBase
{
	TEnumAsByte<EJackGameFlagCategory>                 Category;                                                 // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FName                                       FlagId;                                                   // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Arg1;                                                     // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Arg2;                                                     // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               Cmds;                                                     // 0x0028(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableTenseiParams
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableTenseiParams : public FTableRowBase
{
	EJackTenseiOperationType                           Type;                                                     // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FName                                       Value;                                                    // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Arg1;                                                     // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       Arg2;                                                     // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TArray<struct FName>                               Cmds;                                                     // 0x0028(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackTenseiDisplayCondition
// 0x0010
struct FJackTenseiDisplayCondition
{
	TEnumAsByte<EJackGameFlagCategory>                 FlagCategory;                                             // 0x0000(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       FlagId;                                                   // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableTenseiSelect
// 0x0058 (0x0060 - 0x0008)
struct FJackDataTableTenseiSelect : public FTableRowBase
{
	EJackScenarioGroup                                 ScenarioGroup;                                            // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FName                                       ScenarioTitleNameId;                                      // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MapStart;                                                 // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ProgressNo;                                               // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	TArray<struct FJackTenseiDisplayCondition>         DisplayCondition;                                         // 0x0028(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       ScenarioDescriptionId;                                    // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x18];                                      // 0x0040(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableTenseiSelect.ScenarioTexture
	struct FName                                       TripleMapStart;                                           // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableTenseiParams2D
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableTenseiParams2D : public FTableRowBase
{
	struct FName                                       Category;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                FlagId;                                                   // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SubFlagId;                                                // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Arg1;                                                     // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Arg2;                                                     // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Arg3;                                                     // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	TArray<struct FName>                               Cmds;                                                     // 0x0028(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableTenseiFlags2D
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableTenseiFlags2D : public FTableRowBase
{
	struct FName                                       Category;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                FlagId;                                                   // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                SubFlagId;                                                // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Arg1;                                                     // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Arg2;                                                     // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                Arg3;                                                     // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	TArray<struct FName>                               Cmds;                                                     // 0x0028(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackTenseiRespawnData2D
// 0x0008
struct FJackTenseiRespawnData2D
{
	int                                                MapId;                                                    // 0x0000(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      ShipPointId;                                              // 0x0004(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      MapJumpLocatorId;                                         // 0x0005(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      EventType;                                                // 0x0006(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x0007(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackTenseiDisplayCondition2D
// 0x0010
struct FJackTenseiDisplayCondition2D
{
	struct FName                                       FlagCategory;                                             // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      ScenarioID;                                               // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      FlagId;                                                   // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x000A(0x0006) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableTenseiSelect2D
// 0x0060 (0x0068 - 0x0008)
struct FJackDataTableTenseiSelect2D : public FTableRowBase
{
	unsigned char                                      ScenarioGroup;                                            // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FString                                     ScenarioTitleNameId;                                      // 0x0010(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                ProgressNo;                                               // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                MapId;                                                    // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      ScenarioJump;                                             // 0x0028(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      RiremitoPointId;                                          // 0x0029(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x002A(0x0002) MISSED OFFSET
	int                                                EmbarkationMapId;                                         // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      EmbarkationLocatorId;                                     // 0x0030(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      EmbarkationAnchorageId;                                   // 0x0031(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	struct FJackTenseiRespawnData2D                    RespawnData;                                              // 0x0034(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	unsigned char                                      PrevScenarioId;                                           // 0x003C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      PrevScenarioFlag;                                         // 0x003D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x003E(0x0002) MISSED OFFSET
	int                                                PrevCutSceneId;                                           // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x4];                                       // 0x0044(0x0004) MISSED OFFSET
	TArray<struct FJackTenseiDisplayCondition2D>       DisplayCondition;                                         // 0x0048(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     ScenarioDescriptionId;                                    // 0x0058(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableDebugLongestValue
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableDebugLongestValue : public FTableRowBase
{
	int                                                Value;                                                    // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackTagCategory                                   TagCategory;                                              // 0x000C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableDebugLongestArticleInfo
// 0x0090 (0x0098 - 0x0008)
struct FJackDataTableDebugLongestArticleInfo : public FTableRowBase
{
	struct FJackArticleInfo                            ArticleInfo;                                              // 0x0008(0x0088) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance)
	EJackTagCategory                                   TagCategory;                                              // 0x0090(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0091(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableGermanCheckLastIsS
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableGermanCheckLastIsS : public FTableRowBase
{
	struct FString                                     LastIsS;                                                  // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableGermanRating
// 0x0040
struct FJackDataTableGermanRating
{
	struct FString                                     NOM_Name;                                                 // 0x0000(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     GEN_Name;                                                 // 0x0010(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     DAT_Name;                                                 // 0x0020(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     ACC_Name;                                                 // 0x0030(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableGermanCaseChangeTable
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableGermanCaseChangeTable : public FTableRowBase
{
	EJackGermanSectionType                             Section;                                                  // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	struct FString                                     DefName;                                                  // 0x0010(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FJackDataTableGermanRating>          Ratings;                                                  // 0x0020(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableFrenchCheckVowel
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableFrenchCheckVowel : public FTableRowBase
{
	struct FString                                     UpStr;                                                    // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     LowStr;                                                   // 0x0018(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     CheckStr;                                                 // 0x0028(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableTagInfo
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableTagInfo : public FTableRowBase
{
	struct FString                                     TagName;                                                  // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	EJackTagReferType                                  Refer;                                                    // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackTagCategory                                   Category;                                                 // 0x0019(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x001A(0x0006) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableMacroInfo
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableMacroInfo : public FTableRowBase
{
	struct FString                                     DefName;                                                  // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	EJackProcessType                                   Process;                                                  // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackHangType                                      Hang;                                                     // 0x0019(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackTagReferType                                  Refer;                                                    // 0x001A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x1];                                       // 0x001B(0x0001) MISSED OFFSET
	int                                                ArgumentNum;                                              // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAttachTagName;                                           // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableTokugiPanelInfo
// 0x0078 (0x0080 - 0x0008)
struct FJackDataTableTokugiPanelInfo : public FTableRowBase
{
	TEnumAsByte<EJackCharacter>                        TargetCharacter;                                          // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                Order;                                                    // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackTokugiType>                       Type;                                                     // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FName                                       ID;                                                       // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ConfirmMessage;                                           // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       LearnedMessage;                                           // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SingleLearnedMessage;                                     // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                ConsumePoint;                                             // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   PanelPos;                                                 // 0x003C(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	bool                                               bLockPanel;                                               // 0x0044(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bAtariPanel;                                              // 0x0045(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bFuuinPanel;                                              // 0x0046(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x1];                                       // 0x0047(0x0001) MISSED OFFSET
	int                                                IconType;                                                 // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x004C(0x0004) MISSED OFFSET
	TArray<TEnumAsByte<EJackSkillLine>>                SkillLineTypeList;                                        // 0x0050(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TEnumAsByte<EJackItem_Classification>              ConfirmWeaponType;                                        // 0x0060(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x7];                                       // 0x0061(0x0007) MISSED OFFSET
	TArray<TEnumAsByte<EJackTokugiPanelScenario>>      ScenarioFlagList;                                         // 0x0068(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              ResetAnimTiming;                                          // 0x0078(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                TripleTokugiPanelNo;                                      // 0x007C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackActionFieldTextInfo
// 0x0010
struct FJackActionFieldTextInfo
{
	struct FName                                       Message;                                                  // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	EJackActionFieldTextType                           Timming;                                                  // 0x0008(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableUIActionFieldText
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableUIActionFieldText : public FTableRowBase
{
	TArray<struct FJackActionFieldTextInfo>            TextInfoList;                                             // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableUIActionSort
// 0x0068 (0x0070 - 0x0008)
struct FJackDataTableUIActionSort : public FTableRowBase
{
	struct FString                                     DisplayName;                                              // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	int                                                P001Field_2;                                              // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P001Battle_2;                                             // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P002Field_2;                                              // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P002Battle_2;                                             // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P002Field_3;                                              // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P002Battle_3;                                             // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P003Field_2;                                              // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P003Battle_2;                                             // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P004Field_2;                                              // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P004Battle_2;                                             // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P004Field_3;                                              // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P004Battle_3;                                             // 0x0044(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P005Field_2;                                              // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P005Battle_2;                                             // 0x004C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P006Field_2;                                              // 0x0050(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P006Battle_2;                                             // 0x0054(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P007Field_2;                                              // 0x0058(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P007Battle_2;                                             // 0x005C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P008Field_2;                                              // 0x0060(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                P008Battle_2;                                             // 0x0064(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackUMGFieldActionSoundType                       FieldActionSE;                                            // 0x0068(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0069(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableUICurrentPlaceInfo
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableUICurrentPlaceInfo : public FTableRowBase
{
	struct FVector2D                                   Position;                                                 // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableUIFaceIcon
// 0x0098 (0x00A0 - 0x0008)
struct FJackDataTableUIFaceIcon : public FTableRowBase
{
	TEnumAsByte<EJackCharacter>                        CharType;                                                 // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x18];                                      // 0x0009(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableUIFaceIcon.AliveTexture
	unsigned char                                      UnknownData02[0x18];                                      // 0x0028(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableUIFaceIcon.DeadTexture
	unsigned char                                      UnknownData03[0x18];                                      // 0x0040(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableUIFaceIcon.ZoneTexture
	unsigned char                                      UnknownData04[0x18];                                      // 0x0058(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableUIFaceIcon.BustTexture
	unsigned char                                      UnknownData05[0x18];                                      // 0x0070(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableUIFaceIcon.EyeTexture
	unsigned char                                      UnknownData06[0x18];                                      // 0x0088(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableUIFaceIcon.FaceTexture
};

// ScriptStruct JackGame.JackDataTableUIFukidasiFaceIcon
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableUIFukidasiFaceIcon : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableUIFukidasiFaceIcon.FaceIconAsset
};

// ScriptStruct JackGame.JackDataTableUIKatagaki
// 0x0058 (0x0060 - 0x0008)
struct FJackDataTableUIKatagaki : public FTableRowBase
{
	EJackScenarioPlaythrough                           Playthrough;                                              // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackScenarioID>                       ScenarioID;                                               // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x000A(0x0006) MISSED OFFSET
	struct FName                                       ScenarioFlag;                                             // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       CutSceneFlag;                                             // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       P001;                                                     // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       P002;                                                     // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       P003;                                                     // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       P004;                                                     // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       P005;                                                     // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       P006;                                                     // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       P007;                                                     // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       P008;                                                     // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableUIMapInfo
// 0x00C0 (0x00C8 - 0x0008)
struct FJackDataTableUIMapInfo : public FTableRowBase
{
	struct FName                                       MapId;                                                    // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ParentVolumeID;                                           // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bMiniMapEnabled;                                          // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bJourney;                                                 // 0x0019(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bClearFootmark;                                           // 0x001A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bUseMapChangeEffect;                                      // 0x001B(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackMapPCMarkerDisplayMethod                      PCMarkerDisplayMethod;                                    // 0x001C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackMapFieldType                                  FieldType;                                                // 0x001D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackFloorLevel                                    FloorLevel;                                               // 0x001E(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackFloorArea                                     FloorArea;                                                // 0x001F(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackFloorGroup                                    FloorGroup;                                               // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	struct FName                                       MapOpenFlag;                                              // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       WorldMapTitleTextID;                                      // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       WorldMapTitleTextOpenFlag;                                // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MLocationTextID;                                          // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MLocationTextOpenFlag;                                    // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SLocationTextID;                                          // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SLocationTextOpenFlag;                                    // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              MiniMapDisplayDiameter;                                   // 0x0060(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              WorldMapZoomFactorMax;                                    // 0x0064(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0068(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableUIMapInfo.MapTextWBP
	unsigned char                                      UnknownData02[0x18];                                      // 0x0080(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableUIMapInfo.MapOpenTexture
	unsigned char                                      UnknownData03[0x18];                                      // 0x0098(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableUIMapInfo.MapMaskTexture
	unsigned char                                      UnknownData04[0x18];                                      // 0x00B0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableUIMapInfo.MiniMapTexture
};

// ScriptStruct JackGame.JackDataTableUIMapTextConfig
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableUIMapTextConfig : public FTableRowBase
{
	struct FName                                       MapId;                                                    // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       LocationNameTextID;                                       // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       OpenMapTextCondition_VisitFlag;                           // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackGameFlagCategory>                 OpenMapTextCondition_FlagCategory;                        // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0021(0x0007) MISSED OFFSET
	struct FName                                       OpenMapTextCondition_FlagName;                            // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackLocationNameDisplayMethod>        LocationNameDisplayMethod;                                // 0x0030(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0031(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableUIMessageSpeed
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableUIMessageSpeed : public FTableRowBase
{
	TEnumAsByte<EJackSpeed>                            Type;                                                     // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              WaitSecondsPerCharacter;                                  // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FastModeMultiplier;                                       // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableUINeighborMapInfo
// 0x0070 (0x0078 - 0x0008)
struct FJackDataTableUINeighborMapInfo : public FTableRowBase
{
	TArray<struct FName>                               SameAreaMapVolumeIDList;                                  // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       OverrideLocationNameTextID;                               // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackLocationNameDisplayMethod>        DefaultDisplayMethod;                                     // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackGameFlagCategory>                 DisplayControlFlagCategory;                               // 0x0021(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0022(0x0006) MISSED OFFSET
	struct FName                                       DisplayControlFlagName;                                   // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	EJackGameFlagOperator                              DisplayControlFlagCondition;                              // 0x0030(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackLocationNameDisplayMethod>        DisplayControlMethod;                                     // 0x0031(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0032(0x0006) MISSED OFFSET
	TArray<struct FName>                               NeighborMapVolumeIDListA;                                 // 0x0038(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               NeighborMapVolumeIDListS;                                 // 0x0048(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               NeighborMapVolumeIDListB;                                 // 0x0058(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               NeighborMapVolumeIDListC;                                 // 0x0068(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableUIPlatformSpecificText
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableUIPlatformSpecificText : public FTableRowBase
{
	struct FString                                     Text;                                                     // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	struct FName                                       ExchangeTag;                                              // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableUIStaffRoll
// 0x00A0 (0x00A8 - 0x0008)
struct FJackDataTableUIStaffRoll : public FTableRowBase
{
	EJackStaffRollEventType                            EventType;                                                // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	float                                              StartTime;                                                // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              StartTime2;                                               // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EndTime;                                                  // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EndTime2;                                                 // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeInTime;                                               // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DisplayTime;                                              // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeOutTime;                                              // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeInTime2;                                              // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DisplayTime2;                                             // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              FadeOutTime2;                                             // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0034(0x0004) MISSED OFFSET
	struct FName                                       FontTypeKey;                                              // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TextPosY;                                                 // 0x0040(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TextPosX;                                                 // 0x0044(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TextMain;                                                 // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ThreeRowsTextLeft;                                        // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ThreeRowsTextCenter;                                      // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       ThreeRowsTextRight;                                       // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TwoRowsTextLeft;                                          // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TwoRowsTextRight;                                         // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       TextCompany;                                              // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x10];                                      // 0x0080(0x0010) UNKNOWN PROPERTY: ArrayProperty JackGame.JackDataTableUIStaffRoll.Image
	TArray<struct FVector2D>                           ImageOffset;                                              // 0x0090(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	bool                                               bDontUseFirst;                                            // 0x00A0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x7];                                       // 0x00A1(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableUITabiNoKokoroe
// 0x0060 (0x0068 - 0x0008)
struct FJackDataTableUITabiNoKokoroe : public FTableRowBase
{
	struct FName                                       TitleText;                                                // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       FullTitleText;                                            // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MainText;                                                 // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bShowInTabiNoKokoroe;                                     // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackTutorialCategory>                 Category;                                                 // 0x0021(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bDisplayTexture;                                          // 0x0022(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0023(0x0005) MISSED OFFSET
	unsigned char                                      UnknownData01[0x18];                                      // 0x0023(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableUITabiNoKokoroe.TopTexture
	struct FName                                       SubPageKey1;                                              // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SubPageKey2;                                              // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SubPageKey3;                                              // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SubPageKey4;                                              // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       GameFlag;                                                 // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableUITokugiPanelScenario
// 0x0038 (0x0040 - 0x0008)
struct FJackDataTableUITokugiPanelScenario : public FTableRowBase
{
	TEnumAsByte<EJackCharacter>                        TargetCharacter;                                          // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                Index;                                                    // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackTokugiPanelScenario>              TokugiPanelScenario;                                      // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData02[0x18];                                      // 0x0011(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableUITokugiPanelScenario.BackgroundTexture
	struct FVector2D                                   PanelPosOffset;                                           // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   SkillLineEffectPosOffset;                                 // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableUITokugiPanelSkillLine
// 0x0030 (0x0038 - 0x0008)
struct FJackDataTableUITokugiPanelSkillLine : public FTableRowBase
{
	TEnumAsByte<EJackCharacter>                        TargetCharacter;                                          // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackSkillLine>                        SkillLineType;                                            // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x000A(0x0006) MISSED OFFSET
	struct FName                                       Description;                                              // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   StartPoint;                                               // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	struct FVector2D                                   FlashEffectPos;                                           // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, DisableEditOnInstance, IsPlainOldData)
	TArray<TEnumAsByte<EJackTokugiPanelScenario>>      ScenarioFlagList;                                         // 0x0028(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableUmaRaceVehicleEntry
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableUmaRaceVehicleEntry : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableUmaRaceVehicleEntry.VehicleClass
	TEnumAsByte<EJackUmaRaceHorseType>                 HorseType;                                                // 0x0020(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsRandomEntry;                                           // 0x0021(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x6];                                       // 0x0022(0x0006) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableUmaRaceEntryData
// 0x0058 (0x0060 - 0x0008)
struct FJackDataTableUmaRaceEntryData : public FTableRowBase
{
	struct FName                                       PlayerName;                                               // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackUmaRaceHorseType>                 HorseType;                                                // 0x0010(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x18];                                      // 0x0011(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableUmaRaceEntryData.NPCBlueprintClass
	int                                                SpecifyPaddockNumber;                                     // 0x0030(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsModelScale;                                            // 0x0034(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	int                                                PathNo;                                                   // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x4];                                       // 0x003C(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData04[0x18];                                      // 0x003C(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableUmaRaceEntryData.TimeScheduleDataTable
	int                                                ImpactPriority;                                           // 0x0058(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x4];                                       // 0x005C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableUmaRaceResultCamera
// 0x0028 (0x0030 - 0x0008)
struct FJackDataTableUmaRaceResultCamera : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableUmaRaceResultCamera.CameraAnim
	float                                              PlayTime;                                                 // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              PlayRate;                                                 // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bIsOrbitRotation;                                         // 0x0028(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x3];                                       // 0x0029(0x0003) MISSED OFFSET
	float                                              StartTime;                                                // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableUmaRaceTimeSchedule
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableUmaRaceTimeSchedule : public FTableRowBase
{
	bool                                               bIsEnable;                                                // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0009(0x0003) MISSED OFFSET
	int                                                LapCount;                                                 // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Ratio;                                                    // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Time;                                                     // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TimeRange;                                                // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableUserDefinedTag
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableUserDefinedTag : public FTableRowBase
{
	bool                                               bInUse;                                                   // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0009(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableVehicleList
// 0x0038 (0x0040 - 0x0008)
struct FJackDataTableVehicleList : public FTableRowBase
{
	struct FName                                       MonsterID;                                                // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       DisplayName;                                              // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       LODBoundsName;                                            // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WeakActionMonsterAddLevel;                                // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData01[0x18];                                      // 0x0024(0x0018) UNKNOWN PROPERTY: SoftClassProperty JackGame.JackDataTableVehicleList.VehicleAsset
};

// ScriptStruct JackGame.JackDataTableVehicleRiderSyncAnimationTable
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableVehicleRiderSyncAnimationTable : public FTableRowBase
{
	struct FName                                       RiderAnimation;                                           // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       VehicleAnimation;                                         // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableVoiceDramaDLCInfo
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableVoiceDramaDLCInfo : public FTableRowBase
{
	struct FString                                     ScenarioMinute;                                           // 0x0008(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FString                                     ScenarioSecond;                                           // 0x0018(0x0010) (Edit, ZeroConstructor, EditConst)
};

// ScriptStruct JackGame.JackDataTableVoiceDramaHDPafuPafu
// 0x0160 (0x0168 - 0x0008)
struct FJackDataTableVoiceDramaHDPafuPafu : public FTableRowBase
{
	int                                                RoundNum;                                                 // 0x0008(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FString                                     LeftRight;                                                // 0x0010(0x0010) (Edit, ZeroConstructor, EditConst)
	int                                                Health;                                                   // 0x0020(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                FacialChange1;                                            // 0x0024(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                FacialChange2;                                            // 0x0028(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                FacialChange3;                                            // 0x002C(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0030(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableVoiceDramaHDPafuPafu.FacialAsset1
	unsigned char                                      UnknownData02[0x18];                                      // 0x0048(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableVoiceDramaHDPafuPafu.FacialAsset2
	unsigned char                                      UnknownData03[0x18];                                      // 0x0060(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableVoiceDramaHDPafuPafu.FacialAsset3
	unsigned char                                      UnknownData04[0x18];                                      // 0x0078(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableVoiceDramaHDPafuPafu.FacialAsset4
	unsigned char                                      UnknownData05[0x18];                                      // 0x0090(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableVoiceDramaHDPafuPafu.FacialAsset5
	unsigned char                                      UnknownData06[0x18];                                      // 0x00A8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableVoiceDramaHDPafuPafu.BackgroundAsset
	unsigned char                                      UnknownData07[0x18];                                      // 0x00C0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableVoiceDramaHDPafuPafu.VoiceDramaBackgroundAsset
	unsigned char                                      UnknownData08[0x18];                                      // 0x00D8(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableVoiceDramaHDPafuPafu.StartVoice
	unsigned char                                      UnknownData09[0x18];                                      // 0x00F0(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableVoiceDramaHDPafuPafu.PafuPafuVoice1
	unsigned char                                      UnknownData10[0x18];                                      // 0x0108(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableVoiceDramaHDPafuPafu.PafuPafuVoice2
	unsigned char                                      UnknownData11[0x18];                                      // 0x0120(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableVoiceDramaHDPafuPafu.PafuPafuVoice3
	unsigned char                                      UnknownData12[0x18];                                      // 0x0138(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableVoiceDramaHDPafuPafu.KnockoutVoice
	unsigned char                                      UnknownData13[0x18];                                      // 0x0150(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableVoiceDramaHDPafuPafu.WaitVoice
};

// ScriptStruct JackGame.JackDataTableVoiceDramaHDPafuPafuSoundEffect
// 0x0018 (0x0020 - 0x0008)
struct FJackDataTableVoiceDramaHDPafuPafuSoundEffect : public FTableRowBase
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0008(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableVoiceDramaHDPafuPafuSoundEffect.SoundAsset
};

// ScriptStruct JackGame.JackDataTableVoiceDramaInfo
// 0x0060 (0x0068 - 0x0008)
struct FJackDataTableVoiceDramaInfo : public FTableRowBase
{
	int                                                ScenarioNo;                                               // 0x0008(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
	struct FString                                     ScenarioTitle;                                            // 0x0010(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FString                                     OverviewText;                                             // 0x0020(0x0010) (Edit, ZeroConstructor, EditConst)
	unsigned char                                      UnknownData01[0x18];                                      // 0x0030(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableVoiceDramaInfo.OverviewTexture
	struct FString                                     ScenarioMinute;                                           // 0x0048(0x0010) (Edit, ZeroConstructor, EditConst)
	struct FString                                     ScenarioSecond;                                           // 0x0058(0x0010) (Edit, ZeroConstructor, EditConst)
};

// ScriptStruct JackGame.JackDataTableVoiceLabel
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableVoiceLabel : public FTableRowBase
{
	bool                                               bResidentResource;                                        // 0x0008(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCondition_Nemuri;                                        // 0x0009(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCondition_Mahi;                                          // 0x000A(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCondition_Konran;                                        // 0x000B(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bCondition_Miryou;                                        // 0x000C(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x000D(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableVoicePreset
// 0x0048 (0x0050 - 0x0008)
struct FJackDataTableVoicePreset : public FTableRowBase
{
	int                                                Priority;                                                 // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              DelayTime;                                                // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      Flags;                                                    // 0x0010(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	unsigned char                                      UnknownData01[0x18];                                      // 0x0011(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableVoicePreset.VoiceAsset
	float                                              DelayTimeEN;                                              // 0x0030(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      FlagsEN;                                                  // 0x0034(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x3];                                       // 0x0035(0x0003) MISSED OFFSET
	unsigned char                                      UnknownData03[0x18];                                      // 0x0035(0x0018) UNKNOWN PROPERTY: SoftObjectProperty JackGame.JackDataTableVoicePreset.VoiceAssetEN
};

// ScriptStruct JackGame.JackDataTableWeaponHiddenCoordinate
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableWeaponHiddenCoordinate : public FTableRowBase
{
	TArray<struct FName>                               WeaponHiddenSocketNames;                                  // 0x0008(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               WeaponHiddenSocketNamesForBattle;                         // 0x0018(0x0010) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackDataTableWeather
// 0x0138 (0x0140 - 0x0008)
struct FJackDataTableWeather : public FTableRowBase
{
	float                                              Probability0;                                             // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather0_Morning;                                         // 0x000C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel0_Morning;                                       // 0x000D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000E(0x0002) MISSED OFFSET
	int                                                WindAngle0_Morning;                                       // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute0_Morning;                           // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather0_Daytime;                                         // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel0_Daytime;                                       // 0x0019(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData01[0x2];                                       // 0x001A(0x0002) MISSED OFFSET
	int                                                WindAngle0_Daytime;                                       // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute0_Daytime;                           // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather0_Evening;                                         // 0x0024(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel0_Evening;                                       // 0x0025(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData02[0x2];                                       // 0x0026(0x0002) MISSED OFFSET
	int                                                WindAngle0_Evening;                                       // 0x0028(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute0_Evening;                           // 0x002C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather0_Night;                                           // 0x0030(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel0_Night;                                         // 0x0031(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x0032(0x0002) MISSED OFFSET
	int                                                WindAngle0_Night;                                         // 0x0034(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute0_Night;                             // 0x0038(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Probability1;                                             // 0x003C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather1_Morning;                                         // 0x0040(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel1_Morning;                                       // 0x0041(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData04[0x2];                                       // 0x0042(0x0002) MISSED OFFSET
	int                                                WindAngle1_Morning;                                       // 0x0044(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute1_Morning;                           // 0x0048(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather1_Daytime;                                         // 0x004C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel1_Daytime;                                       // 0x004D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData05[0x2];                                       // 0x004E(0x0002) MISSED OFFSET
	int                                                WindAngle1_Daytime;                                       // 0x0050(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute1_Daytime;                           // 0x0054(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather1_Evening;                                         // 0x0058(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel1_Evening;                                       // 0x0059(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData06[0x2];                                       // 0x005A(0x0002) MISSED OFFSET
	int                                                WindAngle1_Evening;                                       // 0x005C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute1_Evening;                           // 0x0060(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather1_Night;                                           // 0x0064(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel1_Night;                                         // 0x0065(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData07[0x2];                                       // 0x0066(0x0002) MISSED OFFSET
	int                                                WindAngle1_Night;                                         // 0x0068(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute1_Night;                             // 0x006C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Probability2;                                             // 0x0070(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather2_Morning;                                         // 0x0074(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel2_Morning;                                       // 0x0075(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData08[0x2];                                       // 0x0076(0x0002) MISSED OFFSET
	int                                                WindAngle2_Morning;                                       // 0x0078(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute2_Morning;                           // 0x007C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather2_Daytime;                                         // 0x0080(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel2_Daytime;                                       // 0x0081(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData09[0x2];                                       // 0x0082(0x0002) MISSED OFFSET
	int                                                WindAngle2_Daytime;                                       // 0x0084(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute2_Daytime;                           // 0x0088(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather2_Evening;                                         // 0x008C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel2_Evening;                                       // 0x008D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData10[0x2];                                       // 0x008E(0x0002) MISSED OFFSET
	int                                                WindAngle2_Evening;                                       // 0x0090(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute2_Evening;                           // 0x0094(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather2_Night;                                           // 0x0098(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel2_Night;                                         // 0x0099(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData11[0x2];                                       // 0x009A(0x0002) MISSED OFFSET
	int                                                WindAngle2_Night;                                         // 0x009C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute2_Night;                             // 0x00A0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Probability3;                                             // 0x00A4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather3_Morning;                                         // 0x00A8(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel3_Morning;                                       // 0x00A9(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData12[0x2];                                       // 0x00AA(0x0002) MISSED OFFSET
	int                                                WindAngle3_Morning;                                       // 0x00AC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute3_Morning;                           // 0x00B0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather3_Daytime;                                         // 0x00B4(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel3_Daytime;                                       // 0x00B5(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData13[0x2];                                       // 0x00B6(0x0002) MISSED OFFSET
	int                                                WindAngle3_Daytime;                                       // 0x00B8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute3_Daytime;                           // 0x00BC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather3_Evening;                                         // 0x00C0(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel3_Evening;                                       // 0x00C1(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData14[0x2];                                       // 0x00C2(0x0002) MISSED OFFSET
	int                                                WindAngle3_Evening;                                       // 0x00C4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute3_Evening;                           // 0x00C8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather3_Night;                                           // 0x00CC(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel3_Night;                                         // 0x00CD(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData15[0x2];                                       // 0x00CE(0x0002) MISSED OFFSET
	int                                                WindAngle3_Night;                                         // 0x00D0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute3_Night;                             // 0x00D4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Probability4;                                             // 0x00D8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather4_Morning;                                         // 0x00DC(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel4_Morning;                                       // 0x00DD(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData16[0x2];                                       // 0x00DE(0x0002) MISSED OFFSET
	int                                                WindAngle4_Morning;                                       // 0x00E0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute4_Morning;                           // 0x00E4(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather4_Daytime;                                         // 0x00E8(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel4_Daytime;                                       // 0x00E9(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData17[0x2];                                       // 0x00EA(0x0002) MISSED OFFSET
	int                                                WindAngle4_Daytime;                                       // 0x00EC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute4_Daytime;                           // 0x00F0(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather4_Evening;                                         // 0x00F4(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel4_Evening;                                       // 0x00F5(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData18[0x2];                                       // 0x00F6(0x0002) MISSED OFFSET
	int                                                WindAngle4_Evening;                                       // 0x00F8(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute4_Evening;                           // 0x00FC(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather4_Night;                                           // 0x0100(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel4_Night;                                         // 0x0101(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData19[0x2];                                       // 0x0102(0x0002) MISSED OFFSET
	int                                                WindAngle4_Night;                                         // 0x0104(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute4_Night;                             // 0x0108(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              Probability5;                                             // 0x010C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather5_Morning;                                         // 0x0110(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel5_Morning;                                       // 0x0111(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData20[0x2];                                       // 0x0112(0x0002) MISSED OFFSET
	int                                                WindAngle5_Morning;                                       // 0x0114(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute5_Morning;                           // 0x0118(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather5_Daytime;                                         // 0x011C(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel5_Daytime;                                       // 0x011D(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData21[0x2];                                       // 0x011E(0x0002) MISSED OFFSET
	int                                                WindAngle5_Daytime;                                       // 0x0120(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute5_Daytime;                           // 0x0124(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather5_Evening;                                         // 0x0128(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel5_Evening;                                       // 0x0129(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData22[0x2];                                       // 0x012A(0x0002) MISSED OFFSET
	int                                                WindAngle5_Evening;                                       // 0x012C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute5_Evening;                           // 0x0130(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWeather>                     Weather5_Night;                                           // 0x0134(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	TEnumAsByte<EJackWorldWindLevel>                   WindLevel5_Night;                                         // 0x0135(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData23[0x2];                                       // 0x0136(0x0002) MISSED OFFSET
	int                                                WindAngle5_Night;                                         // 0x0138(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                WindAngleChangeMinute5_Night;                             // 0x013C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableYochiList
// 0x0020 (0x0028 - 0x0008)
struct FJackDataTableYochiList : public FTableRowBase
{
	struct FName                                       MapVisitID;                                               // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       MapNameID;                                                // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bSpecialFlag;                                             // 0x0018(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0019(0x0007) MISSED OFFSET
	struct FName                                       CheckMarkFlag;                                            // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackCutSceneDistributionExponentInfo
// 0x000C
struct FJackCutSceneDistributionExponentInfo
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct JackGame.JackCutSceneDynamicShadowDistanceMovableLightInfo
// 0x000C
struct FJackCutSceneDynamicShadowDistanceMovableLightInfo
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct JackGame.JackEventBattleSyuurenjouInfo
// 0x0010
struct FJackEventBattleSyuurenjouInfo
{
	struct FName                                       SirenID;                                                  // 0x0000(0x0008) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	int                                                BattleIndex;                                              // 0x0008(0x0004) (Edit, ZeroConstructor, EditConst, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableFacialPresetInfo
// 0x0010 (0x0018 - 0x0008)
struct FJackDataTableFacialPresetInfo : public FTableRowBase
{
	struct FName                                       UpperFaceName;                                            // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       LowerFaceName;                                            // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackForcedLODTrackInstRestoreInfo
// 0x0010
struct FJackForcedLODTrackInstRestoreInfo
{
	class USkeletalMeshComponent*                      SKComponent;                                              // 0x0000(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
	int                                                DefaultLODLevel;                                          // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackGameResumeCommandInfo
// 0x0028
struct FJackGameResumeCommandInfo
{
	struct FName                                       Category;                                                 // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       Value1;                                                   // 0x0008(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       Value2;                                                   // 0x0010(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TArray<struct FName>                               Cmds;                                                     // 0x0018(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
};

// ScriptStruct JackGame.JackGameCharacterSeedCorrectParameters
// 0x0028
struct FJackGameCharacterSeedCorrectParameters
{
	int                                                Tikara;                                                   // 0x0000(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                Minomamori;                                               // 0x0004(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                Subayasa;                                                 // 0x0008(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                Kiyousa;                                                  // 0x000C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                Miryoku;                                                  // 0x0010(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                KougekiMaryoku;                                           // 0x0014(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                KaifukuMaryoku;                                           // 0x0018(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                MaxHP;                                                    // 0x001C(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                MaxMP;                                                    // 0x0020(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
	int                                                TokugiPoint;                                              // 0x0024(0x0004) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData)
};

// ScriptStruct JackGame.JackLevelUpTableDict
// 0x0010
struct FJackLevelUpTableDict
{
	TEnumAsByte<EJackCharacter>                        Type;                                                     // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	class UDataTable*                                  DataTable;                                                // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackGameFlagDefCutScene
// 0x0001
struct FJackGameFlagDefCutScene
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackGameFlagDefGameProgress
// 0x0001
struct FJackGameFlagDefGameProgress
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackGameFlagDefGimmick
// 0x0001
struct FJackGameFlagDefGimmick
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackGameFlagDefGuide
// 0x0001
struct FJackGameFlagDefGuide
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackGameFlagDefMiniGame
// 0x0001
struct FJackGameFlagDefMiniGame
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackGameFlagDefQuest
// 0x0001
struct FJackGameFlagDefQuest
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackGameFlagDefScenario
// 0x0001
struct FJackGameFlagDefScenario
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackGameFlagDefSystem
// 0x0001
struct FJackGameFlagDefSystem
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackGameFlagDefTemporary
// 0x0001
struct FJackGameFlagDefTemporary
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackDlcInformation
// 0x0028
struct FJackDlcInformation
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) MISSED OFFSET
};

// ScriptStruct JackGame.JackLightChangeInfo
// 0x0008
struct FJackLightChangeInfo
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackLipDataTableParser
// 0x00B8
struct FJackLipDataTableParser
{
	unsigned char                                      UnknownData00[0xB8];                                      // 0x0000(0x00B8) MISSED OFFSET
};

// ScriptStruct JackGame.JackLDT_TextSerifuIE
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextSerifuIE : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextSerifuFukidasiIE
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextSerifuFukidasiIE : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextSerifuCS
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextSerifuCS : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextPackScenario
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextPackScenario : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_S050
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_S050 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_S030
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_S030 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_NA
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_NA : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_C300
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_C300 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_C020
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_C020 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_C010
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_C010 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_S020
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_S020 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_B170
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_B170 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_B160
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_B160 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_B150
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_B150 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_B120
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_B120 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_B110
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_B110 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_B100
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_B100 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_B090
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_B090 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_B080
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_B080 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_B070
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_B070 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_B060
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_B060 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_B040
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_B040 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_B030
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_B030 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_B020
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_B020 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_A180
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_A180 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_A170
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_A170 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_A150
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_A150 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_A130
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_A130 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_A110
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_A110 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_A100
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_A100 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_A080
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_A080 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_A070
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_A070 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_A060
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_A060 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_A050
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_A050 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_A030
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_A030 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_A020
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_A020 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkData_A010
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkData_A010 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_BoukenGuide
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_BoukenGuide : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ScenarioArasuzi
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ScenarioArasuzi : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Weather
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Weather : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ScheduledKira
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ScheduledKira : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RuraRestriction
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RuraRestriction : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Rura
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Rura : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ModeChangeType
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ModeChangeType : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Map
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Map : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Restart
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Restart : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ItemGettable_TreasureBox
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ItemGettable_TreasureBox : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ItemGettable_GmmickDrop
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ItemGettable_GmmickDrop : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ItemGettable_Common
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ItemGettable_Common : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_BookShelf
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_BookShelf : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_BattleAutoCameraCollision
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_BattleAutoCameraCollision : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDrama_V_131
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDrama_V_131 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDrama_V_111
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDrama_V_111 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDrama_V_101
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDrama_V_101 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDrama_V_090
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDrama_V_090 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDrama_V_080
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDrama_V_080 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDrama_V_070
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDrama_V_070 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDrama_V_060
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDrama_V_060 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDrama_V_050
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDrama_V_050 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDrama_V_040
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDrama_V_040 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDrama_V_030
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDrama_V_030 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDrama_V_020
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDrama_V_020 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDrama_V_010
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDrama_V_010 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDrama_V_000
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDrama_V_000 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDrama_Sample
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDrama_Sample : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDrama_HDPafuPafu_SoundEffect
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDrama_HDPafuPafu_SoundEffect : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDrama_HDPafuPafu
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDrama_HDPafuPafu : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDramaInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDramaInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDramaDLCInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDramaDLCInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_V006_Upper
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_V006_Upper : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_V006_BodyEx
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_V006_BodyEx : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_V004_Upper
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_V004_Upper : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_V004_Hair
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_V004_Hair : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_V004_BodyEx
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_V004_BodyEx : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_V003_Hair
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_V003_Hair : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_V002_BodyEx
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_V002_BodyEx : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_V001_Hair
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_V001_Hair : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_G381
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_G381 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_G377E007_Up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_G377E007_Up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_G377E007_Low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_G377E007_Low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_G377E005
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_G377E005 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Vehicle_V205_E001_Sync
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Vehicle_V205_E001_Sync : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Vehicle_V204_E001_Sync
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Vehicle_V204_E001_Sync : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Vehicle_V203_E001_Sync
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Vehicle_V203_E001_Sync : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Vehicle_V202_E001_Sync
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Vehicle_V202_E001_Sync : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Vehicle_V201_E001_Sync
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Vehicle_V201_E001_Sync : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Vehicle_V106_E001_Sync
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Vehicle_V106_E001_Sync : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Vehicle_V105_E001_Sync
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Vehicle_V105_E001_Sync : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Vehicle_V104_E001_Sync
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Vehicle_V104_E001_Sync : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Vehicle_V103_E001_Sync
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Vehicle_V103_E001_Sync : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Vehicle_V102_E001_Sync
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Vehicle_V102_E001_Sync : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Vehicle_V101_E001_Sync
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Vehicle_V101_E001_Sync : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Vehicle_V012_E001_Sync
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Vehicle_V012_E001_Sync : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Vehicle_V001_E001_Sync
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Vehicle_V001_E001_Sync : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Vehicle_V001_E001_P008_Sync
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Vehicle_V001_E001_P008_Sync : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VehicleList
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VehicleList : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UITokugiPanelSkillLine
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UITokugiPanelSkillLine : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UITokugiPanelScenario
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UITokugiPanelScenario : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UIStaffRoll
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UIStaffRoll : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UIShipHarborInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UIShipHarborInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UIPlatformSpecificText
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UIPlatformSpecificText : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UINeighborMapInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UINeighborMapInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UIMessageSpeed
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UIMessageSpeed : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UIMapTextConfig
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UIMapTextConfig : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UIMapInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UIMapInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UILoadingTips
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UILoadingTips : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UIKatagaki
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UIKatagaki : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UIFukidasiFaceIcon
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UIFukidasiFaceIcon : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UIFaceIcon
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UIFaceIcon : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UICurrentPlaceInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UICurrentPlaceInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UIActionSort
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UIActionSort : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UIActionFieldText
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UIActionFieldText : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TokugiPanelInfoTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TokugiPanelInfoTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceDrama_V_121
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceDrama_V_121 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextSetYadoya
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextSetYadoya : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextSetShop
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextSetShop : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextSetMedal
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextSetMedal : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextSetKyoukai
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextSetKyoukai : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PassiveTokugiTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PassiveTokugiTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextSetCasinoCoin
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextSetCasinoCoin : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextRuby
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextRuby : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextPackUI
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextPackUI : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextPackPlatform
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextPackPlatform : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextPackMiniGame
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextPackMiniGame : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextPackLocalization
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextPackLocalization : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextPackItem
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextPackItem : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextPackCommon
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextPackCommon : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextPackBattle
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextPackBattle : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextSetGinkou
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextSetGinkou : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataSystem
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataSystem : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataMiniGame
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataMiniGame : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataMenu
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataMenu : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataLocalization
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataLocalization : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataGuide
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataGuide : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataGame
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataGame : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataFukidasi
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataFukidasi : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataBattle
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataBattle : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_OverrideText
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_OverrideText : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoicePreset
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoicePreset : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_VoiceLabel
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_VoiceLabel : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataTest
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataTest : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ParticleSound
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ParticleSound : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ME
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ME : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_EnvSoundTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_EnvSoundTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_DamageSoundTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_DamageSoundTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkVoice
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkVoice : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CoordSoundTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CoordSoundTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_BGMVolume2D
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_BGMVolume2D : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_BGMVolume
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_BGMVolume : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_BGMScenario
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_BGMScenario : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_BGM
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_BGM : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_BattleResultMotion
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_BattleResultMotion : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Re435_breath
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Re435_breath : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Re430_breath
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Re430_breath : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Renkei
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Renkei : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ProgRenkeiFormation
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ProgRenkeiFormation : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ProgRenkei
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ProgRenkei : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterRenkei
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterRenkei : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MatineeRenkei
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MatineeRenkei : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MatineelevelRenkeiDivision
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MatineelevelRenkeiDivision : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CollideSoundTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CollideSoundTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_QuestTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_QuestTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PlayerBattleAI
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PlayerBattleAI : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_LevelUp_P011
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_LevelUp_P011 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_LevelUp_P008
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_LevelUp_P008 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_LevelUp_P007
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_LevelUp_P007 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_LevelUp_P006
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_LevelUp_P006 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_LevelUp_P005
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_LevelUp_P005 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_LevelUp_P004
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_LevelUp_P004 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_LevelUp_P003
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_LevelUp_P003 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_LevelUp_P002
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_LevelUp_P002 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_LevelUp_P001
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_LevelUp_P001 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_FriendCharacter
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_FriendCharacter : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkPositionInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkPositionInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkMotionTag
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkMotionTag : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkCutSceneFlags
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkCutSceneFlags : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkCharacter
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkCharacter : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PartyTalkBehaviorState
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PartyTalkBehaviorState : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_OddEffectTag
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_OddEffectTag : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_OddEffectStatus
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_OddEffectStatus : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_OddEffectSlide
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_OddEffectSlide : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_OddEffectMotion
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_OddEffectMotion : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_OddEffectFacial
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_OddEffectFacial : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_OddEffectEffect
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_OddEffectEffect : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_OddEffectClearDamagePer
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_OddEffectClearDamagePer : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_OddEffectBattleText
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_OddEffectBattleText : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_YochiList
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_YochiList : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_NPCUsoTalk
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_NPCUsoTalk : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_NPCReaction
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_NPCReaction : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_NPCInterruptControl
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_NPCInterruptControl : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_NPCImportanceScenari
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_NPCImportanceScenari : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_GuestNPCList
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_GuestNPCList : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Monster_FacialTemplate
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Monster_FacialTemplate : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M568
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M568 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M562
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M562 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M547
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M547 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M530
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M530 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M520
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M520 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M506
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M506 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M505
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M505 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M501
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M501 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M229
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M229 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M206
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M206 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M148
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M148 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M123
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M123 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M085
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M085 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M068
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M068 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M067
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M067 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M036
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M036 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M034
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M034 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M014
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M014 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M007
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M007 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M006
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M006 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Facial_M005
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Facial_M005 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M614
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M614 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M611
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M611 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M607
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M607 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M601
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M601 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M569
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M569 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M542
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M542 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M541
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M541 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M229
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M229 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M216
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M216 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M207
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M207 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M206
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M206 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M203
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M203 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M172
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M172 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M158
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M158 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M148
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M148 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M131
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M131 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M126
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M126 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M125
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M125 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M111
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M111 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M043
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M043 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M022
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M022 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AnimDynamics_M004
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AnimDynamics_M004 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ZukanSeisokuti
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ZukanSeisokuti : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ZukanMotion
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ZukanMotion : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ZukanMemo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ZukanMemo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Zukan
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Zukan : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterSibariParameter
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterSibariParameter : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterPhysicalProperty
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterPhysicalProperty : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterMetalEncount
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterMetalEncount : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterFieldMovingBounds
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterFieldMovingBounds : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterFieldAI
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterFieldAI : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDrop
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDrop : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_Sea
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_Sea : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_Qujira
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_Qujira : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_Other
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_Other : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_N_F18
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_N_F18 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_N_F16
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_N_F16 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_N_D17
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_N_D17 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_N_D14
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_N_D14 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_N_D08
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_N_D08 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_N_D04
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_N_D04 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_Islands
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_Islands : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_F20
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_F20 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_F19
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_F19 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_F18
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_F18 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_F16
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_F16 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_F15
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_F15 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_F13
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_F13 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_F11
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_F11 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_F10
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_F10 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_F08
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_F08 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_F07
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_F07 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_F06
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_F06 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_F05
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_F05 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_F04
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_F04 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_F03
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_F03 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_F02
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_F02 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_F01
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_F01 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_Etc
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_Etc : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_D20
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_D20 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_D17
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_D17 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_D16
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_D16 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_D15
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_D15 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_D14
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_D14 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_D12
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_D12 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_D11
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_D11 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_D09
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_D09 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_D08
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_D08 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_D07
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_D07 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_D05
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_D05 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_D04
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_D04 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_D03
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_D03 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_D02
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_D02 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterDeploy_D01
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterDeploy_D01 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterBattleAI
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterBattleAI : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterAppear
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterAppear : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_HiddenBonePreset
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_HiddenBonePreset : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleS_003_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleS_003_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleS_003
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleS_003 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleS_002_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleS_002_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleS_002
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleS_002 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleS_001_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleS_001_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleS_001
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleS_001 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceEDT_RankS_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceEDT_RankS_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceEDT_RankS_H
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceEDT_RankS_H : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleF_003
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleF_003 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleF_002
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleF_002 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleF_001
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleF_001 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceEDT_RankF
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceEDT_RankF : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleD_003_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleD_003_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleD_003
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleD_003 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleD_002_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleD_002_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleD_002
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleD_002 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleD_001_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleD_001_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleD_001
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleD_001 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceEDT_RankD_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceEDT_RankD_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceEDT_RankD_H
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceEDT_RankD_H : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleC_003_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleC_003_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleC_003
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleC_003 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleC_002_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleC_002_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleC_002
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleC_002 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleC_001_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleC_001_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleC_001
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleC_001 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceEDT_RankC_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceEDT_RankC_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceEDT_RankC_H
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceEDT_RankC_H : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleB_003_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleB_003_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleB_003
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleB_003 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleB_002_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleB_002_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleB_002
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleB_002 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleB_001_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleB_001_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleB_001
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleB_001 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceEDT_RankB_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceEDT_RankB_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceEDT_RankB_H
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceEDT_RankB_H : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleA_003_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleA_003_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleA_003
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleA_003 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleA_002_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleA_002_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleA_002
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleA_002 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleA_001_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleA_001_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceTimeScheduleA_001
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceTimeScheduleA_001 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceEDT_RankA_N
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceEDT_RankA_N : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceEDT_RankA_H
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceEDT_RankA_H : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceVehicleEntryDataTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceVehicleEntryDataTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceResultCamera
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceResultCamera : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UmaRaceMapDataTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UmaRaceMapDataTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_SlotWildDataTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_SlotWildDataTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_SlotReelDataTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_SlotReelDataTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_SlotReachDataTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_SlotReachDataTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_SlotPayoutDataTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_SlotPayoutDataTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_SlotNormalRoleDataTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_SlotNormalRoleDataTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_SlotMetalSpinRoleDataTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_SlotMetalSpinRoleDataTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_SlotMENormal
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_SlotMENormal : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_SlotMEMamono
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_SlotMEMamono : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_SlotMamonoNormalRoleDataTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_SlotMamonoNormalRoleDataTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_SlotMamonoMetalSpinRoleDataTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_SlotMamonoMetalSpinRoleDataTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_SlotHitLineDataTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_SlotHitLineDataTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_SlotAnimAssetDataTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_SlotAnimAssetDataTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RouletteTrasureCoinDataTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RouletteTrasureCoinDataTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RouletteDataTableTexture
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RouletteDataTableTexture : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RouletteDataTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RouletteDataTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerItem_1Coin_Red
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerItem_1Coin_Red : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerItem_1Coin_Gold
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerItem_1Coin_Gold : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerItem_1Coin_Black
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerItem_1Coin_Black : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerItem_10Coin_Red
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerItem_10Coin_Red : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerItem_10Coin_Gold
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerItem_10Coin_Gold : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerItem_10Coin_Black
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerItem_10Coin_Black : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerItem_100Coin_Red
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerItem_100Coin_Red : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_SlotHitProbabilityDataTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_SlotHitProbabilityDataTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerItem_100Coin_Gold
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerItem_100Coin_Gold : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerItem_100Coin_Black
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerItem_100Coin_Black : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerWinningRate
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerWinningRate : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerTakaraBakoProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerTakaraBakoProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerPayoutFraction
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerPayoutFraction : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerInexpensiveCoin
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerInexpensiveCoin : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerHandDataTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerHandDataTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerDoubleUpDataTable100
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerDoubleUpDataTable100 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerDoubleUpDataTable10
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerDoubleUpDataTable10 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerDoubleUpDataTable1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerDoubleUpDataTable1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerDoubleUpBaseCardRate
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerDoubleUpBaseCardRate : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerCardTexture
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerCardTexture : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterRecruitProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterRecruitProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterRankSelectProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterRankSelectProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterRankMap
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterRankMap : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterParam
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterParam : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterList_Rank_SS
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterList_Rank_SS : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterList_Rank_S
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterList_Rank_S : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterList_Rank_F
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterList_Rank_F : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterList_Rank_E
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterList_Rank_E : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterList_Rank_D
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterList_Rank_D : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterList_Rank_C
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterList_Rank_C : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterList_Rank_B
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterList_Rank_B : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterList_Rank_A
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterList_Rank_A : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterList_CZ2
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterList_CZ2 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterList_CZ1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterList_CZ1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterEncounterProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterEncounterProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMidBossMonsterSelectProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMidBossMonsterSelectProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotLowestFeedNumberProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotLowestFeedNumberProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBossMonsterSelectProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBossMonsterSelectProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBonusMonsterListLevel5
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBonusMonsterListLevel5 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBonusMonsterListLevel4
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBonusMonsterListLevel4 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBonusMonsterListLevel3
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBonusMonsterListLevel3 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBonusMonsterListLevel2
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBonusMonsterListLevel2 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBonusMonsterListLevel1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBonusMonsterListLevel1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBonusMonsterEncounterProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBonusMonsterEncounterProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBehaviorProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBehaviorProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotTreasureBoxSelectProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotTreasureBoxSelectProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotItemProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotItemProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotItemParam
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotItemParam : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotFlavorItemRank_Sp3
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotFlavorItemRank_Sp3 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotFlavorItemRank_Sp2
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotFlavorItemRank_Sp2 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotFlavorItemRank_Sp1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotFlavorItemRank_Sp1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotFlavorItemRankSelectProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotFlavorItemRankSelectProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotFlavorItemRank5
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotFlavorItemRank5 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotFlavorItemRank4
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotFlavorItemRank4 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotFlavorItemRank3
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotFlavorItemRank3 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotFlavorItemRank2
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotFlavorItemRank2 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotFlavorItemRank1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotFlavorItemRank1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotFlavorItemKindSelectProbability2
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotFlavorItemKindSelectProbability2 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotFlavorItemKindSelectProbability1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotFlavorItemKindSelectProbability1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotYakumonoFlashProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotYakumonoFlashProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotUraModeLottery
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotUraModeLottery : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotUnionScenario
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotUnionScenario : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotUnionRouteProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotUnionRouteProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotUnionRouteNum
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotUnionRouteNum : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotUnionMonsterProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotUnionMonsterProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotUnionButtonBranch
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotUnionButtonBranch : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotTextures
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotTextures : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSptTBox
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSptTBox : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSptPushProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSptPushProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSptProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSptProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSptLastPushProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSptLastPushProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSptLastActProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSptLastActProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSptHandsPoint
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSptHandsPoint : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSptCycleProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSptCycleProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSptContinueProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSptContinueProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSptBigPushProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSptBigPushProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSptAuraPoint
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSptAuraPoint : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSptActProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSptActProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSimWinProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSimWinProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSimulationCount
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSimulationCount : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSimulation
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSimulation : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSimohuriRisingProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSimohuriRisingProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSimExactlyProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSimExactlyProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotShimohuriResultME
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotShimohuriResultME : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotShimohuriRefundSetting
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotShimohuriRefundSetting : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotShimohuriAppeareRate
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotShimohuriAppeareRate : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotShimofuriYakumono
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotShimofuriYakumono : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotShimofuriContProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotShimofuriContProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotShimofuriChanceMonsterRankSelect
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotShimofuriChanceMonsterRankSelect : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotShimofuriChance
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotShimofuriChance : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSettingValueProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSettingValueProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSE
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSE : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotScenarioTBoxOrbProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotScenarioTBoxOrbProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotScenarioTBoxFeedProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotScenarioTBoxFeedProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotScenarioTBox
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotScenarioTBox : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotScenarioSlime
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotScenarioSlime : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotScenarioRouteNum
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotScenarioRouteNum : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotScenarioRoute
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotScenarioRoute : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotScenarioRandom
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotScenarioRandom : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotScenarioPattern
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotScenarioPattern : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotScenarioMamono
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotScenarioMamono : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotScenarioHazure
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotScenarioHazure : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotReelTexture
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotReelTexture : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotReelSoundProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotReelSoundProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotReelLightOff
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotReelLightOff : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotReelLamp_Ken
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotReelLamp_Ken : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotReelLamp_Hayabusa
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotReelLamp_Hayabusa : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotReelLamp_Anim08
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotReelLamp_Anim08 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotReelLamp_Anim07
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotReelLamp_Anim07 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotReelLamp_Anim06
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotReelLamp_Anim06 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotReelLamp_Anim05
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotReelLamp_Anim05 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotReelLamp_Anim04
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotReelLamp_Anim04 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotReelLamp_Anim03
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotReelLamp_Anim03 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotReelLamp_Anim02
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotReelLamp_Anim02 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotReelLamp_Anim01
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotReelLamp_Anim01 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotReelLamp_Anim00
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotReelLamp_Anim00 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotReelArray
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotReelArray : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotRareMonsterRecluit
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotRareMonsterRecluit : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotRareHandLottery
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotRareHandLottery : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotRareHandBonusLottery
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotRareHandBonusLottery : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotPseudoContinuation_Stock
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotPseudoContinuation_Stock : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotPseudoContinuation
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotPseudoContinuation : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotPayingOut
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotPayingOut : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotPamphlet
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotPamphlet : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterRefundRate
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterRefundRate : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotModeForParadise
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotModeForParadise : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMachineSoltico
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMachineSoltico : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMachineGrotta_Second
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMachineGrotta_Second : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMachineGrotta
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMachineGrotta : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMachineConditionOrbMsg
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMachineConditionOrbMsg : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMachineConditionMamonoMsg
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMachineConditionMamonoMsg : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMachineConditionFriendMsg
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMachineConditionFriendMsg : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMachineCondition
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMachineCondition : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotLongFreeze
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotLongFreeze : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotHsHandLottery
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotHsHandLottery : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotHandStopType
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotHandStopType : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotHandStopRange
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotHandStopRange : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotHandsOrder
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotHandsOrder : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotHandNmToHs
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotHandNmToHs : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotHandHsToNm
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotHandHsToNm : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotGoldSevens
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotGoldSevens : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotGamesToParadise
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotGamesToParadise : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotFakeSptProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotFakeSptProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotEtcConf
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotEtcConf : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotDrakeeEffectApProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotDrakeeEffectApProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotDrakeeEffect2_Stock
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotDrakeeEffect2_Stock : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotDrakeeEffect2
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotDrakeeEffect2 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotDrakeeEffect1_Stock
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotDrakeeEffect1_Stock : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotDrakeeEffect1Gase
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotDrakeeEffect1Gase : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotDrakeeEffect1Challenge
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotDrakeeEffect1Challenge : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotDrakeeEffect1Bonus
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotDrakeeEffect1Bonus : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotDrakeeEffect1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotDrakeeEffect1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotCutinStepupProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotCutinStepupProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotCutinColorProb
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotCutinColorProb : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotChanceZoneLottery
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotChanceZoneLottery : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBreakReplay
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBreakReplay : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBreakOffRefundSetting
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBreakOffRefundSetting : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBonusDecideHands
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBonusDecideHands : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBGMProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBGMProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBGM
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBGM : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBgChgWaitGames
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBgChgWaitGames : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBellRate
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBellRate : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBattleIchigekiGames
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBattleIchigekiGames : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBattleComebackWin
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBattleComebackWin : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBattleBackGround
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBattleBackGround : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBarChance
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBarChance : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotActNoBase
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotActNoBase : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotActControl
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotActControl : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotVariableCeiling_AT
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotVariableCeiling_AT : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotVariableCeiling
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotVariableCeiling : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotTransitionProbability_SettingValue
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotTransitionProbability_SettingValue : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotTransitionProbability_Hand
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotTransitionProbability_Hand : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotTransitionProbability_CZ
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotTransitionProbability_CZ : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotStockNumber
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotStockNumber : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotSpecialBonusRisingProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotSpecialBonusRisingProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterRecruitCorrection
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterRecruitCorrection : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotHandProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotHandProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotExtraEffect
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotExtraEffect : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotEncounteredMonsterCount
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotEncounteredMonsterCount : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotConfigurationMain
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotConfigurationMain : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotBonusProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotBonusProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MiniGameJackPotTowerSelectRate
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MiniGameJackPotTowerSelectRate : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MiniGameJackPotTowerRate
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MiniGameJackPotTowerRate : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MiniGameJackPotTowerCoin
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MiniGameJackPotTowerCoin : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MiniGameJackPotTowerAdditional
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MiniGameJackPotTowerAdditional : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MiniGameJackPotState
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MiniGameJackPotState : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MiniGameJackPotSlotRate
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MiniGameJackPotSlotRate : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MiniGameJackPotSlotProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MiniGameJackPotSlotProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MiniGameJackPotSlotFluctuations
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MiniGameJackPotSlotFluctuations : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MiniGameJackPotRouletteRate
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MiniGameJackPotRouletteRate : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MiniGameJackPotRouletteProbability
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MiniGameJackPotRouletteProbability : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MiniGameJackPotRouletteFluctuations
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MiniGameJackPotRouletteFluctuations : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MiniGameJackPotRouletteBetFraction
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MiniGameJackPotRouletteBetFraction : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MiniGameJackPotNPC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MiniGameJackPotNPC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Zukan_PhoneticNo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Zukan_PhoneticNo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_UserDefinedTagList
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_UserDefinedTagList : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TagInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TagInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Renkei_ArticleInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Renkei_ArticleInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_OverrideTranslationText
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_OverrideTranslationText : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_OddEffect_ArticleInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_OddEffect_ArticleInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_NPCList_ArticleInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_NPCList_ArticleInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Monster_ArticleInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Monster_ArticleInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotMonsterParam_ArticleInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotMonsterParam_ArticleInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MeosiSlotItemParam_ArticleInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MeosiSlotItemParam_ArticleInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MacroInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MacroInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_LetterList
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_LetterList : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ItemTable_ArticleInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ItemTable_ArticleInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_GermanCheckLastIsS
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_GermanCheckLastIsS : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_GermanCaseChangeTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_GermanCaseChangeTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_FrenchCheckVowelTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_FrenchCheckVowelTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_FixTagInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_FixTagInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Action_ArticleInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Action_ArticleInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Achievement_PhoneticNo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Achievement_PhoneticNo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataDLCItem_09
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataDLCItem_09 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataDLCItem_08
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataDLCItem_08 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataDLCItem_07
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataDLCItem_07 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataDLCItem_06
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataDLCItem_06 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataDLCItem_05
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataDLCItem_05 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataDLCItem_04
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataDLCItem_04 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataDLCItem_03
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataDLCItem_03 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataDLCItem_02
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataDLCItem_02 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataDLCItem_01
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataDLCItem_01 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextDataDLCItem_00
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextDataDLCItem_00 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ItemTable_Seed
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ItemTable_Seed : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ItemTable_Present
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ItemTable_Present : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ItemTable_EventGet
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ItemTable_EventGet : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ItemTable_Equipment
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ItemTable_Equipment : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ItemTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ItemTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TenseiSelectTable2D
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TenseiSelectTable2D : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TenseiSelectTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TenseiSelectTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TenseiScenarioFlagsTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TenseiScenarioFlagsTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TenseiParamsTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TenseiParamsTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TenseiFlagsTable2D
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TenseiFlagsTable2D : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TenseiFlagsTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TenseiFlagsTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TenseiCSWatchTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TenseiCSWatchTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentWidgetBlueprint
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentWidgetBlueprint : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentWeaponClass
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentWeaponClass : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentTexture
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentTexture : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentStaticMesh
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentStaticMesh : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentSound
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentSound : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentSkeletalMesh
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentSkeletalMesh : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentProjectileClass
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentProjectileClass : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentParticle
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentParticle : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentMaterialParameterCollection
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentMaterialParameterCollection : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentMaterial
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentMaterial : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentForceFeedback
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentForceFeedback : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentCurve
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentCurve : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentCollideEffect
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentCollideEffect : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentCameraShake
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentCameraShake : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentCameraAnim
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentCameraAnim : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentBlueprintClass
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentBlueprintClass : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentAnimMontage
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentAnimMontage : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_GameParameter
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_GameParameter : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ScenarioFlagInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ScenarioFlagInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RelationalGameFlagConfig
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RelationalGameFlagConfig : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_GameFlagDataTemporary
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_GameFlagDataTemporary : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_GameFlagDataSystem
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_GameFlagDataSystem : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_GameFlagDataQuest
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_GameFlagDataQuest : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_GameFlagDataMiniGame
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_GameFlagDataMiniGame : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_GameFlagDataGuide
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_GameFlagDataGuide : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_GameFlagDataGimmick
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_GameFlagDataGimmick : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_GameFlagDataGameProgress
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_GameFlagDataGameProgress : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_GameFlagDataCutScene
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_GameFlagDataCutScene : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ShopTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ShopTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RecipeTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RecipeTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RecipeBookTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RecipeBookTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MedalStampTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MedalStampTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MedalExchangeTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MedalExchangeTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_KaziUnderCorrection
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_KaziUnderCorrection : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_KaziSafetyAreaTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_KaziSafetyAreaTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_KaziQualityTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_KaziQualityTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_KaziLvTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_KaziLvTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_KaziCategoryTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_KaziCategoryTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_KaziActionTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_KaziActionTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_InnTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_InnTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CoinShopTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CoinShopTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CoinExchangeTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CoinExchangeTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CoinExchangeShopTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CoinExchangeShopTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ChurchTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ChurchTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_BankTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_BankTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Syuurenjou
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Syuurenjou : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_EventBattle
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_EventBattle : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MonsterSlotEffect
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MonsterSlotEffect : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_DamageEffectTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_DamageEffectTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_DamageAttributeEffectTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_DamageAttributeEffectTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CollideEffectTable
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CollideEffectTable : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_TextPackDebug
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_TextPackDebug : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_NavBuild
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_NavBuild : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_FacialPresetSample
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_FacialPresetSample : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_C_FacialPreset
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_C_FacialPreset : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CutSceneSerifuInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CutSceneSerifuInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CutSceneInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CutSceneInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CutSceneDynamicResolutionInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CutSceneDynamicResolutionInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CutSceneDuplicationTalkerInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CutSceneDuplicationTalkerInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CutSceneCoordinateAliasInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CutSceneCoordinateAliasInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CutSceneAutomaticFeedOfSpeechInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CutSceneAutomaticFeedOfSpeechInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CutSceneAnimationInfo
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CutSceneAnimationInfo : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CSAddStreamingLevel
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CSAddStreamingLevel : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_HumanFacePoseSequence
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_HumanFacePoseSequence : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_FacialAnimation
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_FacialAnimation : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_WindRandomizeVehiclePreset
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_WindRandomizeVehiclePreset : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_WindRandomizePreset
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_WindRandomizePreset : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_DynamicBoneState_Upper
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_DynamicBoneState_Upper : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_DynamicBoneState_Mantle
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_DynamicBoneState_Mantle : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_DynamicBoneState_Lower
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_DynamicBoneState_Lower : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_DynamicBoneState_Hair
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_DynamicBoneState_Hair : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Other_MaxOrMinRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Other_MaxOrMinRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Other_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Other_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Other_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Other_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_DancerSkirt_RotCancel
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_DancerSkirt_RotCancel : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_DancerSkirt_MaxOrMinRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_DancerSkirt_MaxOrMinRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_DancerSkirt_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_DancerSkirt_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_DancerSkirt_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_DancerSkirt_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtQ1_MaxOrMinRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtQ1_MaxOrMinRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtQ1_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtQ1_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtQ1_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtQ1_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1_RotCancel
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1_RotCancel : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1_MaxOrMinRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1_MaxOrMinRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Skirt_SBSkirt2_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Skirt_SBSkirt2_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Skirt_SBSkirt2_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Skirt_SBSkirt2_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Skirt_SBSkirt_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Skirt_SBSkirt_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Skirt_SBSkirt_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Skirt_SBSkirt_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Skirt_Length3_TransSyncRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Skirt_Length3_TransSyncRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Skirt_Length3_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Skirt_Length3_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Skirt_Length1_TransSyncRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Skirt_Length1_TransSyncRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Skirt_Length1_RotCancel
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Skirt_Length1_RotCancel : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Skirt_Length1_MaxOrMinRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Skirt_Length1_MaxOrMinRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P004_Skirt_RotCancel
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P004_Skirt_RotCancel : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P004_Skirt_MaxOrMinRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P004_Skirt_MaxOrMinRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P004_Skirt_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P004_Skirt_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P004_Skirt_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P004_Skirt_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P002_Skirt_RotCancel
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P002_Skirt_RotCancel : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P002_Skirt_MaxOrMinRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P002_Skirt_MaxOrMinRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P002_Skirt_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P002_Skirt_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P002_Skirt_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P002_Skirt_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P001_Skirt_RotCancel
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P001_Skirt_RotCancel : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P001_Skirt_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P001_Skirt_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P001_Skirt_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P001_Skirt_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_NorthSkirtS1_MaxOrMinRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_NorthSkirtS1_MaxOrMinRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_NorthSkirtS1_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_NorthSkirtS1_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_NorthSkirtS1_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_NorthSkirtS1_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_NmSkirtB1_Lerp2BonesAndClamp2
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_NmSkirtB1_Lerp2BonesAndClamp2 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_NmSkirtB1_AverageRot2
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_NmSkirtB1_AverageRot2 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_NmSkirtA1_RotCancel
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_NmSkirtA1_RotCancel : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_NmSkirtA1_MaxOrMinRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_NmSkirtA1_MaxOrMinRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_NmSkirtA1_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_NmSkirtA1_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_NmSkirtA1_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_NmSkirtA1_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_N008_SamaCoat_L2BAC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_N008_SamaCoat_L2BAC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_N008_SamaCoat_AR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_N008_SamaCoat_AR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HrSkirt_A_MaxOrMinRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HrSkirt_A_MaxOrMinRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HrSkirt_A_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HrSkirt_A_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HrSkirt_A_AverageRot2
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HrSkirt_A_AverageRot2 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsSideArmor_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsSideArmor_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_N004_MaxOrMinRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_N004_MaxOrMinRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_N004_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_N004_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_N004_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_N004_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_N001_MaxOrMinRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_N001_MaxOrMinRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_N001_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_N001_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_N001_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_N001_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_MaxOrMinRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_MaxOrMinRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length3_N013_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length3_N013_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length3_N013_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length3_N013_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length3_N010_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length3_N010_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length3_N010_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length3_N010_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length3_N008_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length3_N008_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length3_N008_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length3_N008_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length3_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length3_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length3_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length3_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length2_N013_L2BAC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length2_N013_L2BAC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length2_N013_AR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length2_N013_AR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length2_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length2_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length2_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length2_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FBSkirtB1_RotCancel
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FBSkirtB1_RotCancel : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FBSkirtB1_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FBSkirtB1_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FBSkirtB1_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FBSkirtB1_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FBSkirtA1_Skirt_RotCancel
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FBSkirtA1_Skirt_RotCancel : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FBSkirtA1_MaxOrMinRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FBSkirtA1_MaxOrMinRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FBSkirtA1_Lerp2BonesAndClamp
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FBSkirtA1_Lerp2BonesAndClamp : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FBSkirtA1_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FBSkirtA1_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SwimSkirt_P006_RC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SwimSkirt_P006_RC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SwimSkirt_P006_L2BAC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SwimSkirt_P006_L2BAC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SwimSkirt_P006_AR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SwimSkirt_P006_AR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1_P008_RC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1_P008_RC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1_P008_MOMR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1_P008_MOMR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1_P008_L2BAC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1_P008_L2BAC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1_P008_AR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1_P008_AR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1S_P001_RC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1S_P001_RC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1S_P001_MOMR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1S_P001_MOMR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1S_P001_L2BAC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1S_P001_L2BAC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1S_P001_AR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1S_P001_AR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1L_P006_RC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1L_P006_RC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1L_P006_L2BAC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1L_P006_L2BAC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1L_P006_AR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1L_P006_AR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1L_P001_RC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1L_P001_RC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1L_P001_MOMR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1L_P001_MOMR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1L_P001_L2BAC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1L_P001_L2BAC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1L_P001_AR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1L_P001_AR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_PrinSkirt_P006_RC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_PrinSkirt_P006_RC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_PrinSkirt_P006_L2BAC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_PrinSkirt_P006_L2BAC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_PrinSkirt_P006_AR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_PrinSkirt_P006_AR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P002_DelayLegPants_AR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P002_DelayLegPants_AR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_NmSkirtD1_MOMR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_NmSkirtD1_MOMR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_NmSkirtD1_L2BAC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_NmSkirtD1_L2BAC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_NmSkirtD1_AR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_NmSkirtD1_AR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P008_MOMR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P008_MOMR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P008_L2BAC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P008_L2BAC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P008_AR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P008_AR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P004_MOMR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P004_MOMR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P004_L2BAC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P004_L2BAC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P004_AR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P004_AR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P002_MOMR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P002_MOMR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P002_L2BAC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P002_L2BAC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P002_AR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P002_AR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P001_MOMR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P001_MOMR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P001_L2BAC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P001_L2BAC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P001_AR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P001_AR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FBSkirtA1_P006_MOMR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FBSkirtA1_P006_MOMR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FBSkirtA1_P006_L2BAC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FBSkirtA1_P006_L2BAC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FBSkirtA1_P006_AR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FBSkirtA1_P006_AR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_BunnySkirt_P006_MOMR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_BunnySkirt_P006_MOMR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_BunnySkirt_P006_AR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_BunnySkirt_P006_AR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Bt_NimaSkirt_MOMR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Bt_NimaSkirt_MOMR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Bt_NimaSkirt_L2BAC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Bt_NimaSkirt_L2BAC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Bt_NimaSkirt_AR
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Bt_NimaSkirt_AR : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_BodyExtra_MaxOrMinRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_BodyExtra_MaxOrMinRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_BodyExtra_AverageRot
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_BodyExtra_AverageRot : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_P005_ParadeFeatherBlack
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_P005_ParadeFeatherBlack : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_P001_ParadeFeather
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_P001_ParadeFeather : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_NPC_ParadeFar
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_NPC_ParadeFar : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_SimRearHood
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_SimRearHood : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_SimCollarA_N008
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_SimCollarA_N008 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_SimCollarA
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_SimCollarA : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_LR_ShoulderClothA1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_LR_ShoulderClothA1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_N013_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_N013_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_N013_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_N013_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_up_Cs1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_up_Cs1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_low_Cs1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_low_Cs1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleB_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleB_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleB_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleB_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_P008_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_P008_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_P008_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_P008_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_P007_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_P007_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_P007_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_P007_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_P004_up_Cs1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_P004_up_Cs1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_P004_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_P004_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_P004_low_Cs1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_P004_low_Cs1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_P004_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_P004_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_N014_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_N014_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_N014_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_N014_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_N002_up_Cs1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_N002_up_Cs1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_N002_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_N002_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_N002_low_Cs1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_N002_low_Cs1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleC_N002_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleC_N002_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_MantleA
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_MantleA : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_CapeMantle_N002
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_CapeMantle_N002 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_CapeMantle
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_CapeMantle : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_TailSkirtA1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_TailSkirtA1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_LR_NpcPantsI3
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_LR_NpcPantsI3 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_LR_LoinclothA1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_LR_LoinclothA1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_DancerSkirt_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_DancerSkirt_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_DancerSkirt_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_DancerSkirt_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtQ1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtQ1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SlideSkirt_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SlideSkirt_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SlideSkirt_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SlideSkirt_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P004_Skirt_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P004_Skirt_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P004_Skirt_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P004_Skirt_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P002_Skirt
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P002_Skirt : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P002_Loin_Up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P002_Loin_Up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P001_Skirt_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P001_Skirt_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P001_Skirt_low_Cs1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P001_Skirt_low_Cs1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P001_Skirt_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P001_Skirt_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_NorthSkirtS1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_NorthSkirtS1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_RtEx_NmSkirtB1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_RtEx_NmSkirtB1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_NmSkirtA1_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_NmSkirtA1_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_NmSkirtA1_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_NmSkirtA1_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_N008_SamaCoat
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_N008_SamaCoat : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_N004_Up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_N004_Up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_N004_Low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_N004_Low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_N001_Up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_N001_Up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_N001_Low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_N001_Low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_Up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_Up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_Low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_Low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length3_N013
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length3_N013 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length3_N010
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length3_N010 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length3_N008
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length3_N008 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length3
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length3 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length2_N013
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length2_N013 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FtSkirt_Length2
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FtSkirt_Length2 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FBSkirtB1_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FBSkirtB1_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FBSkirtB1_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FBSkirtB1_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FBSkirtA1_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FBSkirtA1_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FBSkirtA1_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FBSkirtA1_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_KtAcce
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_KtAcce : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SwimSkirt_P006
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SwimSkirt_P006 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1S_P008
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1S_P008 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1S_P001
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1S_P001 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1L_P006_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1L_P006_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1L_P006_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1L_P006_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1L_P001_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1L_P001_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SouthSkirtK1L_P001_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SouthSkirtK1L_P001_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Skirt_Length4
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Skirt_Length4 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Skirt_Length3
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Skirt_Length3 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Skirt_Length2
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Skirt_Length2 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Skirt_Length1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Skirt_Length1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SBSkirt2
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SBSkirt2 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_SBSkirt
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_SBSkirt : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_RCSkirt_Length4
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_RCSkirt_Length4 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_RCSkirt_Length3
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_RCSkirt_Length3 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_PrinSkirt_P006_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_PrinSkirt_P006_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_PrinSkirt_P006_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_PrinSkirt_P006_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P004_Skirt
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P004_Skirt : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P002_DelayLegPants
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P002_DelayLegPants : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_P001_Skirt
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_P001_Skirt : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_NmSkirtD1_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_NmSkirtD1_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_NmSkirtD1_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_NmSkirtD1_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HRSkirtA
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HRSkirtA : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsSideArmor
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsSideArmor : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P008_Up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P008_Up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P008_Low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P008_Low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P004_Up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P004_Up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P004_Low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P004_Low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P002_Up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P002_Up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P002_Low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P002_Low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P001_Up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P001_Up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor_P001_Low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor_P001_Low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_HipsArmor
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_HipsArmor : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FBSkirtA1_P006_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FBSkirtA1_P006_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_FBSkirtA1_P006_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_FBSkirtA1_P006_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_BunnySkirt_P006
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_BunnySkirt_P006 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Bt_NimaSkirt_Up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Bt_NimaSkirt_Up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_RtEx_Bt_NimaSkirt_Low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_RtEx_Bt_NimaSkirt_Low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_ShortHairUpMidLow
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_ShortHairUpMidLow : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_PlayerHair
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_PlayerHair : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_P004ShortHair
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_P004ShortHair : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_N104Hair
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_N104Hair : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_LR_RearHairA
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_LR_RearHairA : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_C_RearHairH
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_C_RearHairH : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_C_RearHairA_Up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_C_RearHairA_Up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_C_RearHairA_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_C_RearHairA_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_C_HairTailB1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_C_HairTailB1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_C_HairTailA1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_C_HairTailA1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_C_BeardB
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_C_BeardB : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Sim_BeardD1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Sim_BeardD1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_SideHairF1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_SideHairF1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_R_FrontHairE1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_R_FrontHairE1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_R_FrontHairE_up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_R_FrontHairE_up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_R_FrontHairE_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_R_FrontHairE_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_RearHairP1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_RearHairP1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_RearHairKPP
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_RearHairKPP : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_RearHairILL
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_RearHairILL : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_P008Hair
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_P008Hair : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_P004Hair_Cs1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_P004Hair_Cs1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_P004Hair
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_P004Hair : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_P003Hair_Cs2
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_P003Hair_Cs2 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_P003Hair_Cs1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_P003Hair_Cs1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_P003Hair
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_P003Hair : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_NeckHoodA1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_NeckHoodA1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_N101Hair
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_N101Hair : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_N001Hair
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_N001Hair : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_LR_SideHairL1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_LR_SideHairL1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_LR_SideHairK1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_LR_SideHairK1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_LR_SideHairJ1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_LR_SideHairJ1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_LR_SideHairI1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_LR_SideHairI1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_LR_RearHairD1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_LR_RearHairD1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_HeadVeilC1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_HeadVeilC1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_HeadVeilB1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_HeadVeilB1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_C_RearHairQ1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_C_RearHairQ1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_C_RearHairN1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_C_RearHairN1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_C_RearHairL1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_C_RearHairL1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_C_RearHairG1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_C_RearHairG1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_C_RearHairB1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_C_RearHairB1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_ChestHairA1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_ChestHairA1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Pose_BeardE1
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Pose_BeardE1 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Upper
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Upper : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Other_Up
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Other_Up : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Other_low
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Other_low : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Other
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Other : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Mantle
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Mantle : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_lower
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_lower : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_HairExtra
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_HairExtra : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Hair
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Hair : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_BodyExtra
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_BodyExtra : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_WeaponHiddenCoordinate
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_WeaponHiddenCoordinate : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_MaterialCoordinate
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_MaterialCoordinate : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_FacialPreset
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_FacialPreset : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CoordinateLookAtBoneSettingsToCutScene
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CoordinateLookAtBoneSettingsToCutScene : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CoordinateLookAtBoneSettingsToBattle
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CoordinateLookAtBoneSettingsToBattle : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CoordinateLookAtBoneSettings
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CoordinateLookAtBoneSettings : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CoordinateFootIKSettings
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CoordinateFootIKSettings : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CharaLookByMaps
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CharaLookByMaps : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_CharacterLODBounds
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_CharacterLODBounds : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AttachedProps_P008
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AttachedProps_P008 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AttachedProps_P005
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AttachedProps_P005 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_PokerTakaraBakoCoin
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_PokerTakaraBakoCoin : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AttachedProps_P003
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AttachedProps_P003 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AttachedProps_P002
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AttachedProps_P002 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AttachedProps_P004
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AttachedProps_P004 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AttachedProps_P001
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AttachedProps_P001 : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AttachedProps_NPC
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AttachedProps_NPC : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_AttachedProps_Monster
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_AttachedProps_Monster : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_BattleHazukasiiNoroiText
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_BattleHazukasiiNoroiText : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_BattleFukidasiText
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_BattleFukidasiText : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_BattleFukidasiPeculiarWords
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_BattleFukidasiPeculiarWords : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_BattleFukidasi
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_BattleFukidasi : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ActionTargetIcon
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ActionTargetIcon : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ActionTag
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ActionTag : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ActionSecondCheck
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ActionSecondCheck : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ActionOddEffect
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ActionOddEffect : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ActionNakamaYobi
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ActionNakamaYobi : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ActionMultiAttack
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ActionMultiAttack : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ActionHitOrder
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ActionHitOrder : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ActionDamage
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ActionDamage : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ActionCamera
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ActionCamera : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ActionBattleText
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ActionBattleText : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ActionAIEvaluateScoreCheck
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ActionAIEvaluateScoreCheck : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ActionAI
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ActionAI : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_Action
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_Action : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackLDT_ResidentBlueprintFunctionLibrary_Preload
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_ResidentBlueprintFunctionLibrary_Preload : public FListDataTableHandle
{

};

// ScriptStruct JackGame.JackMaterialUpdaterManager
// 0x0068
struct FJackMaterialUpdaterManager
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	TArray<class UJackMaterialUpdater*>                MaterialUpdaters;                                         // 0x0008(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData01[0x50];                                      // 0x0018(0x0050) MISSED OFFSET
};

// ScriptStruct JackGame.JackMeosiSlotConfigurationParam
// 0x000C
struct FJackMeosiSlotConfigurationParam
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct JackGame.JackMeosiSlotReelParam
// 0x0010
struct FJackMeosiSlotReelParam
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackMeosiSlotReelMatrix
// 0x0030
struct FJackMeosiSlotReelMatrix
{
	unsigned char                                      UnknownData00[0x30];                                      // 0x0000(0x0030) MISSED OFFSET
};

// ScriptStruct JackGame.JackMeosiSlotSoundBGM
// 0x0010
struct FJackMeosiSlotSoundBGM
{
	bool                                               bIsStockBGM;                                              // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	struct FName                                       BGMID;                                                    // 0x0008(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMiniGameJackPotLottey
// 0x0008
struct FJackMiniGameJackPotLottey
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackPokerDebugTreasureInfo
// 0x0028
struct FJackPokerDebugTreasureInfo
{
	TArray<struct FName>                               ItemName;                                                 // 0x0000(0x0010) (Edit, ZeroConstructor)
	TArray<int>                                        TreasureNum;                                              // 0x0010(0x0010) (Edit, ZeroConstructor)
	int                                                StartIndex;                                               // 0x0020(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDebugCommandParameter
// 0x0018
struct FJackDebugCommandParameter
{
	bool                                               bDispatch;                                                // 0x0000(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackDebugCommandForMonster>           CommandType;                                              // 0x0001(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x6];                                       // 0x0002(0x0006) MISSED OFFSET
	struct FName                                       ArgMotangeKey;                                            // 0x0008(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bBlow;                                                    // 0x0010(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bAttackRepeled;                                           // 0x0011(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	bool                                               bEncountLeader;                                           // 0x0012(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x5];                                       // 0x0013(0x0005) MISSED OFFSET
};

// ScriptStruct JackGame.JackFieldAICommand_Raid
// 0x0008 (0x0018 - 0x0010)
struct FJackFieldAICommand_Raid : public FJackCommand
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0010(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableNativizationAssetPath
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableNativizationAssetPath : public FTableRowBase
{
	struct FName                                       NativizationAsset;                                        // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackDataTableNativizationAsset
// 0x0008 (0x0010 - 0x0008)
struct FJackDataTableNativizationAsset : public FTableRowBase
{
	class UObject*                                     NativizationAsset;                                        // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackObjectContainer
// 0x0080
struct FJackObjectContainer
{
	TArray<struct FSoftObjectPath>                     Assets;                                                   // 0x0000(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FSoftClassPath>                      Classes;                                                  // 0x0010(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData00[0x60];                                      // 0x0020(0x0060) MISSED OFFSET
};

// ScriptStruct JackGame.JackOddEffect_ClearResult
// 0x0018
struct FJackOddEffect_ClearResult
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct JackGame.JackOddEffect_SetResult
// 0x0028
struct FJackOddEffect_SetResult
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) MISSED OFFSET
};

// ScriptStruct JackGame.JackOmakeTextData
// 0x0028
struct FJackOmakeTextData
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) MISSED OFFSET
};

// ScriptStruct JackGame.JackPhotoModoScreenShotSavePath
// 0x0030
struct FJackPhotoModoScreenShotSavePath
{
	struct FString                                     PathName;                                                 // 0x0000(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     PrefixName;                                               // 0x0010(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	struct FString                                     SaveDataId;                                               // 0x0020(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackRouletteSegmentResult
// 0x000C
struct FJackRouletteSegmentResult
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct JackGame.JackRouletteSegmentData
// 0x001C
struct FJackRouletteSegmentData
{
	unsigned char                                      UnknownData00[0x1C];                                      // 0x0000(0x001C) MISSED OFFSET
};

// ScriptStruct JackGame.JackRouletteBetCoinData
// 0x0018
struct FJackRouletteBetCoinData
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct JackGame.JackDataTableRouletteCoinCount
// 0x0008
struct FJackDataTableRouletteCoinCount
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackRouletteWheelInfo
// 0x0008
struct FJackRouletteWheelInfo
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackMiniGameSlotCoinCount
// 0x0008
struct FJackMiniGameSlotCoinCount
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackMiniGameSlotReelStartInfo
// 0x000C
struct FJackMiniGameSlotReelStartInfo
{
	float                                              Delay;                                                    // 0x0000(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                StopReelIndex;                                            // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              FreeRollTime;                                             // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackTitleItemsResponse
// 0x0030
struct FJackTitleItemsResponse
{
	unsigned char                                      UnknownData00[0x30];                                      // 0x0000(0x0030) MISSED OFFSET
};

// ScriptStruct JackGame.JackAocItemsResponse
// 0x0040
struct FJackAocItemsResponse
{
	unsigned char                                      UnknownData00[0x40];                                      // 0x0000(0x0040) MISSED OFFSET
};

// ScriptStruct JackGame.JackTitleItem
// 0x0060
struct FJackTitleItem
{
	unsigned char                                      UnknownData00[0x60];                                      // 0x0000(0x0060) MISSED OFFSET
};

// ScriptStruct JackGame.JackAocItem
// 0x0068
struct FJackAocItem
{
	unsigned char                                      UnknownData00[0x68];                                      // 0x0000(0x0068) MISSED OFFSET
};

// ScriptStruct JackGame.JackItemTag
// 0x0020
struct FJackItemTag
{
	unsigned char                                      UnknownData00[0x20];                                      // 0x0000(0x0020) MISSED OFFSET
};

// ScriptStruct JackGame.JackMiniGameJackPotData
// 0x000C
struct FJackMiniGameJackPotData
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct JackGame.JackMiniGameFusigiKaziData
// 0x0CA0
struct FJackMiniGameFusigiKaziData
{
	unsigned char                                      UnknownData00[0xCA0];                                     // 0x0000(0x0CA0) MISSED OFFSET
};

// ScriptStruct JackGame.JackMiniGameMeosiSlotData
// 0xAD04
struct FJackMiniGameMeosiSlotData
{
	unsigned char                                      UnknownData00[0xAD04];                                    // 0x0000(0xAD04) MISSED OFFSET
};

// ScriptStruct JackGame.JackMiniGameSlotData
// 0x0001
struct FJackMiniGameSlotData
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackMiniGamePokerData
// 0x0001
struct FJackMiniGamePokerData
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackMiniGameRouletteData
// 0x0001
struct FJackMiniGameRouletteData
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackMiniGameUmaRaceData
// 0x00F0
struct FJackMiniGameUmaRaceData
{
	unsigned char                                      UnknownData00[0xF0];                                      // 0x0000(0x00F0) MISSED OFFSET
};

// ScriptStruct JackGame.JackVoiceDramaData
// 0x0018
struct FJackVoiceDramaData
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct JackGame.JackSaveGameHeader
// 0x0060
struct FJackSaveGameHeader
{
	unsigned char                                      UnknownData00[0x60];                                      // 0x0000(0x0060) MISSED OFFSET
};

// ScriptStruct JackGame.JackGraphicsOption
// 0x0030
struct FJackGraphicsOption
{
	unsigned char                                      UnknownData00[0x30];                                      // 0x0000(0x0030) MISSED OFFSET
};

// ScriptStruct JackGame.JackStreamLevelAction
// 0x0010
struct FJackStreamLevelAction
{
	struct FName                                       LevelPackageName;                                         // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	EJackLevelStreamingRequest                         LevelStreamingRequest;                                    // 0x0008(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	EJackVisibility                                    LevelVisibility;                                          // 0x0009(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x000A(0x0002) MISSED OFFSET
	int                                                LODIndex;                                                 // 0x000C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackEnableStringStructs
// 0x0018
struct FJackEnableStringStructs
{
	struct FString                                     Command;                                                  // 0x0000(0x0010) (Edit, BlueprintVisi, ZeroConstructor)
	bool                                               bEnable;                                                  // 0x0010(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
};

// ScriptStruct JackGame.JackPartyTalkDataTableDic
// 0x0010
struct FJackPartyTalkDataTableDic
{
	TEnumAsByte<EJackScenarioID>                       ScenarioID;                                               // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0001(0x0007) MISSED OFFSET
	class UDataTable*                                  PartyTalkData;                                            // 0x0008(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackTextTagValue
// 0x0001
struct FJackTextTagValue
{
	unsigned char                                      UnknownData00[0x1];                                       // 0x0000(0x0001) MISSED OFFSET
};

// ScriptStruct JackGame.JackTargetLocationInfo
// 0x0018
struct FJackTargetLocationInfo
{
	unsigned char                                      UnknownData00[0x4];                                       // 0x0000(0x0004) MISSED OFFSET
	struct FVector                                     TargetLocation;                                           // 0x0004(0x000C) (Edit, IsPlainOldData)
	TWeakObjectPtr<class AJackCharacter>               TargetCharacter;                                          // 0x0010(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackCharacterDamageAttributeEffectContainer
// 0x0010
struct FJackCharacterDamageAttributeEffectContainer
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackExtraCollideEffects
// 0x0040 (0x00B8 - 0x0078)
struct FJackExtraCollideEffects : public FJackCollideEffects
{
	struct FJackEffects                                ExtraEffects;                                             // 0x0078(0x0040) (Edit, DisableEditOnInstance)
};

// ScriptStruct JackGame.JackAttachEffect
// 0x0010
struct FJackAttachEffect
{
	class UParticleSystem*                             Effect;                                                   // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	struct FName                                       SocketName;                                               // 0x0008(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackIntTagDict
// 0x0010
struct FJackIntTagDict
{
	struct FName                                       Name;                                                     // 0x0000(0x0008) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                Value;                                                    // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackDebugSetting
// 0x000B
struct FJackDebugSetting
{
	unsigned char                                      UnknownData00[0xB];                                       // 0x0000(0x000B) MISSED OFFSET
};

// ScriptStruct JackGame.JackDebugSettingInfo
// 0x000A
struct FJackDebugSettingInfo
{
	unsigned char                                      UnknownData00[0xA];                                       // 0x0000(0x000A) MISSED OFFSET
};

// ScriptStruct JackGame.JackErrorInfo
// 0x0008
struct FJackErrorInfo
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackSymbolSEPos
// 0x0008
struct FJackSymbolSEPos
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackSortSymbol
// 0x0008
struct FJackSortSymbol
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackMacroReplaceInfo
// 0x000C
struct FJackMacroReplaceInfo
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
};

// ScriptStruct JackGame.JackReferDataInfo
// 0x00E0
struct FJackReferDataInfo
{
	unsigned char                                      UnknownData00[0xE0];                                      // 0x0000(0x00E0) MISSED OFFSET
};

// ScriptStruct JackGame.JackAnalysisMacroInfo
// 0x0028
struct FJackAnalysisMacroInfo
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) MISSED OFFSET
};

// ScriptStruct JackGame.JackKeyWordInfo
// 0x0070
struct FJackKeyWordInfo
{
	unsigned char                                      UnknownData00[0x70];                                      // 0x0000(0x0070) MISSED OFFSET
};

// ScriptStruct JackGame.JackUIKeyEventData
// 0x0008
struct FJackUIKeyEventData
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackUmaRaceHealParam
// 0x0008
struct FJackUmaRaceHealParam
{
	bool                                               bIsUse;                                                   // 0x0000(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0001(0x0003) MISSED OFFSET
	float                                              Heal;                                                     // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUmaRaceSplineData
// 0x0010
struct FJackUmaRaceSplineData
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackUmaRaceEntryData
// 0x0010
struct FJackUmaRaceEntryData
{
	struct FName                                       PlayerName;                                               // 0x0000(0x0008) (Edit, ZeroConstructor, IsPlainOldData)
	float                                              BaseSpeedRate;                                            // 0x0008(0x0004) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackFusigiKaziActionData
// 0x0014
struct FJackFusigiKaziActionData
{
	unsigned char                                      UnknownData00[0x14];                                      // 0x0000(0x0014) MISSED OFFSET
};

// ScriptStruct JackGame.JackFusigiKaziTurnStartEffect
// 0x0003
struct FJackFusigiKaziTurnStartEffect
{
	unsigned char                                      UnknownData00[0x3];                                       // 0x0000(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackFusigiKaziGaugeData
// 0x0028
struct FJackFusigiKaziGaugeData
{
	float                                              SafetyArea_Min;                                           // 0x0000(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              SafetyArea_Max;                                           // 0x0004(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              IdealVal;                                                 // 0x0008(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              GaugeHP;                                                  // 0x000C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              GaugeMaxHP;                                               // 0x0010(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              GaugeWidth;                                               // 0x0014(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	bool                                               MaterialSpecialFlag;                                      // 0x0018(0x0001) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0019(0x0003) MISSED OFFSET
	float                                              GaugeReferenceHP;                                         // 0x001C(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	float                                              GaugeMoveTimer;                                           // 0x0020(0x0004) (Edit, BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0024(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGCustomActionFlowData
// 0x0010
struct FJackUMGCustomActionFlowData
{
	struct FName                                       ActionID;                                                 // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackUMGUIActionFlow>                  ActionFlow;                                               // 0x0008(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	EJackActionExtentType                              ExtentType;                                               // 0x0009(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               bResult;                                                  // 0x000A(0x0001) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x000B(0x0005) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGNoEquipmentSet
// 0x0080
struct FJackUMGNoEquipmentSet
{
	struct FName                                       Sword;                                                    // 0x0000(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Dagger;                                                   // 0x0008(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Ax;                                                       // 0x0010(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Stick;                                                    // 0x0018(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Boomerang;                                                // 0x0020(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       DoubleSword;                                              // 0x0028(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Spear;                                                    // 0x0030(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Staff;                                                    // 0x0038(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Claw;                                                     // 0x0040(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Whip;                                                     // 0x0048(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Handedness;                                               // 0x0050(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Hand;                                                     // 0x0058(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Head;                                                     // 0x0060(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Body;                                                     // 0x0068(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Accessory1;                                               // 0x0070(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	struct FName                                       Accessory2;                                               // 0x0078(0x0008) (Edit, BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGEquipmentResultData
// 0x0018
struct FJackUMGEquipmentResultData
{
	TEnumAsByte<EJackUMGEquipmentResult>               ResultType;                                               // 0x0000(0x0001) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackItem_Bag>                         EquipmentBagType;                                         // 0x0001(0x0001) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<EJackItem_Bag>                         TakenOutBagType;                                          // 0x0002(0x0001) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x5];                                       // 0x0003(0x0005) MISSED OFFSET
	struct FName                                       EquipmentItemId;                                          // 0x0008(0x0008) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	struct FName                                       ReleaseItemId;                                            // 0x0010(0x0008) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGVisitMapInfo
// 0x0010
struct FJackUMGVisitMapInfo
{
	struct FName                                       MapId;                                                    // 0x0000(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SortNo;                                                   // 0x0008(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x000C(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackMantanActionResult
// 0x0010
struct FJackMantanActionResult
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
	class UJackGameCharacter*                          Target;                                                   // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackMantanActionInfo
// 0x0038
struct FJackMantanActionInfo
{
	unsigned char                                      UnknownData00[0x38];                                      // 0x0000(0x0038) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGVisitMonsterCountList
// 0x0018
struct FJackUMGVisitMonsterCountList
{
	struct FName                                       NameId;                                                   // 0x0000(0x0008) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                CountAll;                                                 // 0x0008(0x0004) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                CountKill;                                                // 0x000C(0x0004) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	int                                                SortNumber;                                               // 0x0010(0x0004) (BlueprintVisi, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGItemNameList
// 0x0020
struct FJackUMGItemNameList
{
	struct FName                                       ItemID;                                                   // 0x0000(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                SortNo;                                                   // 0x0008(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	int                                                PhoneticNo;                                               // 0x000C(0x0004) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	bool                                               AlreadyHave;                                              // 0x0010(0x0001) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x7];                                       // 0x0011(0x0007) MISSED OFFSET
	struct FName                                       ZukanId;                                                  // 0x0018(0x0008) (BlueprintVisi, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct JackGame.JackUMGOddEffectTimer
// 0x0010
struct FJackUMGOddEffectTimer
{
	unsigned char                                      UnknownData00[0x10];                                      // 0x0000(0x0010) MISSED OFFSET
};

// ScriptStruct JackGame.JackUMGMapSymbolDrawContext
// 0x0028
struct FJackUMGMapSymbolDrawContext
{
	class UJackUMGMapController*                       MapController;                                            // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	class UCanvas*                                     Canvas;                                                   // 0x0008(0x0008) (ZeroConstructor, IsPlainOldData)
	struct FVector2D                                   ViewSize;                                                 // 0x0010(0x0008) (IsPlainOldData)
	float                                              ZoomScale;                                                // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              ZoomFactor;                                               // 0x001C(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              SymbolScale;                                              // 0x0020(0x0004) (ZeroConstructor, IsPlainOldData)
	bool                                               bIgnoreMapSymbolBaseScale;                                // 0x0024(0x0001) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x3];                                       // 0x0025(0x0003) MISSED OFFSET
};

// ScriptStruct JackGame.JackVoiceTimelineBlinkEnableKey
// 0x0008
struct FJackVoiceTimelineBlinkEnableKey
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackVoiceTimelineEyeCloseRateKey
// 0x0008
struct FJackVoiceTimelineEyeCloseRateKey
{
	unsigned char                                      UnknownData00[0x8];                                       // 0x0000(0x0008) MISSED OFFSET
};

// ScriptStruct JackGame.JackVoiceTimelineUpperFaceKey
// 0x0018
struct FJackVoiceTimelineUpperFaceKey
{
	unsigned char                                      UnknownData00[0x18];                                      // 0x0000(0x0018) MISSED OFFSET
};

// ScriptStruct JackGame.JackBulletData
// 0x0018
struct FJackBulletData
{
	bool                                               bInfiniteAmmo;                                            // 0x0000(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	bool                                               bInfiniteClip;                                            // 0x0001(0x0001) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x2];                                       // 0x0002(0x0002) MISSED OFFSET
	int                                                MaxAmmo;                                                  // 0x0004(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                AmmoPerClip;                                              // 0x0008(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	int                                                InitialClips;                                             // 0x000C(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              TimeBetweenShots;                                         // 0x0010(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              NoAnimReloadDuration;                                     // 0x0014(0x0004) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct JackGame.JackLDT_NPCReactionAnimation
// 0x0000 (0x0010 - 0x0010)
struct FJackLDT_NPCReactionAnimation : public FListDataTableHandle
{

};

}

#ifdef _MSC_VER
	#pragma pack(pop)
#endif
